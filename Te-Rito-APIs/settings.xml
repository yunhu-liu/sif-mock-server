<?xml version="1.0" encoding="UTF-8"?>
<con:interface xsi:type="con:RestService" id="04fd8bbd-0eb9-4e12-a8b1-6eaf2882388d" name="Te Rito APIs" type="rest_ex" wadlVersion="https://swagger.io/openapiv3/specification" definitionUrl="file:/C:/TeRito%20APIs/Te%20Rito%20APIs%20(v3.2-rc2)/TeRito-OpenAPI-SandboxRelease-strict-noRefs.json" xmlns:con="http://eviware.com/soapui/config" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <con:description><![CDATA[**Derived from:** SIF Data Model (New Zealand) v3.2 (rc2)
**Release Date:** 12-Jan-2021

### Useful Files:
<table style="border:none">
  <tr>
    <td style="text-align:center; min-width:160px">
      <a href="../eaModel-v3.2-rc2/index.htm" target="_eaModel"><img width="48px" src="../ea.png"/><br/>Sparx EA Data Model</a>
    </td>
    <td style="text-align:center; min-width:160px">
      <a href="http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/index.html" target="_sifnz"><img src="../zone128.png" width="48px"/><br/>SIF NZ Data Model</a>
    </td>
    <td style="text-align:center; min-width:160px">
      <a href="schemas"><img width="48px" target="_schemas" src="../schemas.png"/><br/>JSON Schemas</a>
    </td>
  </tr>
  <tr>
    <td style="text-align:center; min-width:160px">
      <a href="TeRito-OpenAPI-SandboxRelease-strict-noRefs.zip"><img width="48px" src="../openAPI.png"/><br/>TeRito OpenAPI Sandbox</a>
    </td>
    <td style="text-align:center; min-width:160px">
      <a href="diffReport.html" target="_diff"><img width="48px" src="../diff.png"/><br/>Diff Report</a>
    </td>
    <td style="text-align:center; min-width:160px">
      <a href="TeRito-OpenAPI-strict-noRefs.zip"><img width="48px" src="../openAPI.png"/><br/>TeRito OpenAPI Complete</a>
    </td>
  </tr>
  <tr>
    <td style="text-align:center; min-width:160px">
      <a href="TeRito-postman-collection.json"><img width="48px" src="../postman.png"/><br/>Postman Collection</a>
    </td>
    <td style="text-align:center; min-width:160px">
      <a href="docker-compose.yaml"><img width="48px" src="../docker.png"/><br/> Mock Server</a>
    </td>
    <td style="text-align:center; min-width:160px">
      <a href="../SampleData/index.html"><img width="48px" src="../excel.png"/><br/>Sample Data</a>
    </td>
</table>

Previous releases of Te Rito APIs are available from <a href="../history.html" target="_hstry">Release History</a>
# Te Rito Data Domains
<p>
  <img src="domains/zone512.png" usemap="#DomainMap" />
  <map id="DomainMap" name="DomainMap">
    <area title="Organisation" href="TeRito-OpenAPI-organisation.html#tag/OrganisationOverview" shape="rect" coords="71,65,166,126" />
    <area title="Student &amp; Whānau" href="TeRito-OpenAPI-whanau.html#tag/StudentWhanauOverview" shape="rect" coords="284,331,375,390" />
    <area title="Enrolment" href="TeRito-OpenAPI-enrolment.html#tag/EnrolmentOverview" shape="rect" coords="206,0,301,60" />
    <area title="Hauora / Wellbeing" href="TeRito-OpenAPI-hauora.html#tag/HauoraWellbeingOverview" shape="rect" coords="37,214,132,273" />
    <area title="Aromatawai / Assessment" href="TeRito-OpenAPI-aromatawai.html#tag/AromatawaiAssessmentOverview" shape="rect" coords="378,214,471,272" />
    <area title="Timetable" href="TeRito-OpenAPI-attendance.html#tag/ScheduleAttendanceOverview" shape="rect" coords="132,333,221,391" />
    <area title="Attendance" href="TeRito-OpenAPI-attendance.html#tag/ScheduleAttendanceOverview" shape="rect" coords="344,65,437,126" />
  </map>
</p>

Te Rito includes 45 data objects that are grouped into the following 7 SIF data domains:
  - [Organisation & Staff](TeRito-OpenAPI-organisation.html#tag/OrganisationOverview)
  - [Timetable](TeRito-OpenAPI-attendance.html#tag/ScheduleAttendanceOverview)
  - [Student & Whānau](TeRito-OpenAPI-whanau.html#tag/StudentWhanauOverview)
  - [Enrolment](TeRito-OpenAPI-enrolment.html#tag/EnrolmentOverview)
  - [Attendance](TeRito-OpenAPI-attendance.html#tag/ScheduleAttendanceOverview)
  - [Aromatawai/Assessment](TeRito-OpenAPI-aromatawai.html#tag/AromatawaiAssessmentOverview)
  - [Hauora/Wellbeing](TeRito-OpenAPI-hauora.html#tag/HauoraWellbeingOverview)



  
# Getting Started

The Te Rito APIs are defined in the `.yaml` and `.json` files contained in the following ZIP files:

<a href="TeRito-OpenAPI-SandboxRelease-strict-noRefs.zip"><img width="32px" src="../openAPI.png"/>TeRito OpenAPI Sandbox</a> contains the subset of API endpoints
  that are used by Te Rito; details of these endpoints in each of the 7 data domains are presented in the <a href="#section/Te-Rito-Data-Domains">Te Rito Data Domains</a>.

<a href="TeRito-OpenAPI-strict-noRefs.zip"><img width="32px" src="../openAPI.png"/>TeRito OpenAPI Complete</a> describes all 45 data objects defined by Te Rito;  details of the endpoints be viewed by selecting all
available OAuth Scopes.

**Note**: We provide the specfication in both `.yaml` and `.json` formats to ensure you will be able to use the API specification 
with any of the many [OpenAPI Tools](https://openapi.tools/) that are availble.

## Te Rito Mock Server

Te Rito provides a Mock Server as a docker image that implements the following Te Rito endpoints:
  1. [Organisation](TeRito-OpenAPI-organisation.html#tag/Organisation)
  2. [OrganisationRelationship](TeRito-OpenAPI-organisation.html#tag/OrganisationRelationship)
  3. [StaffPersonal](TeRito-OpenAPI-organisation.html#tag/StaffPersonal)
  4. [StaffAssignment](TeRito-OpenAPI-organisation.html#tag/StaffAssignment)
  5. [StudentPersonal](TeRito-OpenAPI-enrolment.html#/tag/StudentPersonal)
  6. [StudentProviderEnrolment](TeRito-OpenAPI-enrolment.html#/tag/StudentProviderEnrolment)
  7. [Search](TeRito-OpenAPI-organisation.html#tag/Search)

The mock server provides Te Rito connecting clients (School Management Systems, etc.) a reference implementation of the Te Rito APIs, allowing clients
to make POST/GET/PUT and PATCH calls and get realistic API responses to their requests:

The following functions have been implemented:
  1. Data object APIs implement single and bulk `GET`, `POST`, `PUT` and PATCH methods.
  2. `sif/Search` API provides search by Object (`StaffPersonal` or `StudentPersonal`); using `pattern`, or `query`; and pagination of result sets using `page` and `max` query parameters.

The mock server has the following limitations:
  1. Query parameters (`fields`, `page`, `max`, `unwrap`, `human`, `sort`, `field` and `pattern`) have not been implemented, meaning `GET` calls will return all matched data with all fields in one page.
  2. Request body validation is only available on POST functions; not yet implemented for PUT and PATCH functions.
  3. `Accept` and `Content-Type` headers must be `application/json`;   `application/xml` and other media types are not supported.


## Installation 
1. Make sure you have [Docker](https://www.docker.com/) installed locally
2. Download [docker-compose.yaml](docker-compose.yaml) and save locally
3. ```bash
  docker-compose -f docker-compose.yaml up -d
```


## Test using SwaggerUI
1. Once the mock server is running, the SwaggerUI is available in your browser [http://localhost:8080/index.html](http://localhost:8080/index.html)
2. Click Authorize in the top right corner, enter username `sif` and password `sandbox`, then click Authorize.
3. Close Authorize window. 
4. Choose one of the Apis, click `Try it out`
   - Scroll down the parameters block, and enter `application/json` into required `accept` header
   - For GET apis, add required headers in parameters, then click Execute to get a response. 
   - For POST, PATCH and PUT apis, add required headers in parameters, add value in "Request Body", then click Execute to get a response.
   Note: For POST, PATCH and PUT apis, you can use <a href="#section/Getting-Started/Sample-Data"> sample data to populate your requests.

## Test using cURL
* Get all Organisations
```bash
   curl \
   -X GET "http://localhost:8080/sif/organisation" \
   -H "accept: application/json" \
   -H "Authorization: basic c2lmOnNhbmRib3g="
```
* Get all Staff at school 8005
```bash
   curl \
   -X GET "http://localhost:8080/sif/staffpersonal" \
   -H "accept: application/json" \
   -H "Authorization: basic c2lmOnNhbmRib3g=" \
   -H "X-Edsby-OrganisationRefId: 8005"
```
* Update all the Staff records at school 8005
```bash
 curl \
   -X PUT "http://localhost:8080/sif/staffpersonal" \
   -H "content-type: application/json" \
   -H "accept: application/json" \
   -H "Authorization: basic c2lmOnNhbmRib3g=" \
   -H "X-Edsby-OrganisationRefId: 8005" \
   --data-binary @StaffPersonal_TeRito-Imports-TeWheke-8005.json
```
* Search for Staff records matching `Ar*`
```bash
 curl \
   -X GET "http://localhost:8080/sif/search?objects=StaffPersonal&pattern=Ar" \
   -H "accept: application/json" \
   -H "Authorization: basic c2lmOnNhbmRib3g="
```
## Test using Postman
  1. Import [Te Rito Sandbox](TeRito-postman-collection.json) Postman collection
  2. Under Variables, change "baseUrl" current value to "http://localhost:8080/sif"
  3. Select the target request from the collection, click send to get response.
  Note: For POST, PUSH and PATCH methods, you can modify the body to test different senarios.

## Sample Data
The mock server database has been initialised with the [Te Wheke](../SampleData/TeRitoSampleData-v3.2-rc2-TeWheke.zip) sample data set, which defines:
* Te Wheke Learning Support cluster (OrganisationRefId: 90101) containing:
  1. Karamū Primary School (OrganisationRefId: 8005)
  2. Horoeka Primary School (OrganisationRefId: 8006)
  3. Tarata High School (OrganisationRefId: 8007)
  4. Pōhutukawa High School (OrganisationRefId: 8008)
  5. Tōtara Early Learning Centre (OrganisationRefId: 90902)
  6. Nīkau Kindergarten (OrganisationRefId: 90903)
* StaffPersonal and StaffAssignment
* StudentPersonal
* StudentProviderEnrolment (for the 2020 year)

| Endpoint  | Record count      |
|-----------|------------------:|
| Organisation |              7 |
| OrganisationRelationship|   6 |
| StaffPersonal |           128 |
| StaffAssignment |         128 |
| studentPersonal |         429 |
| StudentProviderEnrolment| 429 |

Futher [Sample Data](../SampleData/index.html) sets are provided in `.csv` and `.json` formats
* Puwerewere Learning Support Cluster, has another 4 schools and 2 ECEs
* Turing Academy  - school #9651
* WGC - school #272]]></con:description>
  <con:settings>
    <con:setting id="04fd8bbd-0eb9-4e12-a8b1-6eaf2882388dfileName">Te-Rito-APIs</con:setting>
  </con:settings>
  <con:definitionCache type="TEXT" rootPart="file:/C:/TeRito%20APIs/Te%20Rito%20APIs%20(v3.2-rc2)/TeRito-OpenAPI-SandboxRelease-strict-noRefs.json">
    <con:part>
      <con:url>file:/C:/TeRito%20APIs/Te%20Rito%20APIs%20(v3.2-rc2)/TeRito-OpenAPI-SandboxRelease-strict-noRefs.json</con:url>
      <con:content><![CDATA[{
  "openapi": "3.0.2",
  "info": {
    "version": "v3.2-rc2",
    "title": "Te Rito APIs",
    "contact": {
      "name": "Ministry of Education",
      "url": "http://www.terito.govt.nz",
      "email": "terito@education.govt.nz"
    },
    "x-logo": {
      "url": "http://www.terito.govt.nz/themes/custom/education_drupal_theme/assets/images/Te_rito_greenflax.svg",
      "backgroundColor": null,
      "altText": "Te Rito Logo"
    },
    "description": "**Derived from:** SIF Data Model (New Zealand) v3.2 (rc2)\n**Release Date:** 12-Jan-2021\n\n### Useful Files:\n<table style=\"border:none\">\n  <tr>\n    <td style=\"text-align:center; min-width:160px\">\n      <a href=\"../eaModel-v3.2-rc2/index.htm\" target=\"_eaModel\"><img width=\"48px\" src=\"../ea.png\"/><br/>Sparx EA Data Model</a>\n    </td>\n    <td style=\"text-align:center; min-width:160px\">\n      <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/index.html\" target=\"_sifnz\"><img src=\"../zone128.png\" width=\"48px\"/><br/>SIF NZ Data Model</a>\n    </td>\n    <td style=\"text-align:center; min-width:160px\">\n      <a href=\"schemas\"><img width=\"48px\" target=\"_schemas\" src=\"../schemas.png\"/><br/>JSON Schemas</a>\n    </td>\n  </tr>\n  <tr>\n    <td style=\"text-align:center; min-width:160px\">\n      <a href=\"TeRito-OpenAPI-SandboxRelease-strict-noRefs.zip\"><img width=\"48px\" src=\"../openAPI.png\"/><br/>TeRito OpenAPI Sandbox</a>\n    </td>\n    <td style=\"text-align:center; min-width:160px\">\n      <a href=\"diffReport.html\" target=\"_diff\"><img width=\"48px\" src=\"../diff.png\"/><br/>Diff Report</a>\n    </td>\n    <td style=\"text-align:center; min-width:160px\">\n      <a href=\"TeRito-OpenAPI-strict-noRefs.zip\"><img width=\"48px\" src=\"../openAPI.png\"/><br/>TeRito OpenAPI Complete</a>\n    </td>\n  </tr>\n  <tr>\n    <td style=\"text-align:center; min-width:160px\">\n      <a href=\"TeRito-postman-collection.json\"><img width=\"48px\" src=\"../postman.png\"/><br/>Postman Collection</a>\n    </td>\n    <td style=\"text-align:center; min-width:160px\">\n      <a href=\"docker-compose.yaml\"><img width=\"48px\" src=\"../docker.png\"/><br/> Mock Server</a>\n    </td>\n    <td style=\"text-align:center; min-width:160px\">\n      <a href=\"../SampleData/index.html\"><img width=\"48px\" src=\"../excel.png\"/><br/>Sample Data</a>\n    </td>\n</table>\n\nPrevious releases of Te Rito APIs are available from <a href=\"../history.html\" target=\"_hstry\">Release History</a>\n# Te Rito Data Domains\n<p>\n  <img src=\"domains/zone512.png\" usemap=\"#DomainMap\" />\n  <map id=\"DomainMap\" name=\"DomainMap\">\n    <area title=\"Organisation\" href=\"TeRito-OpenAPI-organisation.html#tag/OrganisationOverview\" shape=\"rect\" coords=\"71,65,166,126\" />\n    <area title=\"Student &amp; Whānau\" href=\"TeRito-OpenAPI-whanau.html#tag/StudentWhanauOverview\" shape=\"rect\" coords=\"284,331,375,390\" />\n    <area title=\"Enrolment\" href=\"TeRito-OpenAPI-enrolment.html#tag/EnrolmentOverview\" shape=\"rect\" coords=\"206,0,301,60\" />\n    <area title=\"Hauora / Wellbeing\" href=\"TeRito-OpenAPI-hauora.html#tag/HauoraWellbeingOverview\" shape=\"rect\" coords=\"37,214,132,273\" />\n    <area title=\"Aromatawai / Assessment\" href=\"TeRito-OpenAPI-aromatawai.html#tag/AromatawaiAssessmentOverview\" shape=\"rect\" coords=\"378,214,471,272\" />\n    <area title=\"Timetable\" href=\"TeRito-OpenAPI-attendance.html#tag/ScheduleAttendanceOverview\" shape=\"rect\" coords=\"132,333,221,391\" />\n    <area title=\"Attendance\" href=\"TeRito-OpenAPI-attendance.html#tag/ScheduleAttendanceOverview\" shape=\"rect\" coords=\"344,65,437,126\" />\n  </map>\n</p>\n\nTe Rito includes 45 data objects that are grouped into the following 7 SIF data domains:\n  - [Organisation & Staff](TeRito-OpenAPI-organisation.html#tag/OrganisationOverview)\n  - [Timetable](TeRito-OpenAPI-attendance.html#tag/ScheduleAttendanceOverview)\n  - [Student & Whānau](TeRito-OpenAPI-whanau.html#tag/StudentWhanauOverview)\n  - [Enrolment](TeRito-OpenAPI-enrolment.html#tag/EnrolmentOverview)\n  - [Attendance](TeRito-OpenAPI-attendance.html#tag/ScheduleAttendanceOverview)\n  - [Aromatawai/Assessment](TeRito-OpenAPI-aromatawai.html#tag/AromatawaiAssessmentOverview)\n  - [Hauora/Wellbeing](TeRito-OpenAPI-hauora.html#tag/HauoraWellbeingOverview)\n\n\n\n  \n# Getting Started\n\nThe Te Rito APIs are defined in the `.yaml` and `.json` files contained in the following ZIP files:\n\n<a href=\"TeRito-OpenAPI-SandboxRelease-strict-noRefs.zip\"><img width=\"32px\" src=\"../openAPI.png\"/>TeRito OpenAPI Sandbox</a> contains the subset of API endpoints\n  that are used by Te Rito; details of these endpoints in each of the 7 data domains are presented in the <a href=\"#section/Te-Rito-Data-Domains\">Te Rito Data Domains</a>.\n\n<a href=\"TeRito-OpenAPI-strict-noRefs.zip\"><img width=\"32px\" src=\"../openAPI.png\"/>TeRito OpenAPI Complete</a> describes all 45 data objects defined by Te Rito;  details of the endpoints be viewed by selecting all\navailable OAuth Scopes.\n\n**Note**: We provide the specfication in both `.yaml` and `.json` formats to ensure you will be able to use the API specification \nwith any of the many [OpenAPI Tools](https://openapi.tools/) that are availble.\n\n## Te Rito Mock Server\n\nTe Rito provides a Mock Server as a docker image that implements the following Te Rito endpoints:\n  1. [Organisation](TeRito-OpenAPI-organisation.html#tag/Organisation)\n  2. [OrganisationRelationship](TeRito-OpenAPI-organisation.html#tag/OrganisationRelationship)\n  3. [StaffPersonal](TeRito-OpenAPI-organisation.html#tag/StaffPersonal)\n  4. [StaffAssignment](TeRito-OpenAPI-organisation.html#tag/StaffAssignment)\n  5. [StudentPersonal](TeRito-OpenAPI-enrolment.html#/tag/StudentPersonal)\n  6. [StudentProviderEnrolment](TeRito-OpenAPI-enrolment.html#/tag/StudentProviderEnrolment)\n  7. [Search](TeRito-OpenAPI-organisation.html#tag/Search)\n\nThe mock server provides Te Rito connecting clients (School Management Systems, etc.) a reference implementation of the Te Rito APIs, allowing clients\nto make POST/GET/PUT and PATCH calls and get realistic API responses to their requests:\n\nThe following functions have been implemented:\n  1. Data object APIs implement single and bulk `GET`, `POST`, `PUT` and PATCH methods.\n  2. `sif/Search` API provides search by Object (`StaffPersonal` or `StudentPersonal`); using `pattern`, or `query`; and pagination of result sets using `page` and `max` query parameters.\n\nThe mock server has the following limitations:\n  1. Query parameters (`fields`, `page`, `max`, `unwrap`, `human`, `sort`, `field` and `pattern`) have not been implemented, meaning `GET` calls will return all matched data with all fields in one page.\n  2. Request body validation is only available on POST functions; not yet implemented for PUT and PATCH functions.\n  3. `Accept` and `Content-Type` headers must be `application/json`;   `application/xml` and other media types are not supported.\n\n\n## Installation \n1. Make sure you have [Docker](https://www.docker.com/) installed locally\n2. Download [docker-compose.yaml](docker-compose.yaml) and save locally\n3. ```bash\n  docker-compose -f docker-compose.yaml up -d\n```\n\n\n## Test using SwaggerUI\n1. Once the mock server is running, the SwaggerUI is available in your browser [http://localhost:8080/index.html](http://localhost:8080/index.html)\n2. Click Authorize in the top right corner, enter username `sif` and password `sandbox`, then click Authorize.\n3. Close Authorize window. \n4. Choose one of the Apis, click `Try it out`\n   - Scroll down the parameters block, and enter `application/json` into required `accept` header\n   - For GET apis, add required headers in parameters, then click Execute to get a response. \n   - For POST, PATCH and PUT apis, add required headers in parameters, add value in \"Request Body\", then click Execute to get a response.\n   Note: For POST, PATCH and PUT apis, you can use <a href=\"#section/Getting-Started/Sample-Data\"> sample data to populate your requests.\n\n## Test using cURL\n* Get all Organisations\n```bash\n   curl \\\n   -X GET \"http://localhost:8080/sif/organisation\" \\\n   -H \"accept: application/json\" \\\n   -H \"Authorization: basic c2lmOnNhbmRib3g=\"\n```\n* Get all Staff at school 8005\n```bash\n   curl \\\n   -X GET \"http://localhost:8080/sif/staffpersonal\" \\\n   -H \"accept: application/json\" \\\n   -H \"Authorization: basic c2lmOnNhbmRib3g=\" \\\n   -H \"X-Edsby-OrganisationRefId: 8005\"\n```\n* Update all the Staff records at school 8005\n```bash\n curl \\\n   -X PUT \"http://localhost:8080/sif/staffpersonal\" \\\n   -H \"content-type: application/json\" \\\n   -H \"accept: application/json\" \\\n   -H \"Authorization: basic c2lmOnNhbmRib3g=\" \\\n   -H \"X-Edsby-OrganisationRefId: 8005\" \\\n   --data-binary @StaffPersonal_TeRito-Imports-TeWheke-8005.json\n```\n* Search for Staff records matching `Ar*`\n```bash\n curl \\\n   -X GET \"http://localhost:8080/sif/search?objects=StaffPersonal&pattern=Ar\" \\\n   -H \"accept: application/json\" \\\n   -H \"Authorization: basic c2lmOnNhbmRib3g=\"\n```\n## Test using Postman\n  1. Import [Te Rito Sandbox](TeRito-postman-collection.json) Postman collection\n  2. Under Variables, change \"baseUrl\" current value to \"http://localhost:8080/sif\"\n  3. Select the target request from the collection, click send to get response.\n  Note: For POST, PUSH and PATCH methods, you can modify the body to test different senarios.\n\n## Sample Data\nThe mock server database has been initialised with the [Te Wheke](../SampleData/TeRitoSampleData-v3.2-rc2-TeWheke.zip) sample data set, which defines:\n* Te Wheke Learning Support cluster (OrganisationRefId: 90101) containing:\n  1. Karamū Primary School (OrganisationRefId: 8005)\n  2. Horoeka Primary School (OrganisationRefId: 8006)\n  3. Tarata High School (OrganisationRefId: 8007)\n  4. Pōhutukawa High School (OrganisationRefId: 8008)\n  5. Tōtara Early Learning Centre (OrganisationRefId: 90902)\n  6. Nīkau Kindergarten (OrganisationRefId: 90903)\n* StaffPersonal and StaffAssignment\n* StudentPersonal\n* StudentProviderEnrolment (for the 2020 year)\n\n| Endpoint  | Record count      |\n|-----------|------------------:|\n| Organisation |              7 |\n| OrganisationRelationship|   6 |\n| StaffPersonal |           128 |\n| StaffAssignment |         128 |\n| studentPersonal |         429 |\n| StudentProviderEnrolment| 429 |\n\nFuther [Sample Data](../SampleData/index.html) sets are provided in `.csv` and `.json` formats\n* Puwerewere Learning Support Cluster, has another 4 schools and 2 ECEs\n* Turing Academy  - school #9651\n* WGC - school #272"
  },
  "servers": [
    {
      "url": "https://southern.edsby.co.nz/sif",
      "description": "The demonstration Te Rito server"
    },
    {
      "url": "https://nzqa.edsby.co.nz/sif",
      "description": "The NZ Quality Assurance Te Rito server (daily updates)"
    },
    {
      "url": "https://northern.edsby.co.nz/sif",
      "description": "The Integration Test Te Rito server (end of sprint updates)"
    }
  ],
  "security": [
    {
      "sifDataObject": [
        "DEFERRED"
      ]
    }
  ],
  "x-tagGroups": [
    {
      "name": "Data Analysis ESR",
      "tags": [
        "OrganisationOverview",
        "Organisation",
        "OrganisationRelationship",
        "StudentPersonal",
        "StudentProviderEnrolment",
        "StudentAttendanceTimeList",
        "StaffPersonal",
        "StaffAssignment",
        "StudentAssessmentTaskResult",
        "ProviderCourse",
        "Credential",
        "LearningStandard",
        "StudentAttainment",
        "WellbeingEvent"
      ]
    },
    {
      "name": "Learning Support Register",
      "tags": [
        "OrganisationOverview",
        "Organisation",
        "OrganisationRelationship",
        "StudentPersonal",
        "StudentProviderEnrolment",
        "WellbeingCharacteristic",
        "StudentLearningSupport",
        "StudentLearningSupportResponse"
      ]
    },
    {
      "name": "Organisation",
      "tags": [
        "OrganisationOverview",
        "Organisation",
        "OrganisationRelationship",
        "StaffPersonal",
        "StaffAssignment",
        "StaffTeachingGroupAssignment",
        "ProviderCourse",
        "TeachingGroup",
        "AcademicDepartment"
      ]
    },
    {
      "name": "Whānau",
      "tags": [
        "StudentWhānauOverview",
        "StudentPersonal",
        "StudentContactPersonal",
        "StudentContactRelationship",
        "StudentConsent"
      ]
    },
    {
      "name": "Enrolment",
      "tags": [
        "EnrolmentOverview",
        "StudentProviderEnrolment",
        "SchoolEnrolment",
        "StudentTeachingGroupEnrolment"
      ]
    },
    {
      "name": "Schedule & Attendance",
      "tags": [
        "ScheduleAttendanceOverview",
        "Schedule",
        "ScheduleAcademicDay",
        "SchedulePeriod",
        "BellSchedule",
        "ScheduleTerm",
        "ScheduleHoliday",
        "ScheduleDate",
        "TeachingGroupEvent",
        "ScheduleEvent",
        "StudentAttendanceTimeList",
        "StudentAttendanceSummary"
      ]
    },
    {
      "name": "Aromatawai / Assessment",
      "tags": [
        "AromatawaiAssessmentOverview",
        "AssessmentTask",
        "StudentAssessmentTaskRegistration",
        "StudentAssessmentTask",
        "StudentAssessmentTaskResult",
        "StudentAttainment",
        "Credential",
        "LearningStandard",
        "StudentCurriculumProgressReport"
      ]
    },
    {
      "name": "Hauora / Wellbeing",
      "tags": [
        "HauoraWellbeingOverview",
        "WellbeingCharacteristic",
        "WellbeingAlert",
        "WellbeingEvent",
        "WellbeingResponse",
        "WellbeingAppeal",
        "StudentLearningSupport",
        "StudentLearningSupportResponse",
        "Document",
        "StudentVoice",
        "StudentActivityParticipation",
        "StudentPhysicalRestraint"
      ]
    }
  ],
  "tags": [
    {
      "name": "Search",
      "x-displayName": "Search",
      "description": "Search operation returning partial <a href=\"#tag/StaffPersonal\">StaffPersonal</a> and <a href=\"#tag/StudentPersonal\">StudentPersonal</a> objects."
    },
    {
      "name": "OrganisationOverview",
      "x-displayName": "Organisation Overview",
      "description": "<p> The Organisation domain describes education provider entities (ECEs, Schools &amp; Tertiary Education Institutions), Communities (Kāhui Ako, Learning Support Clusters, etc.) the relationships between them, and the Staff that work at them.</p> <img src=\"domains/SIFNZ-LogicalModel-OrganisationDomain.png\" usemap=\"#OrganisationMap\" /> <map title=\"OrganisationMap\" name=\"OrganisationMap\">\n  <area title=\"Organisation\" shape=\"rect\" coords=\"386,44,602,127\" href=\"#tag/Organisation\" />\n  <area title=\"OrganisationRelationship\" shape=\"rect\" coords=\"656,142,789,199\" href=\"#tag/OrganisationRelationship\" />\n  <area title=\"StaffPersonal\" shape=\"rect\" coords=\"466,472,555,536\" href=\"#tag/StaffPersonal\" />\n  <area title=\"StaffAssignment\" shape=\"rect\" coords=\"664,212,754,284\" href=\"#tag/StaffAssignment\" />\n  <area title=\"StaffTeachingGroupAssignment\" shape=\"rect\" coords=\"38,263,215,303\" href=\"#tag/StaffTeachingGroupAssignment\" />\n  <area title=\"ProviderCourse\" shape=\"rect\" coords=\"387,284,476,320\" href=\"#tag/ProviderCourse\" />\n  <area title=\"TeachingGroup\" shape=\"rect\" coords=\"215,65,305,107\" href=\"#tag/TeachingGroup\" />\n  <area title=\"AcademicDepartment\" shape=\"rect\" coords=\"196,392,316,427\" href=\"#tag/AcademicDepartment\" />\n</map>  "
    },
    {
      "name": "Organisation",
      "x-displayName": "Organisation",
      "description": "Operations on recognised Education Provider entities (ECEs, Schools & Tertiary  Education Institutions), Communities (Kāhui Ako, Learning Support Clusters, etc.), and  others (Teen Parent Units, Activity Centres. etc.)"
    },
    {
      "name": "OrganisationRelationship",
      "x-displayName": "Organisation Relationship",
      "description": "<p>Operations on recognised relationships between two education Organisations. The two organisations are referred to as the Source Organisation and the Related Organisation.</p> <p>RelationshipType records the nature of the relationship between the two organisations, and gives guidance on which is the Source Organisation and which is the Related Organisation.</p>"
    },
    {
      "name": "StaffPersonal",
      "x-displayName": "Staff Personal",
      "description": "<p>Operations on the personal contact and demographic information relating to\nstaff members, who might be a teacher or other employee of a Provider.</p>\n\n<p>Searching for staff personal record by name, email address (or whatever) is\navailable via <a href=\"#tag/Search\">Te Rito Search API</a>.</p>\n\n<p>Non personal information relating to the staff member's relationship with Providers\nis stored in the <a href=\"#tag/StaffAssignment\">StaffAssignment</a> data object.</p>"
    },
    {
      "name": "StaffAssignment",
      "x-displayName": "Staff Assignment",
      "description": "<p>Operations on the assignment of a Staff member to their role at a Providers or other \nOrganisation. A staff member may have only have a single role at each Provider or Kāhui Ako at any one time \n(via the Organisation data object)</p>\n<p>Role assignments can be restricted to categories of Students with the StaffSubjectList and\n YearLevelList. This allows for assignment to roles with particular responsibility for general \n cohorts of students, such as \"Head of Department (Maths)\" or \"Year 8 Student Dean\".</p> \n <p>While assignment to student contact roles such as Subject Teacher, Homeroom Teacher, \n Whānau Teacher or House Master is made with this data object; Details of the particular group \n of specific students the staff member is responsible for are made via the \n <a href=\"#tag/TeachingGroup\">TeachingGroup</a> data object.</p>"
    },
    {
      "name": "StaffTeachingGroupAssignment",
      "x-displayName": "Staff Teaching Group Assignment",
      "description": "<p>Operations on the assignment of a Staff member to a particular role with a particular TeachingGroup at a Provider</p>"
    },
    {
      "name": "TeachingGroup",
      "x-displayName": "Teaching Group",
      "description": "<p>Operations on teaching Classes of students. Such classes can have multiple staff  assigned in a variety of roles (via <a href=\"#tag/StaffTeachingGroupAssignment\">StaffTeachingGroupAssignment</a>),  may be assigned students from multiple year levels (via <a href=\"#tag/StudentTeachingGroupEnrolment\">StudentTeachingGroupEnrolment</a>), and may be taught multiple <a href=\"#tag/ProviderCourse\">ProviderCourses</a>.</p>"
    },
    {
      "name": "StudentWhānauOverview",
      "x-displayName": "Student & Whānau Overview",
      "description": "<p> The Student domain describes Student entities, their Whānau, and the relationships between them. </p> <img src=\"domains/SIFNZ-LogicalModel-StudentDomain.png\" usemap=\"#Student &amp; WhānauMap\" /> <map title=\"Student &amp; WhānauMap\" name=\"Student &amp; WhānauMap\">\n  <area title=\"StudentPersonal\" shape=\"rect\" coords=\"43,51,159,300\" href=\"#tag/StudentPersonal\" />\n  <area title=\"StudentContactPersonal\" shape=\"rect\" coords=\"643,100,823,150\" href=\"#tag/StudentContactPersonal\" />\n  <area title=\"StudentContactRelationship\" shape=\"rect\" coords=\"312,100,511,152\" href=\"#tag/StudentContactRelationship\" />\n  <area title=\"StudentConsent\" shape=\"rect\" coords=\"312,223,422,279\" href=\"#tag/StudentConsent\" />\n</map>  ",
      "externalDocs": {
        "description": "Student & Whānau Domain in SIF NZ Data Model",
        "url": "http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/DomainMap.html#Domain__StudentWhānau"
      }
    },
    {
      "name": "StudentPersonal",
      "x-displayName": "Student Personal",
      "description": "<p>Operations on the personal contact and demographic information of one or more students.</p>\n<p>Searching for student personal record by name, email address (or whatever) is available via <a href=\"#tag/Search\">Te Rito Search API</a>.</p>\n<p>Non personal information relating to the student's enrolment in Providers is stored in the <a href=\"#tag/StudentProviderEnrolment\">StudentProviderEnrolment</a> data object."
    },
    {
      "name": "StudentContactPersonal",
      "x-displayName": "Student Contact Personal",
      "description": "<p>Operations on the personal contact and demographic information relating  to one or more student whānau members.</p>\n<p>Searching for student contact personal record by name, email address (or whatever) is available via <a href=\"#tag/Search\">Te Rito Search API</a>.</p>\n<p>Details of the relationship between the student and the whānau member  are stored in the <a href=\"#tag/StudentContactRelatiosnship\">StudentContactRelationship</a> data object."
    },
    {
      "name": "StudentContactRelationship",
      "x-displayName": "Student Contact Relationship",
      "description": "<p>Operations on relationships between a person who is part of a  Student's whānau and that Student.  Relationship properties include the relationship type and roles played by the student contact in respect of the student.</p>  <p>Individual details about the student and student contact are provided  <a href=\"#tag/StudentPersonal\">StudentPersonal</a> and <a href=\"#tag/StudentContactPersonal\">StudentContactPersonal</a></p>"
    },
    {
      "name": "EnrolmentOverview",
      "x-displayName": "Enrolment Overview",
      "description": "<p> The Enrolment domain describes transactional entities whereby Students enrol at Providers, in LearningProgrammes, \n  in TeachingGroups, or in Activities. </p>\n<img src=\"domains/SIFNZ-LogicalModel-EnrolmentDomain.png\" usemap=\"#EnrolmentMap\" /> <map title=\"EnrolmentMap\" name=\"EnrolmentMap\">\n  <area title=\"StudentProviderEnrolment\" shape=\"rect\" coords=\"58,185,207,222\" href=\"#tag/StudentProviderEnrolment\" />\n  <area title=\"StudentTeachingGroupEnrolment\" shape=\"rect\" coords=\"586,140,766,174\" href=\"#tag/StudentTeachingGroupEnrolment\" />\n  <area title=\"StudentPersonal\" shape=\"rect\" coords=\"35,44,171,104\" href=\"#tag/StudentPersonal\" />\n  <area title=\"Organisation\" shape=\"rect\" coords=\"67,392,170,431\" href=\"#tag/Organisation\" />\n  <area title=\"ProviderCourse\" shape=\"rect\" coords=\"310,118,451,167\" href=\"#tag/ProviderCourse\" />\n  <area title=\"TeachingGroup\" shape=\"rect\" coords=\"476,267,598,333\" href=\"#tag/TeachingGroup\" />\n  <area title=\"StaffPersonal\" shape=\"rect\" coords=\"921,235,1034,265\" href=\"#tag/3218StaffPersonal\" />\n  <area title=\"StaffTeachingGroupAssignment\" shape=\"rect\" coords=\"708,302,881,333\" href=\"#tag/StaffTeachingGroupAssignment\" />\n</map>",
      "externalDocs": {
        "description": "Enrolment Domain in SIF NZ Data Model",
        "url": "http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/DomainMap.html#Domain__Enrolment"
      }
    },
    {
      "name": "StudentProviderEnrolment",
      "x-displayName": "Student Provider Enrolment",
      "description": "<p>Operations on a single student's association with an education provider for the purpose of receiving educational servics.</p> \n<p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>"
    },
    {
      "name": "SchoolEnrolment",
      "x-displayName": "School Enrolment",
      "description": "<p>Operations on a single student's multiple per-Year school enrolments within the context of a single StudentProviderEnrolment.</p> \n<p>Provider enrolments span multiple years with the StudentProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year. Individual per-year school enrolment details are available via this SchoolEnrolment sub-object</p>"
    },
    {
      "name": "StudentTeachingGroupEnrolment",
      "x-displayName": "Student Teaching Group Enrolment",
      "description": "<p>Operations on a single student's arrival at and departure from a single TeachingGroup.</p>"
    },
    {
      "name": "ScheduleAttendanceOverview",
      "x-displayName": "Schedule & Attendance Overview",
      "description": "<p> The Schedule & Attendance domain describes the school's schedule or timetable, along with transactional entities that record a Student's\n    attendance at & absence from Providers. Attendance is recorded at either Day, Half-Day or individual Period granuality at the choice of the \n    Provider; and reported back in summary form. </p>\n  <img src=\"domains/SIFNZ-LogicalModel-TimetableAttendanceDomain.png\" usemap=\"#Schedule &amp; AttendanceMap\" />\n  <map title=\"Schedule &amp; AttendanceMap\" name=\"Schedule &amp; AttendanceMap\">\n    <area title=\"StudentPersonal\" shape=\"rect\" coords=\"36,134,151,170\" href=\"#tag/StudentPersonal\" />\n    <area title=\"Organisation\" shape=\"rect\" coords=\"479,43,899,80\" href=\"#tag/Organisation\" />\n    <area title=\"StudentAttendanceTimeList\" shape=\"rect\" coords=\"183,189,342,223\" href=\"#tag/StudentAttendanceTimeList\" />\n    <area title=\"StudentAttendanceSummary\" shape=\"rect\" coords=\"306,139,466,175\" href=\"#tag/StudentAttendanceSummary\" />\n    <area title=\"TeachingGroup\" shape=\"rect\" coords=\"646,514,744,549\" href=\"#tag/TeachingGroup\" />\n    <area title=\"ProviderCourse\" shape=\"rect\" coords=\"647,607,743,655\" href=\"#tag/ProviderCourse\" />\n    <area title=\"Schedule\" shape=\"rect\" coords=\"756,163,845,200\" href=\"#tag/Schedule\" />\n    <area title=\"ScheduleTerm\" shape=\"rect\" coords=\"595,165,669,199\" href=\"#tag/ScheduleTerm\" />\n    <area title=\"ScheduleHoliday\" shape=\"rect\" coords=\"642,240,733,275\" href=\"#tag/ScheduleHoliday\" />\n    <area title=\"ScheduleDate\" shape=\"rect\" coords=\"436,223,523,279\" href=\"#tag/ScheduleDate\" />\n    <area title=\"ScheduleEvent\" shape=\"rect\" coords=\"296,307,386,342\" href=\"#tag/ScheduleEvent\" />\n    <area title=\"SchedulePeriod\" shape=\"rect\" coords=\"418,366,530,401\" href=\"#tag/SchedulePeriod\" />\n    <area title=\"ScheduleAcademicDay\" shape=\"rect\" coords=\"626,360,757,394\" href=\"#tag/ScheduleAcademicDay\" />\n    <area title=\"BellSchedule\" shape=\"rect\" coords=\"645,306,735,351\" href=\"#tag/BellSchedule\" />\n    <area title=\"TeachingGroupEvent\" shape=\"rect\" coords=\"635,406,748,464\" href=\"#tag/TeachingGroupEvent\" />\n  </map>\n\n\n# Schedule & Attendance\n\nThe `Schedule` data objects in the \n[SIF NZ Data Model](http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/DomainMap.html#Domain__ScheduleAttendance)\nhave been designed to be as flexible as possible to accomodate the myriad of different scheduling and timetabling structures used within \nthe New Zealand Education System. \n\n## Schedule, AcademicDay, Period and BellSchedule\n<img src=\"domains/schedule/Figure_1a.png\" usemap=\"#Figure_1aMap\" style=\"display:block; margin-left:auto; margin-right:auto;\"/>\n<div style=\"text-align:center\"><strong>Figure 1a: Schedules, Days & Periods</strong></div>\n<map name=\"Figure_1aMap\">\n   <area title=\"Organisation\" shape=\"rect\" coords=\"27,32,218,69\" href=\"#tag/Organisation\" />\n   <area title=\"Schedule\" shape=\"rect\" coords=\"204,107,287,141\" href=\"#tag/Schedule\" />\n   <area title=\"ScheduleAcademicDay\" shape=\"rect\" coords=\"412,99,547,146\" href=\"#tag/ScheduleAcademicDay\" />\n   <area title=\"SchedulePeriod\" shape=\"rect\" coords=\"646,106,746,140\" href=\"#tag/SchedulePeriod\" />\n   <area title=\"BellSchedule\" shape=\"rect\" coords=\"339,186,419,220\" href=\"#tag/BellSchedule\" />\n</map>\n\nA Schedule is set up by a `Provider` to manage their timetable for their students, teachers, curriculum\nand resources for part or all of a calendar year. \n\nThe structure of a Schedule is held in the `Schedule`, `ScheduleAcademicDay`, `SchedulePeriod` and\n`BellSchedule` data objects.\n\nA Schedule can be considered a rotation of one or more **academic days**, defined by a `ScheduleAcademicDay`\nobject. Each academic day represents a regular structured day undertaken by the Provider. The academic days do\nnot have to have the same structure across a single rotation through the `Schedule`. For instance, at Hogwarts\nHigh, days A through D are made of 5 periods, each of which are defined by `SchedulePeriod`, with day E only\nconsisting of 4 periods with the last period longer than usual (2 hours instead of 1 hour.\n\n Based on the two types of day structures (A - D and E), Hogwarts High can assign one of two Bell schedules, held within the\n`BellSchedule` data object. The Bell schedules defines when each Period of the `ScheduleAcademicDay` begins and\nends, e.g. Period 1 is 9am - 9:50am, Period 2 is 10am - 10:50am etc.\n\nFigure 1, below, depicts the period structure and bell schedules of the two academic days at Hogwarts High:\n- **Days A through D** have 5 periods of equal length, with a break between periods 2 & 3; and a longer lunch break between periods 3 & 4.\n- **Day E** - has a similar structure, except period 4 takes up the whole afternoon.\n\n\n![Hogwarts High Schedule for secondary school years](domains/schedule/Figure_1.png)\n<div style=\"margin-top:-1.2em; text-align:center\"><strong>Figure 1: Hogwarts High Schedule for secondary school years</strong></div>\n\n\nA school may have multiple schedule structures for different year groups. For instance, a composite school, the\nprimary school level students may have a bell schedule different to that of secondary school students. Figure2,\nbelow, depicts the bell schedule for the primary level students at Hogwarts High. \n\n\n![Hogwarts High Schedule for primary school years](domains/schedule/Figure_2.png)\n<div style=\"margin-top:-1.2em; text-align:center;\"><strong>Figure 2: Hogwarts High Schedule for primary school years</strong></div>\n\n## Schedule Dates\n\nOnce defined, the structure of the `Schedule` can be mapped to a specific calendar date as needed. The mapping\nbetween academic days and schedule periods to specific calendar days is held in the `ScheduleDate` data object.\nEach calendar date is associated with an `ScheduleAcademicDay`, which in turn is associated with the relevant \n`BellSchedule` and `SchedulePeriod`.\n\nFor example, at Hogwarts High for the secondary level students, academic days A through D take place on Mondays\nto Thursdays and academic day E on Friday. If 1st of July is a Monday, which is academic day A, the bell schedule\nand period for academic day A apply to 1st of July. Similarly, the bell schedule and the periods for each of the\nacademic days B to E can be applied to July 2nd to July 5th, as shown below. \n\n\n![Hogwarts High Schedule for secondary years with Academic Days mapped to Schedule Periods](domains/schedule/Figure_3.png)\n<div style=\"margin-top:-1.2em; text-align:center;\"><strong>Figure 3: Hogwarts High Schedule for secondary years with Academic Days mapped to Schedule Periods</strong></div>\n\n\n![Hogwarts High Schedule for primary years with Academic Days mapped to Schedule Periods](domains/schedule/Figure_4.png)\n<div style=\"margin-top:-1.2em; text-align:center;\"><strong>Figure 4: Hogwarts High Schedule for primary years with Academic Days mapped to Schedule Periods</strong></div>\n\n\n## Teaching Group Timetable\n\nThe `Schedule` can also be used to create the providers' teaching groups. A teaching group's timetable\nspecifies the `ScheduleAcademicDay` it is being taught on, the curriculum being taught, who is being taught\nand the assigned location. This timetable is held in the `TeachingGroupEvent` data object.\n\nBelow is an example of the timetable for Hogwart’s Purple teaching group, which follows the Secondary level\n`Schedule`, and Yellow teaching group which follows the Primary level `Schedule`.\n\n\n![Hogwarts High Secondary Teaching Group Purple Schedule](domains/schedule/Figure_5.png)\n<div style=\"margin-top:-1.2em; text-align:center;\"><strong>Figure 5: Hogwarts High Secondary Teaching Group Purple Schedule</strong></div>\n\n\n![Hogwarts High Primary Teaching Group Purple Schedule](domains/schedule/Figure_6.png)\n<div style=\"margin-top:-1.2em; text-align:center;\"><strong>Figure 6:Hogwarts High Primary Teaching Group Purple Schedule</strong></div>\n\n\nCombining the teaching group’s timetable from TeachingGroupEvent data object with the calendar date assignment\ndata from ScheduleDate data object gives a completed date specific timetable for Hogwarts Purple teaching groups.\n\n\n![Hogwarts High Secondary Teaching Group Purple Schedule with Dates](domains/schedule/Figure_7.png)\n<div style=\"margin-top:-1.2em; text-align:center;\"><strong>Figure 7: Hogwarts High Secondary Teaching Group Purple Schedule with Dates</strong></div>\n\n\nIt works just as well for simple timetables, with straightforward morning and afternoon periods as per the\nYellow teaching group example below.\n\n\n![Hogwarts High Primary Teaching Group Purple Schedule with Dates](domains/schedule/Figure_8.png)\n<div style=\"margin-top:-1.2em; text-align:center;\"><strong>Figure 8: Hogwarts High Primary Teaching Group Purple Schedule with Dates</strong></div>\n\n## Schedule Variations\n\nEvery so often one off events will occur that may impact the regular schedule. These one off events could\nimpact a single date, or multiple dates, or one or more periods on a specific date(s). \n\nEvents that impact the schedule are held in the `ScheduleEvent` data object. There is a set of predefined\nstandardised effects an event may have.  (Note: Providers also have the ability to create custom effects\nif one of the standardised options does not provide the required change to the schedule.) \n\n### Standardised Effects\n\n|Standard Effect|Effect Description|\n|---|---|\n|No effect|This event has no effect on the school schedule, but it is recorded for display purposes.|\n|Pause Schedule Rotation|Temporarily suspend the academic day rotation until a subsequent Resume Schedule event occurs.|\n|Resume Schedule Rotation|Resume an academic day rotation previously suspended (paused).|\n|Renumber Schedule Rotation|This event causes the day rotation on the school calendar to be renumbered, starting with any academic days specified as impacted by the event. If any terms are included in the event, those terms are activated effective on the start date of this event.|\n|Insert Day into Rotation|This event causes an insertion in the normal academic day rotation of the schedule. That is to say, any academic days and bell schedules specified in the event are scheduled for the duration of this event, or school is cancelled if there are no academic days specified; after the event ends the academic day rotation resumes from the point at which it was interrupted, e.g. if it was Day 1 before the event, then it will be Day 2 afterwards.|\n|Displace Day in Rotation|This event causes a displacement in the normal academic day rotation of the schedule. That is to say, any academic days or bell schedules specified in the event are scheduled for the duration of this event, or school is cancelled if there are no academic days values specified; after the event ends the rotation resumes from the point it would be at had the event not occurred, e.g. if it was Day 1 before the event, and the event duration was 1 day, then it will be Day 3 afterwards; Day 2 is overwritten by the event.|\n|Start Term|Start one or more terms specified on this date without changing the academic day rotation.|\n|End Term|This event terminates the academic schedule for any term(s) specified in the event. A term is required to be specified when using this schedule effect. Note that events take effect at midnight on the start date, so the designated term(s) do not occur on the actual day of the End Schedule event (i.e. the day prior to the event's start date is the last day the term(s) are in session).|\n|Customised Schedule Effect|This event creates a custom effect; with an arbitrary, customised set of periods and matching bell schedule replacing the normal rotation days of the schedule for the duration of the event.|\n|Cancel Schedule Day|Cancel one or more specified Academic Days that would normally occur on this date. This is generally used to partially cancel the school schedule at the event start time on the event date. To fully cancel school on event date, use either the \"insert\" or \"displace\" schedule effect.|\n|Additional Day|Set one or more additional academic days to apply to this calendar date in addition to those defined in the schedule. This can also be used to schedule school on a day on which it would not normally occur, such as a weekend. As a convenience, a list of academic days to remove from the calendar while this event is in effect can also be supplied.|\n\n\n\n## Terms and Holidays\n\nOther additional information about the schedule can also be captured such as the length of the terms\na provider follows, or what holidays are recognised in the area that the provider lives and whether\nor not they impact the schedule, e.g. public holidays, regional holidays. \n\nThese are stored in ScheduleTerm and ScheduleHoliday respectively.",
      "externalDocs": {
        "description": "Schedule & Attendance Domain in SIF NZ Data Model",
        "url": "http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/DomainMap.html#Domain__ScheduleAttendance"
      }
    },
    {
      "name": "Schedule",
      "x-displayName": "Timetable Schedule",
      "description": "Operations for maintaining a timetable Schedule for the given Provider."
    },
    {
      "name": "ScheduleAcademicDay",
      "x-displayName": "Schedule Academic Day",
      "description": "<p>Operations on a academic day, that makes up all or part of  a <a href=\"#tag/Schedule\">Schedule</a> for the given Provider.</p> <p>An academic day represents a structured day that reoccurs consistently e.g. Day A has  five periods that occurs Mon-Wed and Day B has four periods and occurs Thurs-Fri.</p>"
    },
    {
      "name": "SchedulePeriod",
      "x-displayName": "Schedule Period",
      "description": "Operations on a Period that takes place within one or more  <a href=\"AcademicDay\">AcademicDays</a> in a particular <a href=\"#tag/Schedule\">Schedule</a> at the given Provider."
    },
    {
      "name": "BellSchedule",
      "x-displayName": "Bell Schedule",
      "description": "<p>Operations maintaining a bell schedule within the scope of a particular  <a href=\"#tag/Schedule\">Schedule</a> at the given Provider.\nEach bell schedule defines the start and end times of the <a href=\"#tag/SchedulePeriod\">SchedulePeriods</a> of a particular  <a href=\"#tag/ScheduleAcademicDay\">ScheduleAcademicDay</a>.</p>\n<p>These bell schedules are assigned to the calendar dates on which the school is in session using <a href=\"#tag/ScheduleDate\">ScheduleDate</a> in order to specify the school timetable (schedule) on those dates.</p>\n<p>These bell schedules should generally only be used to define standard day types. Exception days (unless they repeat multiple times and follow a common template) are defined using <a href=\"#tag/ScheduleEvent\">ScheduleEvent</a>.</p>"
    },
    {
      "name": "ScheduleTerm",
      "x-displayName": "Schedule Term",
      "description": "<p>Operations maintaining the structure of a particular school term, semester, or calendar year for a particular timetable <a href=\"#tag/Schedule\">Schedule</a> at the given Provider.</p>"
    },
    {
      "name": "ScheduleDate",
      "x-displayName": "Schedule Date",
      "description": "<p>Operations maintaining the detail of which timetable <a href=\"#tag/Schedule\">Schedule</a>, <a href=\"#tag/ScheduleAcademicDay\">ScheduleAcademicDay</a> and <a href=\"#tag/BellSchedule\">BellSchedule</a> are being followed on a specific calendar date at the given Provider.</p>"
    },
    {
      "name": "StudentAttendanceSummary",
      "x-displayName": "Student Attendance Summary",
      "description": "<p>Provides a summary of a student's daily attendance and membership information for a given provider during the time period between the StartDate and EndDate, inclusive.</p> <p>There will be multiple instances of this object for a student in a school over the  course of a school year. This summary may be generated by aggregating more granular  attendance records, in which case all fields will be read-only; and RefId element may  not be applicable.</p>"
    },
    {
      "name": "AromatawaiAssessmentOverview",
      "x-displayName": "Aromatawai / Assessment Overview",
      "description": "<p> The Assessment domain describes transactional entities that record assessment of Student's learning. The domain covers everything from\n  a simple in-class assessment task (eg grading assignment, test or essay) through to end of Course or year final marks, and curriculum \n  progress reports as well as formal external assessments performed by external agencies (eg. NZQA, Cambridge International Education, \n  International Baccalaureate, etc). </p>\n<img src=\"domains/SIFNZ-LogicalModel-AssessmentDomain.png\" usemap=\"#Aromatawai / AssessmentMap\" /> <map title=\"Aromatawai / AssessmentMap\" name=\"Aromatawai / AssessmentMap\">\n  <area title=\"StudentPersonal\" shape=\"rect\" coords=\"34,43,133,446\" href=\"#tag/StudentPersonal\" />\n  <area title=\"StudentAssessmentTaskRegistration\" shape=\"rect\" coords=\"274,70,462,110\" href=\"#tag/StudentAssessmentTaskRegistration\" />\n  <area title=\"AssessmentTask\" shape=\"rect\" coords=\"533,145,631,214\" href=\"#tag/AssessmentTask\" /\n  ><area title=\"StudentAssessmentTask\" shape=\"rect\" coords=\"292,179,421,222\" href=\"#tag/StudentAssessmentTask\" />\n  <area title=\"StudentAssessmentTaskResult\" shape=\"rect\" coords=\"253,284,410,324\" href=\"#tag/StudentAssessmentTaskResult\" />\n  <area title=\"StudentAttainment\" shape=\"rect\" coords=\"233,351,390,390\" href=\"#tag/StudentAttainment\" />\n  <area title=\"Credential\" shape=\"rect\" coords=\"44,525,132,557\" href=\"#tag/Credential\" />\n  <area title=\"LearningStandard\" shape=\"rect\" coords=\"601,420,716,453\" href=\"#tag/LearningStandard\" />\n  <area title=\"ProviderCourse\" shape=\"rect\" coords=\"706,275,823,331\" href=\"#tag/ProviderCourseSingle\" />\n  <area title=\"Organisation\" shape=\"rect\" coords=\"884,190,973,256\" href=\"#tag/Organisation\" />\n  <area title=\"TeachingGroup\" shape=\"rect\" coords=\"720,57,817,97\" href=\"#tag/TeachingGroup\" />\n  <area title=\"StudentCurriculumProgressReport\" shape=\"rect\" coords=\"228,126,412,163\" href=\"#tag/StudentCurriculumProgressReport\" />\n</map>",
      "externalDocs": {
        "description": "Aromatawai / Assessment Domain in SIF NZ Data Model",
        "url": "http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/DomainMap.html#Domain__Aromatawai/Assessment"
      }
    },
    {
      "name": "LearningStandard",
      "x-displayName": "Learning Standard",
      "description": "<p>Operations maintaining a particular curriculum standard or the like,  published by a national body, professional association or other interested party.</p> <p>The LearningStandard describes a set of learning that students are  expected to undertake. </p>"
    },
    {
      "name": "Credential",
      "x-displayName": "Credential",
      "description": "<p>Operations on a particular qualification or other award published by a national body,  professional association or other interested party.</p> <p>The Credential recognises a set of  learning that students have undertaken and  successfully completed. </p>"
    },
    {
      "name": "StudentAssessmentTask",
      "x-displayName": "Student Assessment Task",
      "description": "<p>Operations on a particular student's attempt at an assignment, essay, class test,  internal or external assessment exam, or any other task that is set to students and  assessed as part of the learning process, within the scope of the Provider that the student is enrolled in.</p>"
    },
    {
      "name": "StudentAssessmentTaskResult",
      "x-displayName": "Student Assessment Task Result",
      "description": "<p>Operations on a particular student's result from an assignment, essay, class test,  internal or external assessment exam, or any other task that is set to students and  assessed as part of the learning process, within the scope of the Provider that the student is enrolled in.</p>"
    },
    {
      "name": "StudentAttainment",
      "x-displayName": "Student Attainment",
      "description": "<p>Operations on a articular student's achieving some <a href=\"#tag/Credential\">Credential</a>, <a href=\"#tag/LearningStandard\">LearningStandard</a>, or completing a <a href=\"#tag/ProviderCourse\">ProviderCourse</a>"
    },
    {
      "name": "HauoraWellbeingOverview",
      "x-displayName": "Hauora / Wellbeing Overview",
      "description": "<p> The Hauora / Wellbing domain records everything from Student's health conditions through behavioural incidents (both good and bad) to\n  Student's aspirations and goals participation in extra-curricular activities and the provision of Learning Support programmes.\n<img src=\"domains/SIFNZ-LogicalModel-WellbeingDomain.png\" usemap=\"#Hauora / WellbeingMap\" /> <map title=\"Hauora / WellbeingMap\" name=\"Hauora / WellbeingMap\">\n  <area title=\"StudentConsent\" shape=\"rect\" coords=\"135,149,236,176\" href=\"$tag/StudentConsent\" />\n  <area title=\"WellbeingCharacteristic\" shape=\"rect\" coords=\"235,236,361,274\" href=\"#tag/WellbeingCharacteristic\" />\n  <area title=\"WellbeingAlert\" shape=\"rect\" coords=\"368,166,454,216\" href=\"#tag/WellbeingAlert\" />\n  <area title=\"WellbeingEvent\" shape=\"rect\" coords=\"494,237,592,275\" href=\"#tag/WellbeingEvent\" />\n  <area title=\"WellbeingResponse\" shape=\"rect\" coords=\"626,285,716,325\" href=\"#tag/WellbeingResponse\" />\n  <area title=\"WellbeingAppeal\" shape=\"rect\" coords=\"748,338,836,374\" href=\"#tag/WellbeingAppeal\" />\n  <area title=\"StudentLearningSupport\" shape=\"rect\" coords=\"35,239,174,275\" href=\"#tag/StudentLearningSupport\" />\n  <area title=\"StudentLearningSupportResponse\" shape=\"rect\" coords=\"85,368,261,406\" href=\"#tag/StudentLearningSupportResponse\" />\n  <area title=\"Document\" shape=\"rect\" coords=\"874,228,956,263\" href=\"#tag/Document\" />\n  <area title=\"StudentVoice\" shape=\"rect\" coords=\"815,166,906,204\" href=\"#tag/StudentVoice\" />\n  <area title=\"StudentPersonal\" shape=\"rect\" coords=\"565,44,752,110\" href=\"#tag/StudentPersonal\" />\n  <area title=\"Organisation\" shape=\"rect\" coords=\"505,400,662,472\" href=\"#tag/Organisation\" />\n  <area title=\"StudentPhysicalRestraint\" shape=\"rect\" coords=\"975,106,1111,144\" href=\"#tag/StudentPhysicalRestraint\" />\n  <area title=\"StaffPersonal\" shape=\"rect\" coords=\"1012,229,1111,265\" href=\"#tag/StaffPersonal\" />\n  <area title=\"StudentActivityParticipation\" shape=\"rect\" coords=\"996,478,1157,517\" href=\"#tag/StudentActivityParticipation\" />\n</map>",
      "externalDocs": {
        "description": "Hauora / Wellbeing Domain in SIF NZ Data Model",
        "url": "http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/DomainMap.html#Domain__Hauora/Wellbeing"
      }
    },
    {
      "name": "WellbeingCharacteristic",
      "x-displayName": "Wellbeing Characteristic",
      "description": "<p>Operation on a particular core characteristic that is integral to the Student.  It may be a Medical condition, special needs or a characteristic such as a known disability or any other characteristic or condition that is student specific and  impacts their learning.</p>"
    },
    {
      "name": "StudentLearningSupport",
      "x-displayName": "Student Learning Support",
      "description": "<p>Operations on a single record of the meta-data and metrics pertaining to  a particular student's Learning Support needs.</p>"
    },
    {
      "name": "StudentLearningSupportResponse",
      "x-displayName": "Student Learning Support Response",
      "description": "<p>Operations on a single response generated by a student's  Learning Support needs</p> <p><strong>Note:</strong> Learning support needs are recorded as <a href=\"#tag/WellbeingCharacteristic\">WellbeingCharacteristics</a></p>"
    }
  ],
  "paths": {
    "/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search for Staff and Students",
        "description": "Search operation returning partial <a href=\"#tag/StaffPersonal\">StaffPersonal</a>\nand <a href=\"#tag/StudentPersonal\">StudentPersonal</a> objects.",
        "operationId": "search",
        "security": [
          {
            "sifDataObject": [
              "FIRST",
              "SUPS",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamObjects"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSrchPattern"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSrchQuery"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Search"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isSearch": true
      }
    },
    "/organisation": {
      "post": {
        "tags": [
          "Organisation"
        ],
        "summary": "Create one or more Organisations",
        "description": "Bulk operation to create one or more Organisations, each of which represents a single recognised Education Provider entity (ECEs, Schools & Tertiary Education Institutions), Community (Kāhui Ako, Learning Support Clusters, etc.), or others unit(Teen Parent Units, Activity Centres. etc.)",
        "operationId": "createOrganisations",
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          }
        ],
        "security": [
          {
            "sifDataObject": [
              "FIRST"
            ]
          }
        ],
        "requestBody": {
          "description": "CRUD operation on Organisation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationCREATEList"
              },
              "example": {
                "Organisations": {
                  "Organisation": [
                    {
                      "OrganisationRefId": "922",
                      "OrganisationLocalId": "42342",
                      "Name": "Hogwart's Area School",
                      "Authority": "STATE",
                      "SectorRole": "35003",
                      "Type": "10030",
                      "OperationalStatus": "O",
                      "EntityOpen": "1652-04-01T00:00:00+1200",
                      "EducationRegion": "12013",
                      "SpecialEducationDistrict": "182011",
                      "Address": {
                        "Physical": {
                          "Type": "RU",
                          "Line1": "1175 Lake Ferry Rd",
                          "Suburb": "RD 1",
                          "City": "Martinborough"
                        }
                      },
                      "CommunicationChannel": {
                        "Website": {
                          "Notes": "Main school website",
                          "Value": "http://www.hogwarts.school.nz"
                        }
                      },
                      "ContactList": {
                        "Contact": [
                          {
                            "Name": {
                              "FamilyName": "Dumbledore",
                              "GivenName": "Albus",
                              "FullName": "Albus Dumbledore"
                            },
                            "PositionTitle": "Headmaster",
                            "Role": "PRI",
                            "Address": {
                              "Physical": {
                                "Type": "TH",
                                "Line1": "533 Hogwart's Way",
                                "City": "Hogsmead",
                                "PostalCode": "7733"
                              }
                            },
                            "Email": {},
                            "Phone": {}
                          },
                          {
                            "Name": {
                              "FamilyName": "Hagrid",
                              "GivenName": "Rubeus",
                              "FullName": "Rubeus Hagrid"
                            },
                            "PositionTitle": "Gamekeeper",
                            "Role": "DIR",
                            "Address": {
                              "Physical": {
                                "Type": "TH",
                                "Line1": "The Enchanted Wood",
                                "Line2": "533 Hogwart's Way",
                                "City": "Hogsmead",
                                "PostalCode": "7733"
                              }
                            },
                            "Email": {},
                            "Phone": {}
                          }
                        ]
                      },
                      "Email": {
                        "Main": {
                          "Address": "admin@hogwarts.school.nz"
                        }
                      },
                      "LocationList": {
                        "Location": [
                          {
                            "Description": "Only Campus",
                            "Address": {
                              "Type": "RU",
                              "Line1": "1175 Lake Ferry Rd",
                              "Suburb": "RD 1",
                              "City": "Martinborough",
                              "PostalCode": "5781"
                            },
                            "GridLocation": {
                              "Latitude": -41.2814719,
                              "Longitude": 175.3458472
                            },
                            "StatisticalAreaList": {
                              "StatisticalArea": [
                                {
                                  "SpatialUnitType": "GE",
                                  "Code": "058"
                                },
                                {
                                  "SpatialUnitType": "TA",
                                  "Code": "050"
                                },
                                {
                                  "SpatialUnitType": "WA",
                                  "Code": "05003"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "Phone": {
                        "Main": {
                          "Notes": "School Secretary DDI",
                          "Number": "(04) 300 9993"
                        }
                      },
                      "SchoolService": {
                        "CoEdStatus": "COED",
                        "Decile": 5,
                        "NewEntrantPolicyList": {
                          "EnactedPolicy": [
                            {
                              "EffectiveTo": "2018-12-31T00:00:00+1200",
                              "Policy": "AE"
                            },
                            {
                              "EffectiveFrom": "2019-01-01T00:00:00+1200",
                              "Policy": "CE"
                            }
                          ]
                        },
                        "SchoolYearList": {
                          "SchoolYear": [
                            {
                              "YearLevel": 1,
                              "FIRSTSchoolYearGenderId": 1001,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 2,
                              "FIRSTSchoolYearGenderId": 1002,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 3,
                              "FIRSTSchoolYearGenderId": 1003,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 4,
                              "FIRSTSchoolYearGenderId": 1004,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 5,
                              "FIRSTSchoolYearGenderId": 1005,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 6,
                              "FIRSTSchoolYearGenderId": 1006,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 7,
                              "FIRSTSchoolYearGenderId": 1007,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 8,
                              "FIRSTSchoolYearGenderId": 1008,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 9,
                              "FIRSTSchoolYearGenderId": 1009,
                              "Gender": "F"
                            },
                            {
                              "YearLevel": 10,
                              "FIRSTSchoolYearGenderId": 1010,
                              "Gender": "F"
                            },
                            {
                              "YearLevel": 11,
                              "FIRSTSchoolYearGenderId": 1011,
                              "Gender": "F"
                            },
                            {
                              "YearLevel": 12,
                              "FIRSTSchoolYearGenderId": 1012,
                              "Gender": "F"
                            },
                            {
                              "YearLevel": 13,
                              "FIRSTSchoolYearGenderId": 1013,
                              "Gender": "F"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationCREATEList"
              },
              "example": "<Organisations>\n  <Organisation>\n    <AddressList/>\n    <CommunicationChannel/>\n    <ContactList>\n      <Contact>\n        <Name>\n          <FamilyName>Dumbledore</FamilyName>\n          <GivenName>Albus</GivenName>\n          <FullName>Albus Dumbledore</FullName>\n        </Name>\n        <PositionTitle>Lead School Headmaster</PositionTitle>\n        <Role>PRI</Role>\n        <Address>\n          <Physical>\n            <Type>TH</Type>\n            <Line1>533 Hogwart's Way</Line1>\n            <City>Hogsmead</City>\n            <PostalCode>7733</PostalCode>\n          </Physical>\n        </Address>\n        <Email/>\n        <Phone/>\n      </Contact>\n    </ContactList>\n    <Email>\n      <Main>\n        <Address>hogwarts@mailinator.com</Address>\n      </Main>\n    </Email>\n    <LocationList/>\n    <Name>Masterton (Whakaoriori) Kāhui Ako</Name>\n    <Phone>\n      <Main>\n        <Notes>School Secretary DDI</Notes>\n        <Number>(03) 300 999</Number>\n      </Main>\n    </Phone>\n    <Type>998</Type>\n    <OrganisationRefId>922</OrganisationRefId>\n    <OrganisationLocalId>99204</OrganisationLocalId>\n  </Organisation>\n</Organisations>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationErrorList"
                },
                "example": [
                  {
                    "Organisation": {
                      "OrganisationRefId": "922",
                      "OrganisationLocalId": "42342",
                      "Name": "Hogwart's Area School",
                      "Authority": "STATE",
                      "SectorRole": "35003",
                      "Type": "10030",
                      "OperationalStatus": "O",
                      "EntityOpen": "1652-04-01T00:00:00+1200",
                      "EducationRegion": "12013",
                      "SpecialEducationDistrict": "182011",
                      "Address": {
                        "Physical": {
                          "Type": "RU",
                          "Line1": "1175 Lake Ferry Rd",
                          "Suburb": "RD 1",
                          "City": "Martinborough"
                        }
                      },
                      "CommunicationChannel": {
                        "Website": {
                          "Notes": "Main school website",
                          "Value": "http://www.hogwarts.school.nz"
                        }
                      },
                      "ContactList": {
                        "Contact": [
                          {
                            "Name": {
                              "FamilyName": "Dumbledore",
                              "GivenName": "Albus",
                              "FullName": "Albus Dumbledore"
                            },
                            "PositionTitle": "Headmaster",
                            "Role": "PRI",
                            "Address": {
                              "Physical": {
                                "Type": "TH",
                                "Line1": "533 Hogwart's Way",
                                "City": "Hogsmead",
                                "PostalCode": "7733"
                              }
                            },
                            "Email": {},
                            "Phone": {}
                          },
                          {
                            "Name": {
                              "FamilyName": "Hagrid",
                              "GivenName": "Rubeus",
                              "FullName": "Rubeus Hagrid"
                            },
                            "PositionTitle": "Gamekeeper",
                            "Role": "DIR",
                            "Address": {
                              "Physical": {
                                "Type": "TH",
                                "Line1": "The Enchanted Wood",
                                "Line2": "533 Hogwart's Way",
                                "City": "Hogsmead",
                                "PostalCode": "7733"
                              }
                            },
                            "Email": {},
                            "Phone": {}
                          }
                        ]
                      },
                      "Email": {
                        "Main": {
                          "Address": "admin@hogwarts.school.nz"
                        }
                      },
                      "LocationList": {
                        "Location": [
                          {
                            "Description": "Only Campus",
                            "Address": {
                              "Type": "RU",
                              "Line1": "1175 Lake Ferry Rd",
                              "Suburb": "RD 1",
                              "City": "Martinborough",
                              "PostalCode": "5781"
                            },
                            "GridLocation": {
                              "Latitude": -41.2814719,
                              "Longitude": 175.3458472
                            },
                            "StatisticalAreaList": {
                              "StatisticalArea": [
                                {
                                  "SpatialUnitType": "GE",
                                  "Code": "058"
                                },
                                {
                                  "SpatialUnitType": "TA",
                                  "Code": "050"
                                },
                                {
                                  "SpatialUnitType": "WA",
                                  "Code": "05003"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "Phone": {
                        "Main": {
                          "Notes": "School Secretary DDI",
                          "Number": "(04) 300 9993"
                        }
                      },
                      "SchoolService": {
                        "CoEdStatus": "COED",
                        "Decile": 5,
                        "NewEntrantPolicyList": {
                          "EnactedPolicy": [
                            {
                              "EffectiveTo": "2018-12-31T00:00:00+1200",
                              "Policy": "AE"
                            },
                            {
                              "EffectiveFrom": "2019-01-01T00:00:00+1200",
                              "Policy": "CE"
                            }
                          ]
                        },
                        "SchoolYearList": {
                          "SchoolYear": [
                            {
                              "YearLevel": 1,
                              "FIRSTSchoolYearGenderId": 1001,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 2,
                              "FIRSTSchoolYearGenderId": 1002,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 3,
                              "FIRSTSchoolYearGenderId": 1003,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 4,
                              "FIRSTSchoolYearGenderId": 1004,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 5,
                              "FIRSTSchoolYearGenderId": 1005,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 6,
                              "FIRSTSchoolYearGenderId": 1006,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 7,
                              "FIRSTSchoolYearGenderId": 1007,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 8,
                              "FIRSTSchoolYearGenderId": 1008,
                              "Gender": "C"
                            },
                            {
                              "YearLevel": 9,
                              "FIRSTSchoolYearGenderId": 1009,
                              "Gender": "F"
                            },
                            {
                              "YearLevel": 10,
                              "FIRSTSchoolYearGenderId": 1010,
                              "Gender": "F"
                            },
                            {
                              "YearLevel": 11,
                              "FIRSTSchoolYearGenderId": 1011,
                              "Gender": "F"
                            },
                            {
                              "YearLevel": 12,
                              "FIRSTSchoolYearGenderId": 1012,
                              "Gender": "F"
                            },
                            {
                              "YearLevel": 13,
                              "FIRSTSchoolYearGenderId": 1013,
                              "Gender": "F"
                            }
                          ]
                        }
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationErrorList"
                },
                "example": "<Response>\n  <Organisation>\n    <AddressList/>\n    <CommunicationChannel/>\n    <ContactList>\n      <Contact>\n        <Name>\n          <FamilyName>Dumbledore</FamilyName>\n          <GivenName>Albus</GivenName>\n          <FullName>Albus Dumbledore</FullName>\n        </Name>\n        <PositionTitle>Lead School Headmaster</PositionTitle>\n        <Role>PRI</Role>\n        <Address>\n          <Physical>\n            <Type>TH</Type>\n            <Line1>533 Hogwart's Way</Line1>\n            <City>Hogsmead</City>\n            <PostalCode>7733</PostalCode>\n          </Physical>\n        </Address>\n        <Email/>\n        <Phone/>\n      </Contact>\n    </ContactList>\n    <Email>\n      <Main>\n        <Address>hogwarts@mailinator.com</Address>\n      </Main>\n    </Email>\n    <LocationList/>\n    <Name>Masterton (Whakaoriori) Kāhui Ako</Name>\n    <Phone>\n      <Main>\n        <Notes>School Secretary DDI</Notes>\n        <Number>(3) 300 999</Number>\n      </Main>\n    </Phone>\n    <Type>998</Type>\n    <OrganisationRefId>922</OrganisationRefId>\n    <OrganisationLocalId>99204</OrganisationLocalId>\n  </Organisation>    \n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "OrganisationErrorList"
          }
        },
        "x-isOrganisation": true,
        "x-noFKPKs": true,
        "x-isBulk": true,
        "x-isSingle": false
      },
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Retrieve one or more Organisations",
        "description": "Bulk operation to retrieve all available Organisations, each of which represents a single recognised Education Provider entity (ECEs, Schools & Tertiary  Education Institutions), Community (Kāhui Ako, Learning Support Clusters, etc.), or others unit(Teen Parent Units, Activity Centres. etc.)",
        "operationId": "getOrganisations",
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          }
        ],
        "security": [
          {
            "sifDataObject": [
              "SMS",
              "FIRST",
              "SUPS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "Organisation"
        ],
        "summary": "Update one or more Organisations",
        "description": "Bulk operation to update one or more Organisations, each of which represents a single recognised Education Provider entity (ECEs, Schools & Tertiary  Education Institutions), Community (Kāhui Ako, Learning Support Clusters, etc.), or others unit(Teen Parent Units, Activity Centres. etc.)    ",
        "operationId": "updateOrganisations",
        "security": [
          {
            "sifDataObject": [
              "FIRST"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on Organisation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1organisation/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1organisation/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "OrganisationErrorList"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": true,
        "x-isSingle": false
      },
      "patch": {
        "tags": [
          "Organisation"
        ],
        "summary": "Patch one or more Organisations",
        "description": "Bulk operation to update one or more fields of one or more Organisations, each of which represents a single recognised Education Provider entity (ECEs, Schools & Tertiary  Education Institutions), Community (Kāhui Ako, Learning Support Clusters, etc.), or others unit(Teen Parent Units, Activity Centres. etc.)",
        "operationId": "patchOrganisations",
        "security": [
          {
            "sifDataObject": [
              "FIRST"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on Organisation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1organisation/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1organisation/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "OrganisationErrorList"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": true,
        "x-isSingle": false
      }
    },
    "/organisation/{organisationRefId}": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Retrieve a single Organisation",
        "description": "Retrive a particular Organisation, which represents a single recognised Education Provider entity (ECEs, Schools & Tertiary  Education Institutions), Community (Kāhui Ako, Learning Support Clusters, etc.), or others unit(Teen Parent Units, Activity Centres. etc.)    ",
        "operationId": "getOrganisation",
        "security": [
          {
            "sifDataObject": [
              "SMS",
              "FIRST",
              "SUPS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "organisationRefId",
            "in": "path",
            "required": true,
            "description": "<p>The Ministry of Education Organisation Id of the Provider(or other Organisation); being worked on.</p>",
            "schema": {
              "type": "string",
              "pattern": "^[1-9][0-9]{0,4}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationCREATE"
                },
                "example": {
                  "Organisation": {
                    "OrganisationRefId": "922",
                    "OrganisationLocalId": "42342",
                    "Name": "Hogwart's Area School",
                    "Authority": "STATE",
                    "SectorRole": "35003",
                    "Type": "10030",
                    "OperationalStatus": "O",
                    "EntityOpen": "1652-04-01T00:00:00+1200",
                    "EducationRegion": "12013",
                    "SpecialEducationDistrict": "182011",
                    "Address": {
                      "Physical": {
                        "Type": "RU",
                        "Line1": "1175 Lake Ferry Rd",
                        "Suburb": "RD 1",
                        "City": "Martinborough"
                      }
                    },
                    "CommunicationChannel": {
                      "Website": {
                        "Notes": "Main school website",
                        "Value": "http://www.hogwarts.school.nz"
                      }
                    },
                    "ContactList": {
                      "Contact": [
                        {
                          "Name": {
                            "FamilyName": "Dumbledore",
                            "GivenName": "Albus",
                            "FullName": "Albus Dumbledore"
                          },
                          "PositionTitle": "Headmaster",
                          "Role": "PRI",
                          "Address": {
                            "Physical": {
                              "Type": "TH",
                              "Line1": "533 Hogwart's Way",
                              "City": "Hogsmead",
                              "PostalCode": "7733"
                            }
                          },
                          "Email": {},
                          "Phone": {}
                        },
                        {
                          "Name": {
                            "FamilyName": "Hagrid",
                            "GivenName": "Rubeus",
                            "FullName": "Rubeus Hagrid"
                          },
                          "PositionTitle": "Gamekeeper",
                          "Role": "DIR",
                          "Address": {
                            "Physical": {
                              "Type": "TH",
                              "Line1": "The Enchanted Wood",
                              "Line2": "533 Hogwart's Way",
                              "City": "Hogsmead",
                              "PostalCode": "7733"
                            }
                          },
                          "Email": {},
                          "Phone": {}
                        }
                      ]
                    },
                    "Email": {
                      "Main": {
                        "Address": "admin@hogwarts.school.nz"
                      }
                    },
                    "LocationList": {
                      "Location": [
                        {
                          "Description": "Only Campus",
                          "Address": {
                            "Type": "RU",
                            "Line1": "1175 Lake Ferry Rd",
                            "Suburb": "RD 1",
                            "City": "Martinborough",
                            "PostalCode": "5781"
                          },
                          "GridLocation": {
                            "Latitude": -41.2814719,
                            "Longitude": 175.3458472
                          },
                          "StatisticalAreaList": {
                            "StatisticalArea": [
                              {
                                "SpatialUnitType": "GE",
                                "Code": "058"
                              },
                              {
                                "SpatialUnitType": "TA",
                                "Code": "050"
                              },
                              {
                                "SpatialUnitType": "WA",
                                "Code": "05003"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "Phone": {
                      "Main": {
                        "Notes": "School Secretary DDI",
                        "Number": "(04) 300 9993"
                      }
                    },
                    "SchoolService": {
                      "CoEdStatus": "COED",
                      "Decile": 5,
                      "NewEntrantPolicyList": {
                        "EnactedPolicy": [
                          {
                            "EffectiveTo": "2018-12-31T00:00:00+1200",
                            "Policy": "AE"
                          },
                          {
                            "EffectiveFrom": "2019-01-01T00:00:00+1200",
                            "Policy": "CE"
                          }
                        ]
                      },
                      "SchoolYearList": {
                        "SchoolYear": [
                          {
                            "YearLevel": 1,
                            "FIRSTSchoolYearGenderId": 1001,
                            "Gender": "C"
                          },
                          {
                            "YearLevel": 2,
                            "FIRSTSchoolYearGenderId": 1002,
                            "Gender": "C"
                          },
                          {
                            "YearLevel": 3,
                            "FIRSTSchoolYearGenderId": 1003,
                            "Gender": "C"
                          },
                          {
                            "YearLevel": 4,
                            "FIRSTSchoolYearGenderId": 1004,
                            "Gender": "C"
                          },
                          {
                            "YearLevel": 5,
                            "FIRSTSchoolYearGenderId": 1005,
                            "Gender": "C"
                          },
                          {
                            "YearLevel": 6,
                            "FIRSTSchoolYearGenderId": 1006,
                            "Gender": "C"
                          },
                          {
                            "YearLevel": 7,
                            "FIRSTSchoolYearGenderId": 1007,
                            "Gender": "C"
                          },
                          {
                            "YearLevel": 8,
                            "FIRSTSchoolYearGenderId": 1008,
                            "Gender": "C"
                          },
                          {
                            "YearLevel": 9,
                            "FIRSTSchoolYearGenderId": 1009,
                            "Gender": "F"
                          },
                          {
                            "YearLevel": 10,
                            "FIRSTSchoolYearGenderId": 1010,
                            "Gender": "F"
                          },
                          {
                            "YearLevel": 11,
                            "FIRSTSchoolYearGenderId": 1011,
                            "Gender": "F"
                          },
                          {
                            "YearLevel": 12,
                            "FIRSTSchoolYearGenderId": 1012,
                            "Gender": "F"
                          },
                          {
                            "YearLevel": 13,
                            "FIRSTSchoolYearGenderId": 1013,
                            "Gender": "F"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationCREATE"
                },
                "example": "<Organisation>\n  <AddressList/>\n  <CommunicationChannel/>\n  <ContactList>\n    <Contact>\n      <Name>\n        <FamilyName>Dumbledore</FamilyName>\n        <GivenName>Albus</GivenName>\n        <FullName>Albus Dumbledore</FullName>\n      </Name>\n      <PositionTitle>Lead School Headmaster</PositionTitle>\n      <Role>PRI</Role>\n      <Address>\n        <Physical>\n          <Type>TH</Type>\n          <Line1>533 Hogwart's Way</Line1>\n          <City>Hogsmead</City>\n          <PostalCode>7733</PostalCode>\n        </Physical>\n      </Address>\n      <Email/>\n      <Phone/>\n    </Contact>\n  </ContactList>\n  <Email>\n    <Main>\n      <Address>hogwarts@mailinator.com</Address>\n    </Main>\n  </Email>\n  <LocationList/>\n  <Name>Masterton (Whakaoriori) Kāhui Ako</Name>\n  <Phone>\n    <Main>\n      <Notes>School Secretary DDI</Notes>\n      <Number>(03) 300 999</Number>\n    </Main>\n  </Phone>\n  <Type>998</Type>\n  <OrganisationRefId>922</OrganisationRefId>\n  <OrganisationLocalId>99204</OrganisationLocalId>\n</Organisation>"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "Organisation"
        ],
        "summary": "Update a single Organisation",
        "description": "Update a particular Organisation, which represents a single recognised Education Provider entity (ECEs, Schools & Tertiary  Education Institutions), Community (Kāhui Ako, Learning Support Clusters, etc.), or others unit(Teen Parent Units, Activity Centres. etc.)    ",
        "operationId": "updateOrganisation",
        "security": [
          {
            "sifDataObject": [
              "FIRST"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "organisationRefId",
            "in": "path",
            "required": true,
            "description": "<p>The Ministry of Education Organisation Id of the Provider(or other Organisation); being worked on.</p>",
            "schema": {
              "type": "string",
              "pattern": "^[1-9][0-9]{0,4}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on Organisation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationCREATE"
              },
              "example": {
                "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationCREATE"
              },
              "example": {
                "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": false,
        "x-isSingle": true
      },
      "patch": {
        "tags": [
          "Organisation"
        ],
        "summary": "Patch a single Organisation",
        "description": "Update one or more fields of a particular Organisation, which represents a single recognised Education Provider entity (ECEs, Schools & Tertiary  Education Institutions), Community (Kāhui Ako, Learning Support Clusters, etc.), or others unit(Teen Parent Units, Activity Centres. etc.)",
        "operationId": "patchOrganisation",
        "security": [
          {
            "sifDataObject": [
              "FIRST"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "organisationRefId",
            "in": "path",
            "required": true,
            "description": "<p>The Ministry of Education Organisation Id of the Provider(or other Organisation); being worked on.</p>",
            "schema": {
              "type": "string",
              "pattern": "^[1-9][0-9]{0,4}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on Organisation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPATCH"
              },
              "example": {
                "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPATCH"
              },
              "example": {
                "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": false,
        "x-isSingle": true
      }
    },
    "/organisation/{organisationRefId}/organisationrelationship": {
      "post": {
        "tags": [
          "OrganisationRelationship"
        ],
        "summary": "Create one or more OrganisationRelationships",
        "description": "Bulk operation to create one or more OrganisationRelationships, each of which represents  a single recognised relationship between two education Organisations. The two organisations are referred to as the Source Organisation and the Related Organisation.</p> <p>RelationshipType records the nature of the relationship between the two organisations,  and gives guidance on which is the Source Organisation and which is the Related Organisation.</p>",
        "operationId": "createOrganisationRelationships",
        "security": [
          {
            "sifDataObject": [
              "FIRST"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "organisationRefId",
            "in": "path",
            "required": true,
            "description": "<p>The Ministry of Education Organisation Id of the Provider (or other Organisation) that must be either the <strong>source</strong> or <strong>related</strong> Organisation of the organisation relationships.",
            "schema": {
              "type": "string",
              "pattern": "^[1-9][0-9]{0,4}$"
            },
            "example": "9651",
            "x-isOrgId": true,
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on OrganisationRelationship",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationRelationshipCREATEList"
              },
              "example": {
                "OrganisationRelationships": {
                  "OrganisationRelationship": [
                    {
                      "OrganisationRelationshipLocalId": "90100_8001",
                      "Status": "A",
                      "RelationshipType": "34037",
                      "SourceOrganisation": {
                        "RefId": "90100"
                      },
                      "SourceOrganisationRole": "LSC",
                      "SourceOrganisationAgreementDate": "2020-01-15T00:00:00+1200",
                      "RelatedOrganisation": {
                        "RefId": "8001"
                      },
                      "RelatedOrganisationRole": "184000",
                      "RelatedOrganisationAgreementDate": "2020-01-15T00:00:00+1200",
                      "EffectiveDate": "2020-01-15T00:00:00+1200"
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationRelationshipCREATEList"
              },
              "example": "<OrganisationRelationships>\n  <OrganisationRelationship>\n    <OrganisationRelationshipLocalId>90100_8001</OrganisationRelationshipLocalId>\n    <Status>A</Status>\n    <RelationshipType>34037</RelationshipType>\n    <SourceOrganisation>\n      <RefId>90100</RefId>\n    </SourceOrganisation>\n    <SourceOrganisationRole>LSC</SourceOrganisationRole>\n    <SourceOrganisationAgreementDate>2020-01-15</SourceOrganisationAgreementDate>\n    <RelatedOrganisation>\n      <RefId>8001</RefId>\n    </RelatedOrganisation>\n    <RelatedOrganisationRole>184000</RelatedOrganisationRole>\n    <RelatedOrganisationAgreementDate>2020-01-15</RelatedOrganisationAggreementDate>\n    <EffectiveDate>2020-01-15</EffectiveDate>\n  </OrganisationRelationship>\n  <OrganisationRelationship>\n    <OrganisationRelationshipLocalId>90100_8002</OrganisationRelationshipLocalId>\n    <Status>A</Status>\n    <RelationshipType>34037</RelationshipType>\n    <SourceOrganisation>\n      <RefId>90100</RefId>\n    </SourceOrganisation>\n    <SourceOrganisationRole>LSC</SourceOrganisationRole>\n    <SourceOrganisationAgreementDate>2020-01-15</SourceOrganisationAgreementDate>\n    <RelatedOrganisation>\n      <RefId>8002</RefId>\n    </RelatedOrganisation>\n    <RelatedOrganisationRole>184000</RelatedOrganisationRole>\n    <RelatedOrganisationAgreementDate>2020-01-16</RelatedOrganisationAggreementDate>\n    <EffectiveDate>2020-01-16</EffectiveDate>\n  </OrganisationRelationship>\n</OrganisationRelationships>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipErrorList"
                },
                "example": [
                  {
                    "OrganisationRelationship": {
                      "OrganisationRelationshipLocalId": "90100_8001",
                      "Status": "A",
                      "RelationshipType": "34037",
                      "SourceOrganisation": {
                        "RefId": "90100"
                      },
                      "SourceOrganisationRole": "LSC",
                      "SourceOrganisationAgreementDate": "2020-01-15T00:00:00+1200",
                      "RelatedOrganisation": {
                        "RefId": "8001"
                      },
                      "RelatedOrganisationRole": "184000",
                      "RelatedOrganisationAgreementDate": "2020-01-15T00:00:00+1200",
                      "EffectiveDate": "2020-01-15T00:00:00+1200"
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipErrorList"
                },
                "example": "<Response>\n  <OrganisationRelationship>\n    <OrganisationRelationshipLocalId>90100_8001</OrganisationRelationshipLocalId>\n    <Status>A</Status>\n    <RelationshipType>34037</RelationshipType>\n    <SourceOrganisation>\n      <RefId>90100</RefId>\n    </SourceOrganisation>\n    <SourceOrganisationRole>LSC</SourceOrganisationRole>\n    <SourceOrganisationAgreementDate>2020-01-15</SourceOrganisationAgreementDate>\n    <RelatedOrganisation>\n      <RefId>8001</RefId>\n    </RelatedOrganisation>\n    <RelatedOrganisationRole>184000</RelatedOrganisationRole>\n    <RelatedOrganisationAgreementDate>2020-01-15</RelatedOrganisationAggreementDate>\n    <EffectiveDate>2020-01-15</EffectiveDate>\n  </OrganisationRelationship>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "OrganisationRelationshipErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "SourceOrganisation.RefId",
          "RelatedOrganisation.RefId"
        ],
        "x-isOrgRelationship": true
      },
      "get": {
        "tags": [
          "OrganisationRelationship"
        ],
        "summary": "Get a list of OrganisationRelationships",
        "description": "Bulk operation to retrieve all available OrganisationRelationships where the given OrganisationRelationshipRefId represents either the <strong>Source</strong> or <strong>Related</strong> organisation in the OrganisationRelationship.</p> <p> Each OrganisationRelationship represents a single recognised relationship between two education Organisations. The two organisations are referred to as the Source  Organisation and the Related Organisation.</p> <p>RelationshipType records the nature of the relationship between the two organisations,  and gives guidance on which is the Source Organisation and which is the Related Organisation.</p>",
        "operationId": "getOrganisationRelationships",
        "security": [
          {
            "sifDataObject": [
              "SMS",
              "FIRST",
              "SUPS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "organisationRefId",
            "in": "path",
            "required": true,
            "description": "<p>The Ministry of Education Organisation Id of the Provider (or other Organisation) that must be either the <strong>source</strong> or <strong>related</strong> Organisation of the organisation relationships.",
            "schema": {
              "type": "string",
              "pattern": "^[1-9][0-9]{0,4}$"
            },
            "example": "9651",
            "x-isOrgId": true,
            "x-isPK": true
          },
          {
            "$ref": "#/components/parameters/statusIA"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-isOrgRelationship": true
      },
      "put": {
        "tags": [
          "OrganisationRelationship"
        ],
        "summary": "Update a list of OrganisationRelationships",
        "description": "Bulk operation to update a set of OrganisationRelationships, each of which represents a  single recognised relationship between two education Organisations. The two organisations\n are referred to as the Source Organisation and the Related Organisation.</p>\n<p>RelationshipType records the nature of the relationship between the two organisations,  and gives guidance on which is the Source Organisation and which is the Related Organisation.</p>",
        "operationId": "updateOrganisationRelationships",
        "security": [
          {
            "sifDataObject": [
              "FIRST"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "organisationRefId",
            "in": "path",
            "required": true,
            "description": "<p>The Ministry of Education Organisation Id of the Provider (or other Organisation) that must be either the <strong>source</strong> or <strong>related</strong> Organisation of the organisation relationships.",
            "schema": {
              "type": "string",
              "pattern": "^[1-9][0-9]{0,4}$"
            },
            "example": "9651",
            "x-isOrgId": true,
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on OrganisationRelationship",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationRelationshipCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationRelationshipCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "OrganisationRelationshipErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "SourceOrganisation.RefId",
          "RelatedOrganisation.RefId"
        ],
        "x-isOrgRelationship": true
      },
      "patch": {
        "tags": [
          "OrganisationRelationship"
        ],
        "summary": "Patch a list of OrganisationRelationships",
        "description": "Bulk operation to update one or more fields of a set of OrganisationRelationships, each of which represents a  single recognised relationship between two education Organisations. The two organisations are referred to as the Source Organisation and the Related Organisation.</p> <p>RelationshipType records the nature of the relationship between the two organisations,  and gives guidance on which is the Source Organisation and which is the Related Organisation.</p>",
        "operationId": "patchOrganisationRelationships",
        "security": [
          {
            "sifDataObject": [
              "FIRST"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "organisationRefId",
            "in": "path",
            "required": true,
            "description": "<p>The Ministry of Education Organisation Id of the Provider (or other Organisation) that must be either the <strong>source</strong> or <strong>related</strong> Organisation of the organisation relationships.",
            "schema": {
              "type": "string",
              "pattern": "^[1-9][0-9]{0,4}$"
            },
            "example": "9651",
            "x-isOrgId": true,
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on OrganisationRelationship",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationRelationshipPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationRelationshipPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "OrganisationRelationshipErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "SourceOrganisation.RefId",
          "RelatedOrganisation.RefId"
        ],
        "x-isOrgRelationship": true
      }
    },
    "/organisation/{organisationRefId}/organisationrelationship/{OrganisationRelationshipRefId}": {
      "get": {
        "tags": [
          "OrganisationRelationship"
        ],
        "summary": "Get a single OrganisationRelationship",
        "description": "Retrieve a particular OrganisationRelationship, which represents a  single recognised relationship between two education Organisations. The two organisations are referred to  as the Source Organisation and the Related Organisation.</p> <p>RelationshipType records the nature of the relationship between the two organisations,  and gives guidance on which is the Source Organisation and which is the Related Organisation.</p>",
        "operationId": "getOrganisationRelationship",
        "security": [
          {
            "sifDataObject": [
              "SMS",
              "FIRST",
              "SUPS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "organisationRefId",
            "in": "path",
            "required": true,
            "description": "<p>The Ministry of Education Organisation Id of the Provider (or other Organisation) that must be either the <strong>source</strong> or <strong>related</strong> Organisation of the organisation relationships.",
            "schema": {
              "type": "string",
              "pattern": "^[1-9][0-9]{0,4}$"
            },
            "example": "9651",
            "x-isOrgId": true,
            "x-isPK": true
          },
          {
            "name": "OrganisationRelationshipRefId",
            "in": "path",
            "description": "<p>The SIF GUID used by systems to identify the OrganisationRelationship.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipCREATE"
                },
                "example": {
                  "OrganisationRelationship": {
                    "OrganisationRelationshipLocalId": "90100_8001",
                    "Status": "A",
                    "RelationshipType": "34037",
                    "SourceOrganisation": {
                      "RefId": "90100"
                    },
                    "SourceOrganisationRole": "LSC",
                    "SourceOrganisationAgreementDate": "2020-01-15T00:00:00+1200",
                    "RelatedOrganisation": {
                      "RefId": "8001"
                    },
                    "RelatedOrganisationRole": "184000",
                    "RelatedOrganisationAgreementDate": "2020-01-15T00:00:00+1200",
                    "EffectiveDate": "2020-01-15T00:00:00+1200"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipCREATE"
                },
                "example": "<OrganisationRelationship>\n  <OrganisationRelationshipLocalId>90100_8001</OrganisationRelationshipLocalId>\n  <Status>A</Status>\n  <RelationshipType>34037</RelationshipType>\n  <SourceOrganisation>\n    <RefId>90100</RefId>\n  </SourceOrganisation>\n  <SourceOrganisationRole>LSC</SourceOrganisationRole>\n  <SourceOrganisationAgreementDate>2020-01-15</SourceOrganisationAgreementDate>\n  <RelatedOrganisation>\n    <RefId>8001</RefId>\n  </RelatedOrganisation>\n  <RelatedOrganisationRole>184000</RelatedOrganisationRole>\n  <RelatedOrganisationAgreementDate>2020-01-15</RelatedOrganisationAggreementDate>\n  <EffectiveDate>2020-01-15</EffectiveDate>\n</OrganisationRelationship>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-isOrgRelationship": true
      },
      "put": {
        "tags": [
          "OrganisationRelationship"
        ],
        "summary": "Update a single OrganisationRelationship",
        "description": "Update a particular OrganisationRelationship, which represents a  single recognised relationship between two education Organisations. The two organisations are referred to  as the Source Organisation and the Related Organisation.</p> <p>RelationshipType records the nature of the relationship between the two organisations,  and gives guidance on which is the Source Organisation and which is the Related Organisation.</p>",
        "operationId": "updateOrganisationRelationship",
        "security": [
          {
            "sifDataObject": [
              "FIRST"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "organisationRefId",
            "in": "path",
            "required": true,
            "description": "<p>The Ministry of Education Organisation Id of the Provider (or other Organisation) that must be either the <strong>source</strong> or <strong>related</strong> Organisation of the organisation relationships.",
            "schema": {
              "type": "string",
              "pattern": "^[1-9][0-9]{0,4}$"
            },
            "example": "9651",
            "x-isOrgId": true,
            "x-isPK": true
          },
          {
            "name": "OrganisationRelationshipRefId",
            "in": "path",
            "description": "<p>The SIF GUID used by systems to identify the OrganisationRelationship.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on OrganisationRelationship",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationRelationshipCREATE"
              },
              "example": {
                "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship~1%7BOrganisationRelationshipRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationRelationshipCREATE"
              },
              "example": {
                "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship~1%7BOrganisationRelationshipRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship~1%7BOrganisationRelationshipRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship~1%7BOrganisationRelationshipRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "SourceOrganisation.RefId",
          "RelatedOrganisation.RefId"
        ],
        "x-isOrgRelationship": true
      },
      "patch": {
        "tags": [
          "OrganisationRelationship"
        ],
        "summary": "Patch a single OrganisationRelationship",
        "description": "Update one or more fields of a particular OrganisationRelationship, which represents a  single recognised relationship between two education Organisations. The two organisations are referred to as the Source Organisation and the Related Organisation.</p> <p>RelationshipType records the nature of the relationship between the two organisations,  and gives guidance on which is the Source Organisation and which is the Related Organisation.</p>",
        "operationId": "patchOrganisationRelationship",
        "security": [
          {
            "sifDataObject": [
              "FIRST"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "organisationRefId",
            "in": "path",
            "required": true,
            "description": "<p>The Ministry of Education Organisation Id of the Provider (or other Organisation) that must be either the <strong>source</strong> or <strong>related</strong> Organisation of the organisation relationships.",
            "schema": {
              "type": "string",
              "pattern": "^[1-9][0-9]{0,4}$"
            },
            "example": "9651",
            "x-isOrgId": true,
            "x-isPK": true
          },
          {
            "name": "OrganisationRelationshipRefId",
            "in": "path",
            "description": "<p>The SIF GUID used by systems to identify the OrganisationRelationship.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on OrganisationRelationship",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationRelationshipPATCH"
              },
              "example": {
                "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship~1%7BOrganisationRelationshipRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationRelationshipPATCH"
              },
              "example": {
                "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship~1%7BOrganisationRelationshipRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship~1%7BOrganisationRelationshipRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationRelationshipCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1organisation~1%7BorganisationRefId%7D~1organisationrelationship~1%7BOrganisationRelationshipRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "SourceOrganisation.RefId",
          "RelatedOrganisation.RefId"
        ],
        "x-isOrgRelationship": true
      }
    },
    "/staffpersonal": {
      "post": {
        "tags": [
          "StaffPersonal"
        ],
        "summary": "Create one or more StaffPersonals",
        "description": "<p>Bulk operation to create one or more StaffPersonal records of the personal contact and demographic information relating to a single staff member, who might be a teacher or other employee of the given Provider.</p>",
        "operationId": "createStaffPersonals",
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "security": [
          {
            "sifDataObject": [
              "SUPS",
              "SMS"
            ]
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StaffPersonal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffPersonalPOSTList"
              },
              "example": {
                "StaffPersonals": {
                  "StaffPersonal": [
                    {
                      "StaffPersonalRefId": "d3e34f41-9d75-101a-8c3d-00aa001a1652",
                      "StaffPersonalLocalId": "ST-001",
                      "PersonInfo": {
                        "Name": {
                          "FamilyName": "Smith",
                          "GivenName": "Fred",
                          "FullName": "Fred Smith",
                          "IsVerified": "N"
                        },
                        "Demographics": {
                          "BirthDate": "1966-05-01T00:00:00+1200"
                        },
                        "Email": {
                          "Personal": {
                            "Address": "freddy@mailinator.com",
                            "SourceOrganisation": {
                              "RefId": "8005"
                            }
                          }
                        }
                      },
                      "StaffAssignment": {
                        "StaffAssignmentLocalId": "8005_ST-001",
                        "StaffRole": "1002",
                        "StartDate": "2020-09-03T00:00:00+1200"
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StaffPersonalPOSTList"
              },
              "example": "<StaffPersonals>\n  <StaffPersonal>\n    <StaffPersonalRefId>d3e34f41-9d75-101a-8c3d-00aa001a1652</StaffPersonalRefId>\n    <StaffPersonalLocalId>ST-001</StaffPersonalLocalId>\n    <PersonInfo>\n      <Name>\n        <FamilyName>Smith</FamilyName>\n        <GivenName>Fred</GivenName>\n        <FullName>Fred Smith</FullName>\n        <IsVerified>N</IsVerified>\n      </Name>\n      <Demographics>\n        <BirthDate>1966-05-01</BirthDate>\n      </Demographics>          \n      <Email>\n        <Personal>\n          <Address>freddy@gmail.com</Address>\n          <SourceOrganisation>\n            <RefId>8005</RefId>\n          </SourceOrganisation>\n        </Personal>\n      </Email>\n    </PersonInfo>\n    <StaffAssignment>\n      <StaffRole>1002</StaffRole>\n      <StartDate>2020-09-03</StartDate>\n    </StaffAssignment>\n  </StaffPersonal>\n  <StaffPersonal>\n    <StaffPersonalRefId>d3e34f41-9d75-101a-8c3d-00aa001b3652</StaffPersonalRefId>\n    <StaffPersonalLocalId>ST-002</StaffPersonalLocalId>\n    <PersonInfo>\n      <Name>\n        <FullName>Fred Jones</FullName>\n        <IsVerified>N</IsVerified>\n      </Name>\n      <Demographics>\n        <BirthDate>1966-05-01</BirthDate>\n      </Demographics>          \n      <Email>\n        <Personal>\n          <Address>fredJ@gmail.com</Address>\n          <SourceOrganisation>\n            <RefId>8005</RefId>\n          </SourceOrganisation>\n        </Personal>\n      </Email>\n    <StaffAssignment>\n      <StaffRole>1002</StaffRole>\n      <StartDate>2020-09-03</StartDate>\n    </StaffAssignment>\n  </StaffPersonal>      \n</StaffPersonals>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalPOSTList"
                },
                "example": {
                  "$ref": "#/paths/~1staffpersonal/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalPOSTList"
                },
                "example": {
                  "$ref": "#/paths/~1staffpersonal/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalPOSTErrorList"
                },
                "example": [
                  {
                    "StaffPersonal": [
                      {
                        "StaffPersonalRefId": "d3e34f41-9d75-101a-8c3d-00aa001a1652",
                        "StaffPersonalLocalId": "ST-001",
                        "PersonInfo": {
                          "Name": {
                            "FamilyName": "Smith",
                            "GivenName": "Fred",
                            "FullName": "Fred Smith",
                            "IsVerified": "N"
                          },
                          "Demographics": {
                            "BirthDate": "1966-05-01T00:00:00+1200"
                          },
                          "Email": {
                            "Personal": {
                              "Address": "freddy@mailinator.com",
                              "SourceOrganisation": {
                                "RefId": "8005"
                              }
                            }
                          }
                        },
                        "StaffAssignment": {
                          "StaffAssignmentLocalId": "8005_ST-001",
                          "StaffRole": "1002",
                          "StartDate": "2020-09-03T00:00:00+1200"
                        }
                      }
                    ]
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalPOSTErrorList"
                },
                "example": "<Response>\n  <StaffPersonal>\n    <StaffPersonalRefId>d3e34f41-9d75-101a-8c3d-00aa001a1652</StaffPersonalRefId>\n    <StaffPersonalLocalId>ST-001</StaffPersonalLocalId>\n    <PersonInfo>\n      <Name>\n        <FamilyName>Smith</FamilyName>\n        <GivenName>Fred</GivenName>\n        <FullName>Fred Smith</FullName>\n        <IsVerified>N</IsVerified>\n      </Name>\n      <Demographics>\n        <BirthDate>1966-05-01</BirthDate>\n      </Demographics>\n      <EmailList>\n        <Email>\n          <Type>PRIM</Type>\n          <Address>freddy@gmail.com</Address>\n        </Email>\n      </EmailList>\n    </PersonInfo>\n  </StaffPersonal>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>\n</Response>"
              }
            },
            "x-overrideType": "StaffPersonalErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "PersonInfo.Email.Work.SourceOrganisation.RefId",
          "PersonInfo.Email.Personal.SourceOrganisation.RefId"
        ],
        "x-augmentedPOST": true,
        "x-augmentedPOSTAddition": "StaffAssignment",
        "x-augmentedPOSTParentRef": "StaffMember",
        "x-augmentedPOSTParentRefType": "ObjectReference",
        "x-augmentedPOSTOrgRef": "AssignedLocation"
      },
      "get": {
        "tags": [
          "StaffPersonal"
        ],
        "summary": "Retrieve one or more StaffPersonals",
        "description": "<p>Bulk operation to retrieve all available StaffPersonal records of the personal contact and demographic information relating to a single staff member, who might be a teacher or other  employee of the given Provider.</p>",
        "operationId": "getStaffPersonals",
        "security": [
          {
            "sifDataObject": [
              "SUPS",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalCREATEList"
                },
                "example": {
                  "StaffPersonals": {
                    "StaffPersonal": [
                      {
                        "StaffPersonalRefId": "d3e34f41-9d75-101a-8c3d-00aa001a1652",
                        "StaffPersonalLocalId": "ST-001",
                        "PersonInfo": {
                          "Name": {
                            "FamilyName": "Smith",
                            "GivenName": "Fred",
                            "FullName": "Fred Smith",
                            "IsVerified": "N"
                          },
                          "Demographics": {
                            "BirthDate": "1966-05-01T00:00:00+1200"
                          },
                          "Email": {
                            "Personal": {
                              "Address": "freddy@mailinator.com",
                              "SourceOrganisation": {
                                "RefId": "8005"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalCREATEList"
                },
                "example": "<StaffPersonals>\n  <StaffPersonal>\n    <StaffPersonalRefId>d3e34f41-9d75-101a-8c3d-00aa001a1652</StaffPersonalRefId>\n    <StaffPersonalLocalId>ST-001</StaffPersonalLocalId>\n    <PersonInfo>\n      <Name>\n        <FamilyName>Smith</FamilyName>\n        <GivenName>Fred</GivenName>\n        <FullName>Fred Smith</FullName>\n        <IsVerified>N</IsVerified>\n      </Name>\n      <Demographics>\n        <BirthDate>1966-05-01</BirthDate>\n      </Demographics>\n      <Email>\n        <Personal>\n          <Address>fred@gmail.com</Address>\n          <SourceOrganisation>\n            <RefId>8005</RefId>\n          </SourceOrganisation>\n        </Personal>\n      </Email>\n    </PersonInfo>\n  </StaffPersonal>\n  <StaffPersonal>\n    <StaffPersonalRefId>d3e34f41-9d75-101a-8c3d-00aa001b3652</StaffPersonalRefId>\n    <StaffPersonalLocalId>ST-002</StaffPersonalLocalId>\n    <PersonInfo>\n      <Name>\n        <FullName>Fred Jones</FullName>\n        <IsVerified>N</IsVerified>\n      </Name>\n      <Demographics>\n        <BirthDate>1966-05-01</BirthDate>\n      </Demographics>          \n      <Email>\n        <Personal>\n          <Address>freddy@gmail.com</Address>\n          <SourceOrganisation>\n            <RefId>8005</RefId>\n          </SourceOrganisation>\n        </Personal>\n      </Email>\n    </PersonInfo>\n  </StaffPersonal>      \n</StaffPersonals>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "StaffPersonal"
        ],
        "summary": "Update one or more StaffPersonals",
        "description": "<p>Bulk operation to update one or more StaffPeraonal records of the personal contact and  demographic information relating to a single staff member, who might be a teacher or other employee of the given Provider.</p>",
        "operationId": "updateStaffPersonals",
        "security": [
          {
            "sifDataObject": [
              "SUPS",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StaffPersonal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffPersonalCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1staffpersonal/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StaffPersonalCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1staffpersonal/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffpersonal/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffpersonal/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalErrorList"
                },
                "example": [
                  {
                    "StaffPersonal": {
                      "StaffPersonalRefId": "d3e34f41-9d75-101a-8c3d-00aa001a1652",
                      "StaffPersonalLocalId": "ST-001",
                      "PersonInfo": {
                        "Name": {
                          "FamilyName": "Smith",
                          "GivenName": "Fred",
                          "FullName": "Fred Smith",
                          "IsVerified": "N"
                        },
                        "Demographics": {
                          "BirthDate": "1966-05-01T00:00:00+1200"
                        },
                        "Email": {
                          "Personal": {
                            "Address": "freddy@mailinator.com",
                            "SourceOrganisation": {
                              "RefId": "8005"
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1staffpersonal/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StaffPersonalErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "PersonInfo.Email.Work.SourceOrganisation.RefId",
          "PersonInfo.Email.Personal.SourceOrganisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "StaffPersonal"
        ],
        "summary": "Patch one or more StaffPersonals",
        "description": "<p>Bulk operation to update one or more fields of one or more StaffPersonal records of the personal contact and demographic information relating to a single staff member, who might be a teacher or other employee of the given Provider.</p>",
        "operationId": "patchStaffPersonals",
        "security": [
          {
            "sifDataObject": [
              "SUPS",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StaffPersonal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffPersonalPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1staffpersonal/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StaffPersonalPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1staffpersonal/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffpersonal/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffpersonal/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1staffpersonal/put/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1staffpersonal/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StaffPersonalErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "PersonInfo.Email.Work.SourceOrganisation.RefId",
          "PersonInfo.Email.Personal.SourceOrganisation.RefId"
        ]
      }
    },
    "/staffpersonal/{staffPersonalRefId}": {
      "get": {
        "tags": [
          "StaffPersonal"
        ],
        "summary": "Retrieve a single StaffPersonal",
        "description": "Retrieve a single record of the personal contact and demographic information relating to a single staff member, who might be a teacher or other employee of the given Provider.</p>",
        "operationId": "getStaffPersonal",
        "security": [
          {
            "sifDataObject": [
              "SUPS",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "staffPersonalRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular StaffPersonal record of the personal contact and demographic information relating to a single  staff member, who might be a teacher or other employee of a Provider.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalCREATE"
                },
                "example": {
                  "StaffPersonal": {
                    "StaffPersonalRefId": "d3e34f41-9d75-101a-8c3d-00aa001a1652",
                    "StaffPersonalLocalId": "ST-001",
                    "PersonInfo": {
                      "Name": {
                        "FamilyName": "Smith",
                        "GivenName": "Fred",
                        "FullName": "Fred Smith",
                        "IsVerified": "N"
                      },
                      "Demographics": {
                        "BirthDate": "1966-05-01T00:00:00+1200"
                      },
                      "Email": {
                        "Personal": {
                          "Address": "freddy@mailinator.com",
                          "SourceOrganisation": {
                            "RefId": "8005"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalCREATE"
                },
                "example": "<StaffPersonal>\n  <StaffPersonalRefId>d3e34f41-9d75-101a-8c3d-00aa001a1652</StaffPersonalRefId>\n  <StaffPersonalLocalId>ST-001</StaffPersonalLocalId>\n  <PersonInfo>\n    <Name>\n      <FamilyName>Smith</FamilyName>\n      <GivenName>Fred</GivenName>\n      <FullName>Fred Smith</FullName>\n      <IsVerified>N</IsVerified>\n    </Name>\n    <Demographics>\n      <BirthDate>1966-05-01</BirthDate>\n    </Demographics>\n    <Email>\n      <Personal>\n        <Address>freddy@gmail.com</Address>\n        <SourceOrganisation>\n          <RefId>8005</RefId>\n        </SourceOrganisation>\n      </Personal>\n    </Email>\n  </PersonInfo>\n</StaffPersonal>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "StaffPersonal"
        ],
        "summary": "Update a single StaffPersonal",
        "description": "Update a single record of the personal contact and demographic information relating to a single staff member, who might be a teacher or other employee of the given Provider.</p>",
        "operationId": "updateStaffPersonal",
        "security": [
          {
            "sifDataObject": [
              "SUPS",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "staffPersonalRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular StaffPersonal record of the personal contact and demographic information relating to a single  staff member, who might be a teacher or other employee of a Provider.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StaffPersonal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffPersonalCREATE"
              },
              "example": {
                "$ref": "#/paths/~1staffpersonal~1%7BstaffPersonalRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StaffPersonalCREATE"
              },
              "example": {
                "$ref": "#/paths/~1staffpersonal~1%7BstaffPersonalRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1staffpersonal~1%7BstaffPersonalRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1staffpersonal~1%7BstaffPersonalRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "PersonInfo.Email.Work.SourceOrganisation.RefId",
          "PersonInfo.Email.Personal.SourceOrganisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "StaffPersonal"
        ],
        "summary": "Patch a single StaffPersonal",
        "description": "Update one or more fields of asingle record of the personal contact and demographic information relating to a single staff member, who might be a teacher or other employee of the given Provider.</p>",
        "operationId": "patchStaffPersonal",
        "security": [
          {
            "sifDataObject": [
              "SUPS",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "staffPersonalRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular StaffPersonal record of the personal contact and demographic information relating to a single  staff member, who might be a teacher or other employee of a Provider.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StaffPersonal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffPersonalPATCH"
              },
              "example": {
                "$ref": "#/paths/~1staffpersonal~1%7BstaffPersonalRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StaffPersonalPATCH"
              },
              "example": {
                "$ref": "#/paths/~1staffpersonal~1%7BstaffPersonalRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1staffpersonal~1%7BstaffPersonalRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffPersonalCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1staffpersonal~1%7BstaffPersonalRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "PersonInfo.Email.Work.SourceOrganisation.RefId",
          "PersonInfo.Email.Personal.SourceOrganisation.RefId"
        ]
      }
    },
    "/staffassignment": {
      "post": {
        "tags": [
          "StaffAssignment"
        ],
        "summary": "Create one or more StaffAssignments",
        "description": "<p>Bulk operation to create one or more assignments of a Staff member to their role at a Providers or other  Organisation.</p> <p>A staff member may have only have a single role at each Provider or Kāhui Ako at any one time (via the Organisation data object)</p>",
        "operationId": "createStaffAssignments",
        "security": [
          {
            "sifDataObject": [
              "SMS",
              "SUPS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StaffAssignment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffAssignmentCREATEList"
              },
              "example": {
                "StaffAssignments": {
                  "StaffAssignment": [
                    {
                      "StaffAssignmentLocalId": "2020_T99001_8001",
                      "StaffAssignmentStatus": "A",
                      "StaffMember": {
                        "LocalId": "T99001"
                      },
                      "AssignedLocation": {
                        "RefId": "8001"
                      },
                      "StartDate": "1995-01-02T00:00:00+1200",
                      "StaffRole": "1001",
                      "RecordAudit": {
                        "CreatedDateTime": "2020-05-26T00:00:00+1200",
                        "LastUpdatedDateTime": "2020-05-26T00:00:00+1200"
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StaffAssignmentCREATEList"
              },
              "example": "<StaffAssignments>\n  <StaffAssignment>\n    <StaffAssignmentLocalId>2020_T99001_8001</StaffAssignmentLocalId>\n    <StaffAssignmentStatus>A</StaffAssignmentStatus>\n    <StaffMember>\n      <LocalId>T99001</LocalId>\n    </StaffMember>\n    <AssignedLocation>\n      <RefId>8001</RefId>\n    </AssignedLocation>\n    <StartDate>1995-01-02</StartDate>\n    <StaffRole>1001</StaffRole>\n    <RecordAudit>\n      <CreatedDateTime>2020-05-26</CreatedDateTime>\n      <LastUpdatedDateTime>2020-05-26</LastUpdatedDateTime>\n    </RecordAudit>\n  </StaffAssignment>\n</StaffAssignments>  "
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentErrorList"
                },
                "example": [
                  {
                    "StaffAssignment": {
                      "StaffAssignmentLocalId": "2020_T99001_8001",
                      "StaffAssignmentStatus": "A",
                      "StaffMember": {
                        "LocalId": "T99001"
                      },
                      "AssignedLocation": {
                        "RefId": "8001"
                      },
                      "StartDate": "1995-01-02T00:00:00+1200",
                      "StaffRole": "1001",
                      "RecordAudit": {
                        "CreatedDateTime": "2020-05-26T00:00:00+1200",
                        "LastUpdatedDateTime": "2020-05-26T00:00:00+1200"
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentErrorList"
                },
                "example": "<Response>\n  <StaffAssignment>\n    <StaffAssignmentLocalId>2020_T99001_8001</StaffAssignmentLocalId>\n    <StaffAssignmentStatus>A</StaffAssignmentStatus>\n    <StaffMember>\n      <LocalId>T99001</LocalId>\n    </StaffMember>\n    <AssignedLocation>\n      <RefId>8001</RefId>\n    </AssignedLocation>\n    <StartDate>1995-01-02</StartDate>\n    <StaffRole>1001</StaffRole>\n    <RecordAudit>\n      <CreatedDateTime>2020-05-26</CreatedDateTime>\n      <LastUpdatedDateTime>2020-05-26</LastUpdatedDateTime>\n    </RecordAudit>\n  </StaffAssignment>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "StaffAssignmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "AssignedLocation.RefId"
        ],
        "x-staffPersonalObjectReference": "StaffMember",
        "x-statusField": "StaffAssignmentStatus",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "get": {
        "tags": [
          "StaffAssignment"
        ],
        "summary": "Retrieve one or more StaffAssignments",
        "description": "<p>Bulk operation to retrieve all available assignments of a Staff member to their role at the given Provider or other Organisation.</p> <p>A staff member may have only have a single role at each Provider or Kāhui Ako at any one time (via the Organisation data object)</p>    ",
        "operationId": "getStaffAssignments",
        "security": [
          {
            "sifDataObject": [
              "SMS",
              "SUPS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/statusIA"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-statusField": "StaffAssignmentStatus",
        "x-statusActive": "NZCodeSetsStaffAssignmentStatus.AEnum",
        "x-statusInActive": "NZCodeSetsStaffAssignmentStatus.IEnum",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "put": {
        "tags": [
          "StaffAssignment"
        ],
        "summary": "Update one or more StaffAssignments",
        "description": "<p>Bulk operation to update one or more assignments of a Staff member to their role at the given Provider or other Organisation.</p> <p>A staff member may have only have a single role at each Provider or Kāhui Ako at any one time (via the Organisation data object)</p>    ",
        "operationId": "updateStaffAssignments",
        "security": [
          {
            "sifDataObject": [
              "SMS",
              "SUPS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StaffAssignment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffAssignmentCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1staffassignment/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StaffAssignmentCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1staffassignment/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StaffAssignmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "AssignedLocation.RefId"
        ],
        "x-staffPersonalObjectReference": "StaffMember",
        "x-statusField": "StaffAssignmentStatus",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "patch": {
        "tags": [
          "StaffAssignment"
        ],
        "summary": "Patch one or more StaffAssignments",
        "description": "<p>Bulk operation to update one or more fields of one or more assignments of a Staff member to their role at the given Provider or other Organisation.</p> <p>A staff member may have only have a single role at each Provider or Kāhui Ako at any one time (via the Organisation data object)</p>    ",
        "operationId": "patchStaffAssignments",
        "security": [
          {
            "sifDataObject": [
              "SMS",
              "SUPS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StaffAssignment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffAssignmentPATCHList"
              },
              "example": {
                "StaffAssignments": {
                  "StaffAssignment": [
                    {
                      "StaffAssignmentLocalId": "2020_T99001_8001",
                      "StaffMember": {
                        "LocalId": "T99001"
                      },
                      "AssignedLocation": {
                        "RefId": "8001"
                      },
                      "StartDate": "1995-01-02T00:00:00+1200",
                      "StaffRole": "1001"
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StaffAssignmentPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1staffassignment/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StaffAssignmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "AssignedLocation.RefId"
        ],
        "x-staffPersonalObjectReference": "StaffMember",
        "x-statusField": "StaffAssignmentStatus",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      }
    },
    "/staffassignment/{staffPersonalRefId}": {
      "get": {
        "tags": [
          "StaffAssignment"
        ],
        "summary": "Retrieve a single StaffAssignment",
        "description": "<p>Retrieve a single assignment of a Staff member to their role at the given Provider or other Organisation.</p> <p>A staff member may have only have a single role at each Provider or Kāhui Ako at any one time (via the Organisation data object)</p>    ",
        "operationId": "getStaffAssignment",
        "security": [
          {
            "sifDataObject": [
              "SMS",
              "SUPS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/staffPersonalRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATE"
                },
                "example": {
                  "StaffAssignment": {
                    "StaffAssignmentLocalId": "2020_T99001_8001",
                    "StaffAssignmentStatus": "A",
                    "StaffMember": {
                      "LocalId": "T99001"
                    },
                    "AssignedLocation": {
                      "RefId": "8001"
                    },
                    "StartDate": "1995-01-02T00:00:00+1200",
                    "StaffRole": "1001",
                    "RecordAudit": {
                      "CreatedDateTime": "2020-05-26T00:00:00+1200",
                      "LastUpdatedDateTime": "2020-05-26T00:00:00+1200"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATE"
                },
                "example": "<StaffAssignment>\n  <StaffAssignmentLocalId>2020_T99001_8001</StaffAssignmentLocalId>\n  <StaffAssignmentStatus>A</StaffAssignmentStatus>\n  <StaffMember>\n    <LocalId>T99001</LocalId>\n  </StaffMember>\n  <AssignedLocation>\n    <RefId>8001</RefId>\n  </AssignedLocation>\n  <StartDate>1995-01-02</StartDate>\n  <StaffRole>1001</StaffRole>\n  <RecordAudit>\n    <CreatedDateTime>2020-05-26</CreatedDateTime>\n    <LastUpdatedDateTime>2020-05-26</LastUpdatedDateTime>\n  </RecordAudit>\n</StaffAssignment>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-allFKPKs": true,
        "x-statusField": "StaffAssignmentStatus",
        "x-statusActive": "NZCodeSetsStaffAssignmentStatus.AEnum",
        "x-statusInActive": "NZCodeSetsStaffAssignmentStatus.IEnum",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "put": {
        "tags": [
          "StaffAssignment"
        ],
        "summary": "Update a single StaffAssignment",
        "description": "<p>Update a single assignment of a Staff member to their role at the given Provider or other Organisation.</p> <p>A staff member may have only have a single role at each Provider or Kāhui Ako at any one time (via the Organisation data object)</p>    ",
        "operationId": "updateStaffAssignment",
        "security": [
          {
            "sifDataObject": [
              "SMS",
              "SUPS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/staffPersonalRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StaffAssignment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffAssignmentCREATE"
              },
              "example": {
                "$ref": "#/paths/~1staffassignment~1%7BstaffPersonalRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StaffAssignmentCREATE"
              },
              "example": {
                "$ref": "#/paths/~1staffassignment~1%7BstaffPersonalRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment~1%7BstaffPersonalRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment~1%7BstaffPersonalRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-allFKPKs": true,
        "x-orgIdFields": [
          "AssignedLocation.RefId"
        ],
        "x-staffPersonalObjectReference": "StaffMember",
        "x-statusField": "StaffAssignmentStatus",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "patch": {
        "tags": [
          "StaffAssignment"
        ],
        "summary": "Patch a single StaffAssignment",
        "description": "<p>Update one or more fields of a single assignment of a Staff member to their role at the given Provider or other Organisation.</p> <p>A staff member may have only have a single role at each Provider or Kāhui Ako at any one time (via the Organisation data object)</p>    ",
        "operationId": "patchStaffAssignment",
        "security": [
          {
            "sifDataObject": [
              "SMS",
              "SUPS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/staffPersonalRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StaffAssignment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffAssignmentPATCH"
              },
              "example": {
                "StaffAssignment": {
                  "StaffAssignmentLocalId": "2020_T99001_8001",
                  "StaffMember": {
                    "LocalId": "T99001"
                  },
                  "AssignedLocation": {
                    "RefId": "8001"
                  },
                  "StartDate": "1995-01-02T00:00:00+1200",
                  "StaffRole": "1001"
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StaffAssignmentPATCH"
              },
              "example": {
                "$ref": "#/paths/~1staffassignment~1%7BstaffPersonalRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment~1%7BstaffPersonalRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment~1%7BstaffPersonalRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "AssignedLocation.RefId"
        ],
        "x-staffPersonalObjectReference": "StaffMember",
        "x-statusField": "StaffAssignmentStatus",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      }
    },
    "/staffpersonal/{staffPersonalRefId}/staffassignment": {
      "get": {
        "tags": [
          "StaffAssignment"
        ],
        "summary": "Retrieve StaffAssignments by Staff Member",
        "description": "<p>Retrieve all available assignments of a particular Staff member to their role at any Provider or other Organisation.</p> <p>A staff member may have only have a single role at each Provider or Kāhui Ako at any one time (via the Organisation data object)</p>    ",
        "operationId": "getStaffAssignmentsByStaff",
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/staffPersonalRefId"
          }
        ],
        "security": [
          {
            "sifDataObject": [
              "SMS",
              "SUPS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffassignment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-byEntity": "ByStaffPersonal",
        "x-statusField": "StaffAssignmentStatus",
        "x-statusActive": "NZCodeSetsStaffAssignmentStatus.AEnum",
        "x-statusInActive": "NZCodeSetsStaffAssignmentStatus.IEnum",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      }
    },
    "/staffteachinggroupassignment": {
      "post": {
        "tags": [
          "StaffTeachingGroupAssignment"
        ],
        "summary": "Create one or more StaffTeachingGroupAssignments",
        "description": "<p>Bulk operation to create one or more assignments of Staff members to particular roles with a particular TeachingGroup at the given Provider</p>",
        "operationId": "createStaffTeachingGroupAssignments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StaffTeachingGroupAssignment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
              },
              "example": {
                "StaffTeachingGroupAssignments": {
                  "StaffTeachingGroupAssignment": [
                    {
                      "StaffTeachingGroupAssignmentLocalId": "2020_8003_HR9_T99064",
                      "Status": "A",
                      "StaffMember": {
                        "LocalId": "T99064"
                      },
                      "Organisation": {
                        "RefId": "8003"
                      },
                      "TeachingGroup": {
                        "LocalId": "2020_8003_HR9"
                      },
                      "Role": "1401",
                      "StartDate": "2020-01-27T00:00:00+1200",
                      "RecordAudit": {
                        "CreatedDateTime": "2020-05-26T00:00:00+1200",
                        "LastUpdatedDateTime": "2020-05-26T00:00:00+1200"
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
              },
              "example": "<StaffTeachingGroupAssignments>\n  <StaffTeachingGroupAssignment>\n    <StaffTeachingGroupAssignmentLocalId>2020_8003_HR9_T99064</StaffTeachingGroupAssignmentLocalId>\n    <StaffMember>\n      <LocalId>T99064\"</LocalId>\n    </StaffMember>\n    <Organisation>\n      <RefId>8003</RefId>\n    </Organisation>\n    <TeachingGroup>\n      <LocalId>2020_8003_HR9</LocalId>\n    </TeachingGroup>\n    <Role>1401</Role>\n    <StartDate>2020-01-27</StartDate>\n  </StaffTeachingGroupAssignment>\n</StaffTeachingGroupAssignments>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "All objects created; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentErrorList"
                },
                "example": [
                  {
                    "StaffTeachingGroupAssignment": {
                      "StaffTeachingGroupAssignmentLocalId": "2020_8003_HR9_T99064",
                      "Status": "A",
                      "StaffMember": {
                        "LocalId": "T99064"
                      },
                      "Organisation": {
                        "RefId": "8003"
                      },
                      "TeachingGroup": {
                        "LocalId": "2020_8003_HR9"
                      },
                      "Role": "1401",
                      "StartDate": "2020-01-27T00:00:00+1200",
                      "RecordAudit": {
                        "CreatedDateTime": "2020-05-26T00:00:00+1200",
                        "LastUpdatedDateTime": "2020-05-26T00:00:00+1200"
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentErrorList"
                },
                "example": "<Response>\n  <StaffTeachingGroupAssignment>\n    <StaffTeachingGroupAssignmentLocalId>2020_8003_HR9_T99064</StaffTeachingGroupAssignmentLocalId>\n    <StaffMember>\n      <LocalId>T99064\"</LocalId>\n    </StaffMember>\n    <Organisation>\n      <RefId>8003</RefId>\n    </Organisation>\n    <TeachingGroup>\n      <LocalId>2020_8003_HR9</LocalId>\n    </TeachingGroup>\n    <Role>1401</Role>\n    <StartDate>2020-01-27</StartDate>\n  </StaffTeachingGroupAssignment>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "StaffTeachingGroupAssignmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-staffPersonalObjectReference": "StaffMember",
        "x-teachingGroupObjectReference": "TeachingGroup",
        "x-statusField": "Status",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "get": {
        "tags": [
          "StaffTeachingGroupAssignment"
        ],
        "summary": "Retreive one or more StaffTeachingGroupAssignments",
        "description": "<p>Bulk operation to retrieve all available assignments of Staff members to particular roles with a particular TeachingGroup at the given Provider</p>",
        "operationId": "getStaffTeachingGroupAssignments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/statusIA"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-statusField": "Status",
        "x-statusActive": "NZCodeSetsStaffTeachingGroupAssignmentStatus.AEnum",
        "x-statusInActive": "NZCodeSetsStaffTeachingGroupAssignmentStatus.IEnum",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "put": {
        "tags": [
          "StaffTeachingGroupAssignment"
        ],
        "summary": "Update one or more StaffTeachingGroupAssignments",
        "description": "<p>Bulk operation to update one or more assignments of Staff members to particular roles with a particular TeachingGroup at the given Provider</p>",
        "operationId": "updateStaffTeachingGroupAssignments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StaffTeachingGroupAssignment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1staffteachinggroupassignment/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1staffteachinggroupassignment/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All objects updated; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StaffTeachingGroupAssignmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-staffPersonalObjectReference": "StaffMember",
        "x-teachingGroupObjectReference": "TeachingGroup",
        "x-statusField": "Status",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "patch": {
        "tags": [
          "StaffTeachingGroupAssignment"
        ],
        "summary": "Patch one or more StaffTeachingGroupAssignments",
        "description": "<p>Bulk operation to update one or more fields of one or more assignments of Staff members to particular roles with a particular TeachingGroup at the given Provider</p>",
        "operationId": "patchStaffTeachingGroupAssignments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StaffTeachingGroupAssignment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffTeachingGroupAssignmentPATCHList"
              },
              "example": {
                "StaffTeachingGroupAssignments": {
                  "StaffTeachingGroupAssignment": [
                    {
                      "StaffTeachingGroupAssignmentLocalId": "2020_8003_HR9_T99064",
                      "StaffMember": {
                        "LocalId": "T99064"
                      },
                      "Organisation": {
                        "RefId": "8003"
                      },
                      "TeachingGroup": {
                        "LocalId": "2020_8003_HR9"
                      },
                      "Role": "1401",
                      "StartDate": "2020-01-27T00:00:00+1200"
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StaffTeachingGroupAssignmentPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1staffteachinggroupassignment/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All objects patched; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StaffTeachingGroupAssignmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-staffPersonalObjectReference": "StaffMember",
        "x-teachingGroupObjectReference": "TeachingGroup",
        "x-statusField": "Status",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      }
    },
    "/staffteachinggroupassignment/{staffTeachingGroupAssignmentRefId}": {
      "get": {
        "tags": [
          "StaffTeachingGroupAssignment"
        ],
        "summary": "Retrieve a single StaffTeachingGroupAssignment",
        "description": "<p>Retrieve a particular assignment of a Staff member to a particular role with a particular TeachingGroup at the given Provider</p>",
        "operationId": "getStaffTeachingGroupAssignment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "staffTeachingGroupAssignmentRefId",
            "in": "path",
            "description": "<p>The GUID that uniquely identifies a particular staff teaching group assignment.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATE"
                },
                "example": {
                  "StaffTeachingGroupAssignment": {
                    "StaffTeachingGroupAssignmentLocalId": "2020_8003_HR9_T99064",
                    "Status": "A",
                    "StaffMember": {
                      "LocalId": "T99064"
                    },
                    "Organisation": {
                      "RefId": "8003"
                    },
                    "TeachingGroup": {
                      "LocalId": "2020_8003_HR9"
                    },
                    "Role": "1401",
                    "StartDate": "2020-01-27T00:00:00+1200",
                    "RecordAudit": {
                      "CreatedDateTime": "2020-05-26T00:00:00+1200",
                      "LastUpdatedDateTime": "2020-05-26T00:00:00+1200"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATE"
                },
                "example": "<StaffTeachingGroupAssignment>\n  <StaffTeachingGroupAssignmentLocalId>2020_8003_HR9_T99064</StaffTeachingGroupAssignmentLocalId>\n  <StaffMember>\n    <LocalId>T99064\"</LocalId>\n  </StaffMember>\n  <Organisation>\n    <RefId>8003</RefId>\n  </Organisation>\n  <TeachingGroup>\n    <LocalId>2020_8003_HR9</LocalId>\n  </TeachingGroup>\n  <Role>1401</Role>\n  <StartDate>2020-01-27</StartDate>\n</StaffTeachingGroupAssignment>    "
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-statusField": "Status",
        "x-statusActive": "NZCodeSetsStaffTeachingGroupAssignmentStatus.AEnum",
        "x-statusInActive": "NZCodeSetsStaffTeachingGroupAssignmentStatus.IEnum",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "put": {
        "tags": [
          "StaffTeachingGroupAssignment"
        ],
        "summary": "Update a single StaffTeachingGroupAssignment",
        "description": "<p>Update a particular assignment of a Staff member to a particular role with a particular TeachingGroup at the given Provider</p>",
        "operationId": "updateStaffTeachingGroupAssignment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "staffTeachingGroupAssignmentRefId",
            "in": "path",
            "description": "<p>The GUID that uniquely identifies a particular staff teaching group assignment.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StaffTeachingGroupAssignment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATE"
              },
              "example": {
                "$ref": "#/paths/~1staffteachinggroupassignment~1%7BstaffTeachingGroupAssignmentRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATE"
              },
              "example": {
                "$ref": "#/paths/~1staffteachinggroupassignment~1%7BstaffTeachingGroupAssignmentRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment~1%7BstaffTeachingGroupAssignmentRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment~1%7BstaffTeachingGroupAssignmentRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-staffPersonalObjectReference": "StaffMember",
        "x-teachingGroupObjectReference": "TeachingGroup",
        "x-statusField": "Status",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "patch": {
        "tags": [
          "StaffTeachingGroupAssignment"
        ],
        "summary": "Patch a single StaffTeachingGroupAssignment",
        "description": "<p>Update one or more fields of a particular assignment of a Staff member to a particular role with a particular TeachingGroup at the given Provider</p>",
        "operationId": "patchStaffTeachingGroupAssignment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "staffTeachingGroupAssignmentRefId",
            "in": "path",
            "description": "<p>The GUID that uniquely identifies a particular staff teaching group assignment.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StaffTeachingGroupAssignment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffTeachingGroupAssignmentPATCH"
              },
              "example": {
                "StaffTeachingGroupAssignment": {
                  "StaffTeachingGroupAssignmentLocalId": "2020_8003_HR9_T99064",
                  "StaffMember": {
                    "LocalId": "T99064"
                  },
                  "Organisation": {
                    "RefId": "8003"
                  },
                  "TeachingGroup": {
                    "LocalId": "2020_8003_HR9"
                  },
                  "Role": "1401",
                  "StartDate": "2020-01-27T00:00:00+1200"
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StaffTeachingGroupAssignmentPATCH"
              },
              "example": {
                "$ref": "#/paths/~1staffteachinggroupassignment~1%7BstaffTeachingGroupAssignmentRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment~1%7BstaffTeachingGroupAssignmentRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment~1%7BstaffTeachingGroupAssignmentRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-staffPersonalObjectReference": "StaffMember",
        "x-teachingGroupObjectReference": "TeachingGroup",
        "x-statusField": "Status",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      }
    },
    "/staffpersonal/{staffPersonalRefId}/staffteachinggroupassignment": {
      "get": {
        "tags": [
          "StaffTeachingGroupAssignment"
        ],
        "summary": "Retrieve StaffTeachingGroupAssignments by Staff member",
        "description": "<p>Retrieve all available assignments of a particular Staff member to any role with any TeachingGroup at the given Provider</p>",
        "operationId": "getStaffTeachingGroupAssignmentByStaff",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/staffPersonalRefId"
          },
          {
            "$ref": "#/components/parameters/statusIA"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-byEntity": "ByStaffPersonal",
        "x-isBulk": true,
        "x-isSingle": false,
        "x-statusField": "Status",
        "x-statusActive": "NZCodeSetsStaffTeachingGroupAssignmentStatus.AEnum",
        "x-statusInActive": "NZCodeSetsStaffTeachingGroupAssignmentStatus.IEnum",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      }
    },
    "/teachinggroup/{teachingGroupRefId}/staffteachinggroupassignment": {
      "get": {
        "tags": [
          "StaffTeachingGroupAssignment"
        ],
        "summary": "Retrieve StaffTeachingGroupAssignments by TeachingGroup",
        "description": "<p>Retrieve all available assignments of any staff members to  a particulr TeachingGroup at the given Provider</p>",
        "operationId": "getStaffTeachingGroupAssignmentByTeachingGroup",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/teachingGroupRefId"
          },
          {
            "$ref": "#/components/parameters/statusIA"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StaffTeachingGroupAssignmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1staffteachinggroupassignment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-byEntity": "ByTeachingGroup",
        "x-isBulk": true,
        "x-isSingle": false,
        "x-statusField": "Status",
        "x-statusActive": "NZCodeSetsStaffTeachingGroupAssignmentStatus.AEnum",
        "x-statusInActive": "NZCodeSetsStaffTeachingGroupAssignmentStatus.IEnum",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      }
    },
    "/teachinggroup": {
      "post": {
        "tags": [
          "TeachingGroup"
        ],
        "summary": "Create one or more TeachingGroups",
        "description": "<p>Bulk operation to create one or more TeachingGroups which can have multiple staff  assigned in a variety of roles (via <a href=\"#tag/StaffTeachingGroupAssignment\">StaffTeachingGroupAssignment</a>),  may be assigned students from multiple year levels (via <a href=\"#tag/StudentTeachingGroupEnrolment\">StudentTeachingGroupEnrolment</a>), and may be taught multiple <a href=\"#tag/ProviderCourse\">ProviderCourses</a>.</p>",
        "operationId": "createTeachingGroups",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on TeachingGroup",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeachingGroupCREATEList"
              },
              "example": {
                "TeachingGroups": {
                  "TeachingGroup": [
                    {
                      "TeachingGroupLocalId": "2020_8003_HR9",
                      "ShortName": "HR_9",
                      "LongName": "Homeroom Year 9",
                      "GroupType": "RC",
                      "Organisation": {
                        "RefId": "8003"
                      },
                      "ScheduleTerm": {
                        "LocalId": "2020_8003_Y"
                      },
                      "YearLevelList": {
                        "YearLevel": [
                          9
                        ]
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TeachingGroupCREATEList"
              },
              "example": "<TeachingGroups>\n  <TeachingGroup>\n    <TeachingGroupLocalId>2020_8003_HR9</TeachingGroupLocalId>\n    <ShortName>HR_9<ShortName>\n    <LongName>Homeroom Year 9</LongName>\n    <GroupType>RC</GroupType>\n    <Organisation>\n      <RefId>8003</RefId>\n    </Organisation>\n    <ScheduleTerm>\n      <LocalId>2020_8003_Y</LocalId>\n    </ScheduleTerm>\n    <YearLevelList>\n      <YearLevel>9</YearLevel>\n    </YearLevelList>\n  </TeachingGroup>\n  <TeachingGroup>\n    <TeachingGroupLocalId>2020_8003_HR10</TeachingGroupLocalId>\n    <ShortName>HR_10</ShortName>\n    <LongName>Homeroom Year 10</LongName>\n    <GroupType>RC</GroupType>\n    <Organisation>\n      <RefId>8003</RefId>\n    </Organisation>\n    <ScheduleTerm>\n      <LocalId>2020_8003_Y</LocalId>\n    </ScheduleTerm>\n    <YearLevelList>\n      <YearLevel>10</YearLevel>\n    </YearLevelList>\n  </TeachingGroup>\n</TeachingGroups>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupErrorList"
                },
                "example": [
                  {
                    "TeachingGroup": {
                      "TeachingGroupLocalId": "2020_8003_HR9",
                      "ShortName": "HR_9",
                      "LongName": "Homeroom Year 9",
                      "GroupType": "RC",
                      "Organisation": {
                        "RefId": "8003"
                      },
                      "ScheduleTerm": {
                        "LocalId": "2020_8003_Y"
                      },
                      "YearLevelList": {
                        "YearLevel": [
                          9
                        ]
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupErrorList"
                },
                "example": "<Response>\n  <TeachingGroup>\n    <TeachingGroupLocalId>2020_8003_HR9</TeachingGroupLocalId>\n    <ShortName>HR_9<ShortName>\n    <LongName>Homeroom Year 9</LongName>\n    <GroupType>RC</GroupType>\n    <Organisation>\n      <RefId>8003</RefId>\n    </Organisation>\n    <ScheduleTerm>\n      <LocalId>2020_8003_Y</LocalId>\n    </ScheduleTerm>\n    <YearLevelList>\n      <YearLevel>9</YearLevel>\n    </YearLevelList>\n  </TeachingGroup> \n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "TeachingGroupErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "get": {
        "tags": [
          "TeachingGroup"
        ],
        "summary": "Create one or more TeachingGroups",
        "description": "<p>Bulk operation to retrieve all available TeachingGroups from the given Provider.  TeachingGroups can have multiple staff  assigned in a variety of roles (via <a href=\"#tag/StaffTeachingGroupAssignment\">StaffTeachingGroupAssignment</a>),  may be assigned students from multiple year levels (via <a href=\"#tag/StudentTeachingGroupEnrolment\">StudentTeachingGroupEnrolment</a>), and may be taught multiple <a href=\"#tag/ProviderCourse\">ProviderCourses</a>.</p>",
        "operationId": "getTeachingGroups",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "TeachingGroup"
        ],
        "summary": "Create one or more TeachingGroups",
        "description": "<p>Bulk operation to update one or more TeachingGroups, which can have multiple staff  assigned in a variety of roles (via <a href=\"#tag/StaffTeachingGroupAssignment\">StaffTeachingGroupAssignment</a>),  may be assigned students from multiple year levels (via <a href=\"#tag/StudentTeachingGroupEnrolment\">StudentTeachingGroupEnrolment</a>), and may be taught multiple <a href=\"#tag/ProviderCourse\">ProviderCourses</a>.</p>",
        "operationId": "updateTeachingGroups",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on TeachingGroup",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeachingGroupCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TeachingGroupCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updatae successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "TeachingGroupErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "TeachingGroup"
        ],
        "summary": "Patch one or more TeachingGroups",
        "description": "<p>Bulk operation to update one or more fields of one or more TeachingGroups, which can have multiple staff  assigned in a variety of roles (via <a href=\"#tag/StaffTeachingGroupAssignment\">StaffTeachingGroupAssignment</a>),  may be assigned students from multiple year levels (via <a href=\"#tag/StudentTeachingGroupEnrolment\">StudentTeachingGroupEnrolment</a>), and may be taught multiple <a href=\"#tag/ProviderCourse\">ProviderCourses</a>.</p>",
        "operationId": "patchTeachingGroups",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on TeachingGroup",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeachingGroupPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TeachingGroupPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "TeachingGroupErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/teachinggroup/{teachingGroupRefId}": {
      "get": {
        "tags": [
          "TeachingGroup"
        ],
        "summary": "Retrieve a single TeachingGroup",
        "description": "<p>Retrieve a particular TeachingGroup, which can have multiple staff assigned in a variety of roles (via <a href=\"#tag/StaffTeachingGroupAssignment\">StaffTeachingGroupAssignment</a>),  may be assigned students from multiple year levels (via <a href=\"#tag/StudentTeachingGroupEnrolment\">StudentTeachingGroupEnrolment</a>), and may be taught multiple <a href=\"#tag/ProviderCourse\">ProviderCourses</a>.</p>",
        "operationId": "getTeachingGroup",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "teachingGroupRefId",
            "in": "path",
            "required": true,
            "description": "<p>The GUID of the TeachingGroup</p>",
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "example": "a95c6a41-caa8-46a5-a78e-1cde7cf311bc",
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATE"
                },
                "example": {
                  "TeachingGroup": {
                    "TeachingGroupLocalId": "2020_8003_HR9",
                    "ShortName": "HR_9",
                    "LongName": "Homeroom Year 9",
                    "GroupType": "RC",
                    "Organisation": {
                      "RefId": "8003"
                    },
                    "ScheduleTerm": {
                      "LocalId": "2020_8003_Y"
                    },
                    "YearLevelList": {
                      "YearLevel": [
                        9
                      ]
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATE"
                },
                "example": "<TeachingGroup>\n  <TeachingGroupLocalId>2020_8003_HR9</TeachingGroupLocalId>\n  <ShortName>HR_9<ShortName>\n  <LongName>Homeroom Year 9</LongName>\n  <GroupType>RC</GroupType>\n  <Organisation>\n    <RefId>8003</RefId>\n  </Organisation>\n  <ScheduleTerm>\n    <LocalId>2020_8003_Y</LocalId>\n  </ScheduleTerm>\n  <YearLevelList>\n    <YearLevel>9</YearLevel>\n  </YearLevelList>\n</TeachingGroup>  "
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "put": {
        "tags": [
          "TeachingGroup"
        ],
        "summary": "Update a single TeachingGroup",
        "description": "<p>Update a particular TeachingGroup, which can have multiple staff assigned in a variety of roles (via <a href=\"#tag/StaffTeachingGroupAssignment\">StaffTeachingGroupAssignment</a>),  may be assigned students from multiple year levels (via <a href=\"#tag/StudentTeachingGroupEnrolment\">StudentTeachingGroupEnrolment</a>), and may be taught multiple <a href=\"#tag/ProviderCourse\">ProviderCourses</a>.</p>",
        "operationId": "updateTeachingGroup",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "teachingGroupRefId",
            "in": "path",
            "required": true,
            "description": "<p>The GUID of the TeachingGroup</p>",
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "example": "a95c6a41-caa8-46a5-a78e-1cde7cf311bc",
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on TeachingGroup",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeachingGroupCREATE"
              },
              "example": {
                "$ref": "#/paths/~1teachinggroup~1%7BteachingGroupRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TeachingGroupCREATE"
              },
              "example": {
                "$ref": "#/paths/~1teachinggroup~1%7BteachingGroupRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup~1%7BteachingGroupRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup~1%7BteachingGroupRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "TeachingGroup"
        ],
        "summary": "Patch a single TeachingGroup",
        "description": "<p>Update one or more fields of a particular TeachingGroup, which can have multiple staff assigned in a variety of roles (via <a href=\"#tag/StaffTeachingGroupAssignment\">StaffTeachingGroupAssignment</a>),  may be assigned students from multiple year levels (via <a href=\"#tag/StudentTeachingGroupEnrolment\">StudentTeachingGroupEnrolment</a>), and may be taught multiple <a href=\"#tag/ProviderCourse\">ProviderCourses</a>.</p>",
        "operationId": "patchTeachingGroup",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "teachingGroupRefId",
            "in": "path",
            "required": true,
            "description": "<p>The GUID of the TeachingGroup</p>",
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "example": "a95c6a41-caa8-46a5-a78e-1cde7cf311bc",
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on TeachingGroup",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeachingGroupPATCH"
              },
              "example": {
                "$ref": "#/paths/~1teachinggroup~1%7BteachingGroupRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TeachingGroupPATCH"
              },
              "example": {
                "$ref": "#/paths/~1teachinggroup~1%7BteachingGroupRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup~1%7BteachingGroupRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup~1%7BteachingGroupRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/staffpersonal/{staffPersonalRefId}/teachinggroup": {
      "get": {
        "tags": [
          "TeachingGroup"
        ],
        "summary": "Retrieve TeachingGroups by Staff member",
        "description": "<p>Retrieve all available TeachingGroup where the given staff member has been assigned a role (via <a href=\"#tag/StaffTeachingGroupAssignment\">StaffTeachingGroupAssignment</a>)</p>",
        "operationId": "getTeachingGroupsByStaff",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/staffPersonalRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-byEntity": "ByStaffPersonal",
        "x-isBulk": true,
        "x-isSingle": false
      }
    },
    "/studentpersonal/{studentPersonalRefId}/teachinggroup": {
      "get": {
        "tags": [
          "TeachingGroup"
        ],
        "summary": "Retrieve TeachingGroups by Student",
        "description": "<p>Retrieve all available TeachingGroup where the given Student has been enrolled  (via <a href=\"#tag/StudentTeachingGroupEnrolment\">StudentTeachingGroupEnrolment</a>)</p>",
        "operationId": "getTeachingGroupsByStudent",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/studentPersonalRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeachingGroupCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1teachinggroup/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-byEntity": "ByStudentPersonal",
        "x-isBulk": true,
        "x-isSingle": false
      }
    },
    "/studentpersonal": {
      "post": {
        "tags": [
          "StudentPersonal"
        ],
        "summary": "Create one or more StudentPersonals",
        "description": "<p>Bulk operation to create one or more StudentPersonal records of a student's personal contact and demographic information within the scope of the given Provider.</p>",
        "operationId": "createStudentPersonals",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentPersonal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentPersonalPOSTList"
              },
              "example": {
                "StudentPersonals": {
                  "StudentPersonal": [
                    {
                      "StudentPersonalLocalId": "ST1000001",
                      "NationalStudentNumber": "9001000001",
                      "FirstNZSchoolingDate": "2015-03-07T00:00:00+1200",
                      "EarlyChildhoodEducation": {
                        "Type": "EPG"
                      },
                      "PersonInfo": {
                        "Name": {
                          "FamilyName": "Saunders",
                          "GivenName": "Thomas",
                          "FullName": "Thomas Saunders"
                        },
                        "Demographics": {
                          "BirthDate": "2010-03-07T00:00:00+1200",
                          "Gender": "1",
                          "LanguageList": {
                            "Language": [
                              {
                                "Code": "NZS01112",
                                "Usage": "SH"
                              }
                            ]
                          },
                          "EthnicityList": {
                            "Ethnicity": [
                              {
                                "Code": "321"
                              }
                            ]
                          }
                        },
                        "Address": {
                          "Physical": {
                            "Type": "TH",
                            "Line1": "27 Arataua Street",
                            "Suburb": "Rotorua",
                            "City": "Rotorua",
                            "Country": "New Zealand",
                            "PostalCode": "3010"
                          }
                        },
                        "Email": {
                          "Personal": {
                            "SourceOrganisation": {
                              "RefId": "8001"
                            },
                            "Address": "tsaunders@mailinator.com"
                          }
                        },
                        "Phone": {
                          "Home": {
                            "Number": "+64 7-943 8050"
                          }
                        }
                      },
                      "StudentProviderEnrolment": {
                        "StudentProviderEnrolmentLocalId": "2020_8005_ST1000001",
                        "EntryDate": "2020-01-29T00:00:00+1200",
                        "SchoolEnrolment": {
                          "YearLevel": 6,
                          "FundingYearLevel": 7
                        }
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentPersonalPOSTList"
              },
              "example": "<StudentPersonals>\n  <StudentPersonal>\n    <StudentPersonalLocalId>ST1000001\n    <NationalStudentNumber>9001000001</NationalStudentNumber>\n    <FirstNZSchoolingDate>2015-03-07</FirstNZSchoolingDate>\n    <EarlyChildhoodEducation>\n      <Type>EPG</Type>\n    </EarlyChildhoodEducation>\n    <PersonInfo>\n      <Name>\n        <FamilyName>Saunders</FamilyName>\n        <GivenName>Thomas</GivenName>\n        <FullName>Thomas Saunders</FullName>\n      </Name>\n      <Demographics>\n        <BirthDate>2010-03-07</BirthDate>\n        <Gender>1</Gender>\n        <LanguageList>\n          <Language>\n            <Code>NZS01112</Code>\n            <Usage>SH</Usage>\n          </Language>\n        </LanguageList>\n        <EthnicityList>\n          <Ethnicity>\n            <Code>321</Code>\n          </Ethnicity>\n        </EthnicityList>\n      </Demographics>\n      <Address>\n        <Physical>\n          <Type>TH</Type>\n          <Line1>27 Arataua Street</Line1>\n          <Suburb>Rotorua</Suburb>\n          <City>Rotorua</City>\n          <Country>New Zealand</Country>\n          <PostalCode>3010<PostalCode>\n        </Physical>\n      </Address>\n      <Email>\n        <Personal>\n          <SourceOrganisation>\n            <RefId>8001</RefId>\n          </SourceOrganisation>\n          <Address>tsaunders@mailinator.com<Address>\n        </Personal>\n      </Email>\n      <Phone>\n        <Personal>\n          <Number>+64 7-943 8050</Number>\n        </Personal>\n      </Phone>\n    </PersonInfo>\n    <StudentProviderEnrolment>\n      <EntryDate>2020-01-29</EntryDate>\n      <YearLevel>6</YearLevel>\n      <FundingYearLevel>7</FundingYearLevel>\n    </StudentProviderEnrolment>\n  </StudentPersonal>\n</StudentPersonals>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalPOSTList"
                },
                "example": {
                  "$ref": "#/paths/~1studentpersonal/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalPOSTList"
                },
                "example": {
                  "$ref": "#/paths/~1studentpersonal/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalPOSTErrorList"
                },
                "example": [
                  {
                    "StudentPersonal": [
                      {
                        "StudentPersonalLocalId": "ST1000001",
                        "NationalStudentNumber": "9001000001",
                        "FirstNZSchoolingDate": "2015-03-07T00:00:00+1200",
                        "EarlyChildhoodEducation": {
                          "Type": "EPG"
                        },
                        "PersonInfo": {
                          "Name": {
                            "FamilyName": "Saunders",
                            "GivenName": "Thomas",
                            "FullName": "Thomas Saunders"
                          },
                          "Demographics": {
                            "BirthDate": "2010-03-07T00:00:00+1200",
                            "Gender": "1",
                            "LanguageList": {
                              "Language": [
                                {
                                  "Code": "NZS01112",
                                  "Usage": "SH"
                                }
                              ]
                            },
                            "EthnicityList": {
                              "Ethnicity": [
                                {
                                  "Code": "321"
                                }
                              ]
                            }
                          },
                          "Address": {
                            "Physical": {
                              "Type": "TH",
                              "Line1": "27 Arataua Street",
                              "Suburb": "Rotorua",
                              "City": "Rotorua",
                              "Country": "New Zealand",
                              "PostalCode": "3010"
                            }
                          },
                          "Email": {
                            "Personal": {
                              "SourceOrganisation": {
                                "RefId": "8001"
                              },
                              "Address": "tsaunders@mailinator.com"
                            }
                          },
                          "Phone": {
                            "Home": {
                              "Number": "+64 7-943 8050"
                            }
                          }
                        },
                        "StudentProviderEnrolment": {
                          "StudentProviderEnrolmentLocalId": "2020_8005_ST1000001",
                          "EntryDate": "2020-01-29T00:00:00+1200",
                          "SchoolEnrolment": {
                            "YearLevel": 6,
                            "FundingYearLevel": 7
                          }
                        }
                      }
                    ]
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalPOSTErrorList"
                },
                "example": "<Response>\n  <StudentPersonal>\n    <StudentPersonalLocalId>ST1000001</StudentPersonalLocalId>\n    <NationalStudentNumber>9001000001</NationalStudentNumber>\n    <FirstNZSchoolingDate>2015-03-07</FirstNZSchoolingDate>\n    <EarlyChildhoodEducation>\n      <Type>EPG</Type>\n    </EarlyChildhoodEducation>\n    <PersonInfo>\n      <Name>\n        <FamilyName>Saunders</FamilyName>\n        <GivenName>Thomas</GivenName>\n        <FullName>Thomas Saunders</FullName>\n      </Name>\n      <Demographics>\n        <BirthDate>2010-03-07</BirthDate>\n        <Gender>1</Gender>\n        <LanguageList>\n          <Language>\n            <Code>NZS01112</Code>\n            <Usage>SH</Usage>\n          </Language>\n        </LanguageList>\n        <EthnicityList>\n          <Ethnicity>\n            <Code>321</Code>\n          </Ethnicity>\n        </EthnicityList>\n      </Demographics>\n      <Address>\n        <Physical>\n          <Type>TH</Type>\n          <Line1>27 Arataua Street</Line1>\n          <Suburb>Rotorua</Suburb>\n          <City>Rotorua</City>\n          <Country>New Zealand</Country>\n          <PostalCode>3010<PostalCode>\n        </Physical>\n      </Address>\n      <Email>\n        <Personal>\n          <SourceOrganisation>\n            <RefId>8001</RefId>\n          </SourceOrganisation>\n          <Address>tsaunders@mailinator.com<Address>\n        </Personal>\n      </Email>\n      <Phone>\n        <Personal>\n          <Number>+64 7-943 8050</Number>\n        </Personal>\n      </Phone>\n    </PersonInfo>\n  </StudentPersonal>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "StudentPersonalErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "PersonInfo.Email.Work.SourceOrganisation.RefId",
          "PersonInfo.Email.Personal.SourceOrganisation.RefId"
        ],
        "x-augmentedPOST": true,
        "x-augmentedPOSTAddition": "StudentProviderEnrolment",
        "x-augmentedPOSTParentRef": "Student",
        "x-augmentedPOSTParentRefType": "StudentObjectReference",
        "x-augmentedPOSTOrgRef": "Provider"
      },
      "get": {
        "tags": [
          "StudentPersonal"
        ],
        "summary": "Retrieve one or more StudentPersonals",
        "description": "<p>Bulk operation to retrieve all available StudentPersonal records of a student's personal contact and demographic information within the scope of the given Provider.</p>",
        "operationId": "getStudentPersonals",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalCREATEList"
                },
                "example": {
                  "StudentPersonals": {
                    "StudentPersonal": [
                      {
                        "StudentPersonalLocalId": "ST1000001",
                        "NationalStudentNumber": "9001000001",
                        "FirstNZSchoolingDate": "2015-03-07T00:00:00+1200",
                        "EarlyChildhoodEducation": {
                          "Type": "EPG"
                        },
                        "PersonInfo": {
                          "Name": {
                            "FamilyName": "Saunders",
                            "GivenName": "Thomas",
                            "FullName": "Thomas Saunders"
                          },
                          "Demographics": {
                            "BirthDate": "2010-03-07T00:00:00+1200",
                            "Gender": "1",
                            "LanguageList": {
                              "Language": [
                                {
                                  "Code": "NZS01112",
                                  "Usage": "SH"
                                }
                              ]
                            },
                            "EthnicityList": {
                              "Ethnicity": [
                                {
                                  "Code": "321"
                                }
                              ]
                            }
                          },
                          "Address": {
                            "Physical": {
                              "Type": "TH",
                              "Line1": "27 Arataua Street",
                              "Suburb": "Rotorua",
                              "City": "Rotorua",
                              "Country": "New Zealand",
                              "PostalCode": "3010"
                            }
                          },
                          "Email": {
                            "Personal": {
                              "SourceOrganisation": {
                                "RefId": "8001"
                              },
                              "Address": "tsaunders@mailinator.com"
                            }
                          },
                          "Phone": {
                            "Home": {
                              "Number": "+64 7-943 8050"
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalCREATEList"
                },
                "example": "<StudentPersonals>\n  <StudentPersonal>\n    <StudentPersonalLocalId>ST1000001\n    <NationalStudentNumber>9001000001</NationalStudentNumber>\n    <FirstNZSchoolingDate>2015-03-07</FirstNZSchoolingDate>\n    <EarlyChildhoodEducation>\n      <Type>EPG</Type>\n    </EarlyChildhoodEducation>\n    <PersonInfo>\n      <Name>\n        <FamilyName>Saunders</FamilyName>\n        <GivenName>Thomas</GivenName>\n        <FullName>Thomas Saunders</FullName>\n      </Name>\n      <Demographics>\n        <BirthDate>2010-03-07</BirthDate>\n        <Gender>1</Gender>\n        <LanguageList>\n          <Language>\n            <Code>NZS01112</Code>\n            <Usage>SH</Usage>\n          </Language>\n        </LanguageList>\n        <EthnicityList>\n          <Ethnicity>\n            <Code>321</Code>\n          </Ethnicity>\n        </EthnicityList>\n      </Demographics>\n      <Address>\n        <Physical>\n          <Type>TH</Type>\n          <Line1>27 Arataua Street</Line1>\n          <Suburb>Rotorua</Suburb>\n          <City>Rotorua</City>\n          <Country>New Zealand</Country>\n          <PostalCode>3010<PostalCode>\n        </Physical>\n      </Address>\n      <Email>\n        <Personal>\n          <SourceOrganisation>\n            <RefId>8001</RefId>\n          </SourceOrganisation>\n          <Address>tsaunders@mailinator.com<Address>\n        </Personal>\n      </Email>\n      <Phone>\n        <Personal>\n          <Number>+64 7-943 8050</Number>\n        </Personal>\n      </Phone>\n    </PersonInfo>\n  </StudentPersonal>\n</StudentPersonals>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "StudentPersonal"
        ],
        "summary": "Update one or more StudentPersonals",
        "description": "<p>Bulk operation to update one or more StudentPersonal records of a student's personal contact and demographic information within the scope of the given Provider.</p>",
        "operationId": "updateStudentPersonals",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentPersonal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentPersonalCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentpersonal/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentPersonalCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentpersonal/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentpersonal/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentpersonal/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalErrorList"
                },
                "example": [
                  {
                    "StudentPersonal": {
                      "StudentPersonalLocalId": "ST1000001",
                      "NationalStudentNumber": "9001000001",
                      "FirstNZSchoolingDate": "2015-03-07T00:00:00+1200",
                      "EarlyChildhoodEducation": {
                        "Type": "EPG"
                      },
                      "PersonInfo": {
                        "Name": {
                          "FamilyName": "Saunders",
                          "GivenName": "Thomas",
                          "FullName": "Thomas Saunders"
                        },
                        "Demographics": {
                          "BirthDate": "2010-03-07T00:00:00+1200",
                          "Gender": "1",
                          "LanguageList": {
                            "Language": [
                              {
                                "Code": "NZS01112",
                                "Usage": "SH"
                              }
                            ]
                          },
                          "EthnicityList": {
                            "Ethnicity": [
                              {
                                "Code": "321"
                              }
                            ]
                          }
                        },
                        "Address": {
                          "Physical": {
                            "Type": "TH",
                            "Line1": "27 Arataua Street",
                            "Suburb": "Rotorua",
                            "City": "Rotorua",
                            "Country": "New Zealand",
                            "PostalCode": "3010"
                          }
                        },
                        "Email": {
                          "Personal": {
                            "SourceOrganisation": {
                              "RefId": "8001"
                            },
                            "Address": "tsaunders@mailinator.com"
                          }
                        },
                        "Phone": {
                          "Home": {
                            "Number": "+64 7-943 8050"
                          }
                        }
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentpersonal/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentPersonalErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "PersonInfo.Email.Work.SourceOrganisation.RefId",
          "PersonInfo.Email.Personal.SourceOrganisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "StudentPersonal"
        ],
        "summary": "Patch one or more StudentPersonals",
        "description": "Bulk operation to update one or more fields of one or more StudentPersonal records of a student's personal contact and demographic information within the scope of the given Provider.",
        "operationId": "patchStudentPersonals",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentPersonal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentPersonalPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentpersonal/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentPersonalPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentpersonal/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentpersonal/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentpersonal/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentpersonal/put/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentpersonal/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentPersonalErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "PersonInfo.Email.Work.SourceOrganisation.RefId",
          "PersonInfo.Email.Personal.SourceOrganisation.RefId"
        ]
      }
    },
    "/studentpersonal/{studentPersonalRefId}": {
      "get": {
        "tags": [
          "StudentPersonal"
        ],
        "summary": "Retrieve a single StudentPersonal",
        "description": "<p>Retrieve a single StudentPersonal record of a particular student's personal contact and demographic information within the scope of the given Provider.</p>",
        "operationId": "getStudentPersonal",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentPersonalRefId",
            "in": "path",
            "required": true,
            "description": "System RefId of the student.",
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "example": "979fbe68-4cfd-41c1-a98d-40e5601c7d98",
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalCREATE"
                },
                "example": {
                  "StudentPersonal": {
                    "StudentPersonalLocalId": "ST1000001",
                    "NationalStudentNumber": "9001000001",
                    "FirstNZSchoolingDate": "2015-03-07T00:00:00+1200",
                    "EarlyChildhoodEducation": {
                      "Type": "EPG"
                    },
                    "PersonInfo": {
                      "Name": {
                        "FamilyName": "Saunders",
                        "GivenName": "Thomas",
                        "FullName": "Thomas Saunders"
                      },
                      "Demographics": {
                        "BirthDate": "2010-03-07T00:00:00+1200",
                        "Gender": "1",
                        "LanguageList": {
                          "Language": [
                            {
                              "Code": "NZS01112",
                              "Usage": "SH"
                            }
                          ]
                        },
                        "EthnicityList": {
                          "Ethnicity": [
                            {
                              "Code": "321"
                            }
                          ]
                        }
                      },
                      "Address": {
                        "Physical": {
                          "Type": "TH",
                          "Line1": "27 Arataua Street",
                          "Suburb": "Rotorua",
                          "City": "Rotorua",
                          "Country": "New Zealand",
                          "PostalCode": "3010"
                        }
                      },
                      "Email": {
                        "Personal": {
                          "SourceOrganisation": {
                            "RefId": "8001"
                          },
                          "Address": "tsaunders@mailinator.com"
                        }
                      },
                      "Phone": {
                        "Home": {
                          "Number": "+64 7-943 8050"
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalCREATE"
                },
                "example": "<StudentPersonal>\n  <StudentPersonalLocalId>ST1000001\n  <NationalStudentNumber>9001000001</NationalStudentNumber>\n  <FirstNZSchoolingDate>2015-03-07</FirstNZSchoolingDate>\n  <EarlyChildhoodEducation>\n    <Type>EPG</Type>\n  </EarlyChildhoodEducation>\n  <PersonInfo>\n    <Name>\n      <FamilyName>Saunders</FamilyName>\n      <GivenName>Thomas</GivenName>\n      <FullName>Thomas Saunders</FullName>\n    </Name>\n    <Demographics>\n      <BirthDate>2010-03-07</BirthDate>\n      <Gender>1</Gender>\n      <LanguageList>\n        <Language>\n          <Code>NZS01112</Code>\n          <Usage>SH</Usage>\n        </Language>\n      </LanguageList>\n      <EthnicityList>\n        <Ethnicity>\n          <Code>321</Code>\n        </Ethnicity>\n      </EthnicityList>\n    </Demographics>\n    <Address>\n      <Physical>\n        <Line1>27 Arataua Street</Line1>\n        <Suburb>Rotorua</Suburb>\n        <City>Rotorua</City>\n        <Country>New Zealand</Country>\n        <PostalCode>3010<PostalCode>\n      </Physical>\n    </Address>\n    <Email>\n      <Personal>\n        <SourceOrganisation>\n          <RefId>8001</RefId>\n        </SourceOrganisation>\n        <Address>tsaunders@mailinator.com<Address>\n      </Personal>\n    </Email>\n    <Phone>\n      <Personal>\n        <Number>+64 7-943 8050</Number>\n      </Personal>\n    </Phone>\n  </PersonInfo>\n</StudentPersonal>  "
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "StudentPersonal"
        ],
        "summary": "Update a single StudentPersonal",
        "description": "<p>Update a single StudentPersonal record of a particular student's personal contact and demographic information within the scope of the given Provider.</p>",
        "operationId": "updateStudentPersonal",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentPersonalRefId",
            "in": "path",
            "required": true,
            "description": "System RefId of the student.",
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "example": "979fbe68-4cfd-41c1-a98d-40e5601c7d98",
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentPersonal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentPersonalCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentpersonal~1%7BstudentPersonalRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentPersonalCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentpersonal~1%7BstudentPersonalRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentpersonal~1%7BstudentPersonalRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentpersonal~1%7BstudentPersonalRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "PersonInfo.Email.Work.SourceOrganisation.RefId",
          "PersonInfo.Email.Personal.SourceOrganisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "StudentPersonal"
        ],
        "summary": "Patch a single StudentPersonal",
        "description": "<p>Update one or more fields of a single StudentPersonal record of a particular student's personal contact and demographic information within the scope of the given Provider.</p>",
        "operationId": "patchStudentPersonal",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentPersonalRefId",
            "in": "path",
            "required": true,
            "description": "System RefId of the student.",
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "example": "979fbe68-4cfd-41c1-a98d-40e5601c7d98",
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentPersonal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentPersonalPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentpersonal~1%7BstudentPersonalRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentPersonalPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentpersonal~1%7BstudentPersonalRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentpersonal~1%7BstudentPersonalRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentPersonalCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentpersonal~1%7BstudentPersonalRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "PersonInfo.Email.Work.SourceOrganisation.RefId",
          "PersonInfo.Email.Personal.SourceOrganisation.RefId"
        ]
      }
    },
    "/studentcontactpersonal": {
      "post": {
        "tags": [
          "StudentContactPersonal"
        ],
        "summary": "Create one or more StudentContactPersonals",
        "description": "<p>Bulk operation to create one or more StudentContactPersonals records of the personal contact and demographic information relating to one or more student whānau members, for students enrolled at the given Provider.</p>",
        "operationId": "createStudentContactPersonal",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentContactPersonal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactPersonalCREATEList"
              },
              "example": {
                "StudentContactPersonals": {
                  "StudentContactPersonal": [
                    {
                      "StudentContactPersonalRefId": "7c834ea9-eda1-2090-347f-83297e1c290f",
                      "StudentContactPersonalLocalId": "P1234567",
                      "PersonInfo": {
                        "Name": {
                          "FamilyName": "Hagrid",
                          "GivenName": "Fridwulfa",
                          "FullName": "Fridwulfa Hagrid",
                          "Type": "LGL"
                        },
                        "Address": {
                          "Physical": {
                            "Type": "TH",
                            "Line1": "The Enchanted Wood",
                            "Line2": "533 Hogwart's Way",
                            "City": "Hogsmead",
                            "PostalCode": "7733"
                          }
                        },
                        "Email": {
                          "Personal": {
                            "Address": "ridwulfa@gmail.com"
                          }
                        },
                        "Phone": {
                          "Mobile": {
                            "Number": "(021) 300 999"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactPersonalCREATEList"
              },
              "example": "<StudentContactPersonals>\n  <StudentContactPersonal>\n    <StudentContactPersonalRefId>7c834ea9-eda1-2090-347f-83297e1c290f</StudentContactPersonalRefId>\n    <StudentContactPersonalLocalId>P1234567</StudentContactPersonalLocalId>\n    <PersonInfo>\n      <Name>\n        <FamilyName>Hagrid</FamilyName>\n        <GivenName>Fridwulfa</GivenName>\n        <FullName>Fridwulfa Hagrid</FullName>\n        <Type>LGL</Type>\n      </Name>\n      <Address>\n        <Physical>\n          <Type>TH</Type>\n          <Line1>The Enchanted Wood</Line1>\n          <Line2>533 Hogwart's Way</Line2>\n          <City>Hogsmead</City>\n          <PostalCode>7733</PostalCode>\n        </Physical>\n      </Address>\n      <Email>\n        <Personal>\n          <Address>ridwulfa@gmail.com</Address>\n        </Personal>\n      </Email>\n      <Phone>\n        <Mobile>\n          <Number>(021) 300 999</Number>\n        </Mobile>\n      </Phone>\n    </PersonInfo>\n  </StudentContactPersonal>\n</StudentContactPersonals>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalErrorList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalErrorList"
                },
                "example": "<Response>\n  <StudentContactPersonal>\n    <StudentContactPersonalRefId>7c834ea9-eda1-2090-347f-83297e1c290f</StudentContactPersonalRefId>\n    <StudentContactPersonalLocalId>P1234567</StudentContactPersonalLocalId>\n    <PersonInfo>\n      <Name>\n        <FamilyName>Hagrid</FamilyName>\n        <GivenName>Fridwulfa</GivenName>\n        <FullName>Fridwulfa Hagrid</FullName>\n        <Type>LGL</Type>\n      </Name>\n      <Address>\n        <Physical>\n          <Type>TH</Type>\n          <Line1>The Enchanted Wood</Line1>\n          <Line2>533 Hogwart's Way</Line2>\n          <City>Hogsmead</City>\n          <PostalCode>7733</PostalCode>\n        </Physical>\n      </Address>\n      <Email>\n        <Personal>\n          <Address>ridwulfa@gmail.com</Address>\n        </Personal>\n      </Email>\n      <Phone>\n        <Mobile>\n          <Number>(021) 300 999</Number>\n        </Mobile>\n      </Phone>\n    </PersonInfo>\n  </StudentContactPersonal>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "StudentContactPersonalErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "PersonInfo.Email.Work.SourceOrganisation.RefId",
          "PersonInfo.Email.Personal.SourceOrganisation.RefId"
        ]
      },
      "get": {
        "tags": [
          "StudentContactPersonal"
        ],
        "summary": "Retrieve one or more StudentContactPersonals",
        "description": "<p>Bulk operation to retrieve all available StudentContactPersonals records of the personal contact and demographic information relating to one or more student whānau members, for students enrolled at the given Provider.</p>",
        "operationId": "getStudentContactPersonals",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "StudentContactPersonal"
        ],
        "summary": "Update one or more StudentContactPersonals",
        "description": "<p>Bulk operation to update one or more StudentContactPersonals records of the personal contact and demographic information relating to one or more student whānau members, for students enrolled at the given Provider.</p>",
        "operationId": "updateStudentContactPersonals",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentContactPersonal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactPersonalCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentcontactpersonal/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactPersonalCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentcontactpersonal/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalErrorList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentContactPersonalErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "PersonInfo.Email.Work.SourceOrganisation.RefId",
          "PersonInfo.Email.Personal.SourceOrganisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "StudentContactPersonal"
        ],
        "summary": "Patch one or more StudentContactPersonals",
        "description": "<p>Bulk operation to update one or more fields of one or more StudentContactPersonals records of the personal contact and demographic information relating to one or more student whānau  members, for students enrolled at the given Provider.</p>",
        "operationId": "patchStudentContactPersonals",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentContactPersonal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactPersonalPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentcontactpersonal/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactPersonalPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentcontactpersonal/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalErrorList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentContactPersonalErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "PersonInfo.Email.Work.SourceOrganisation.RefId",
          "PersonInfo.Email.Personal.SourceOrganisation.RefId"
        ]
      }
    },
    "/studentcontactpersonal/{studentContactPersonalRefId}": {
      "get": {
        "tags": [
          "StudentContactPersonal"
        ],
        "summary": "Retrieve a single StudentContactPersonals",
        "description": "<p>Retrieve a StudentContactPersonal record of the personal contact and demographic information relating to a particular student whānau members for students enrolled at the given Provider.</p>",
        "operationId": "getStudentContactPersonal",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/studentPersonalRefId"
          },
          {
            "name": "studentContactPersonalRefId",
            "in": "path",
            "description": "<p>The GUID identifying the record of the personal contact and demographic information of the particular student;s whānau member.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATE"
                },
                "example": {
                  "StudentContactPersonal": {
                    "StudentContactPersonalRefId": "7c834ea9-eda1-2090-347f-83297e1c290f",
                    "StudentContactPersonalLocalId": "P1234567",
                    "PersonInfo": {
                      "Name": {
                        "FamilyName": "Hagrid",
                        "GivenName": "Fridwulfa",
                        "FullName": "Fridwulfa Hagrid",
                        "Type": "LGL"
                      },
                      "Address": {
                        "Physical": {
                          "Type": "TH",
                          "Line1": "The Enchanted Wood",
                          "Line2": "533 Hogwart's Way",
                          "City": "Hogsmead",
                          "PostalCode": "7733"
                        }
                      },
                      "Email": {
                        "Personal": {
                          "Address": "ridwulfa@gmail.com"
                        }
                      },
                      "Phone": {
                        "Mobile": {
                          "Number": "(021) 300 999"
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATE"
                },
                "example": "<StudentContactPersonal>\n  <StudentContactPersonalRefId>7c834ea9-eda1-2090-347f-83297e1c290f</StudentContactPersonalRefId>\n  <StudentContactPersonalLocalId>P1234567</StudentContactPersonalLocalId>\n  <PersonInfo>\n    <Name>\n      <FamilyName>Hagrid</FamilyName>\n      <GivenName>Fridwulfa</GivenName>\n      <FullName>Fridwulfa Hagrid</FullName>\n      <Type>LGL</Type>\n    </Name>\n    <Address>\n      <Physical>\n        <Type>TH</Type>\n        <Line1>The Enchanted Wood</Line1>\n        <Line2>533 Hogwart's Way</Line2>\n        <City>Hogsmead</City>\n        <PostalCode>7733</PostalCode>\n      </Physical>\n    </Address>\n    <Email>\n      <Personal>\n        <Address>ridwulfa@gmail.com</Address>\n      </Personal>\n    </Email>\n    <Phone>\n      <Mobile>\n        <Number>(021) 300 999</Number>\n      </Mobile>\n    </Phone>\n  </PersonInfo>\n</StudentContactPersonal>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "StudentContactPersonal"
        ],
        "summary": "Update a single StudentContactPersonals",
        "description": "<p>Update a StudentContactPersonal record of the personal contact and demographic information relating to a particular student whānau members for students enrolled at the given Provider.</p>",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentContactPersonalRefId",
            "in": "path",
            "description": "<p>The GUID identifying the record of the personal contact and demographic information of the particular student;s whānau member.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "operationId": "updateStudentContactPersonal",
        "requestBody": {
          "description": "CRUD operation on StudentContactPersonal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactPersonalCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentcontactpersonal~1%7BstudentContactPersonalRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactPersonalCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentcontactpersonal~1%7BstudentContactPersonalRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal~1%7BstudentContactPersonalRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal~1%7BstudentContactPersonalRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "PersonInfo.Email.Work.SourceOrganisation.RefId",
          "PersonInfo.Email.Personal.SourceOrganisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "StudentContactPersonal"
        ],
        "summary": "Patch a single StudentContactPersonals",
        "description": "<p>Update one or more fields of a StudentContactPersonal record of the personal contact and demographic information relating to a particular student whānau members for students enrolled at the given Provider.</p>",
        "operationId": "patchStudentContactPersonal",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentContactPersonalRefId",
            "in": "path",
            "description": "<p>The GUID identifying the record of the personal contact and demographic information of the particular student;s whānau member.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentContactPersonal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactPersonalPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentcontactpersonal~1%7BstudentContactPersonalRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactPersonalPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentcontactpersonal~1%7BstudentContactPersonalRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal~1%7BstudentContactPersonalRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal~1%7BstudentContactPersonalRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "PersonInfo.Email.Work.SourceOrganisation.RefId",
          "PersonInfo.Email.Personal.SourceOrganisation.RefId"
        ]
      }
    },
    "/studentpersonal/{studentPersonalRefId}/studentcontactpersonal": {
      "get": {
        "tags": [
          "StudentContactPersonal"
        ],
        "summary": "Retrieve StudentContactPersonals by Student",
        "description": "<p>Retrieve all available StudentContactPersonal records of the personal contact and demographic information relating to a all whānau members of a particular student enrolled at the given Provider.</p>",
        "operationId": "getStudentContactPersonalsByStudent",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/studentPersonalRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactPersonalCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactpersonal/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-byEntity": "ByStudentPersonal",
        "x-isBulk": true,
        "x-isSingle": false
      }
    },
    "/studentcontactrelationship": {
      "post": {
        "tags": [
          "StudentContactRelationship"
        ],
        "summary": "Create a set of StudentContactRelationships",
        "description": "<p>Bulk operation to update one or more relationships between a person who is part of a  Student's whānau and that Student, for students enrolled at the given Provider.</p> <p>Relationship properties include the relationship type and roles played by the student contact in respect of the student.</p>  <p>Individual details about the student and student contact are provided  <a href=\"#tag/StudentPersonal\">StudentPersonal</a> and <a href=\"#tag/StudentContactPersonal\">StudentContactPersonal</a></p>",
        "operationId": "createStudentContactRelationships",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentContactRelationship",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactRelationshipCREATEList"
              },
              "example": {
                "StudentContactRelationships": {
                  "StudentContactRelationship": [
                    {
                      "StudentContactRelationshipRefId": "7572b261-0947-583a-463d-bb345291b332",
                      "StudentContactRelationshipLocalId": "PRNT-0023",
                      "Student": {
                        "RefId": "dee34b35-9d75-101a-8c3d-00aa001a1652"
                      },
                      "StudentContact": {
                        "RefId": "6472b261-0947-583a-463d-bb345291b001"
                      },
                      "Organisation": {
                        "RefId": "9651"
                      },
                      "Relationship": {
                        "Code": "LEG"
                      },
                      "Status": "A",
                      "StartDate": "2020-05-30T00:00:00+1200",
                      "ContactFlags": {
                        "ParentLegalGuardian": "Y",
                        "LivesWith": "N",
                        "AccessToRecords": "N",
                        "ReceivesAssessmentReport": "Y",
                        "EmergencyContact": "Y",
                        "CivilDefenceEmergencyContact": "N",
                        "DisciplinaryContact": "N",
                        "AttendanceContact": "N",
                        "PrimaryCareProvider": "Y",
                        "FeesBilling": "Y",
                        "FamilyMail": "Y",
                        "CourtOrder": "N"
                      },
                      "ContactSequence": 1,
                      "RecordAudit": {
                        "CreatedDateTime": "2020-05-26T00:00:00+1200",
                        "LastUpdatedDateTime": "2020-05-26T00:00:00+1200"
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactRelationshipCREATEList"
              },
              "example": "<StudentContactRelationships>\n  <StudentContactRelationship>\n    <StudentContactRelationshipRefId>7572b261-0947-583a-463d-bb345291b332</StudentContactRelationshipRefId>\n    <Student>\n      <RefId>dee34b35-9d75-101a-8c3d-00aa001a1652</RefId>\n    </Student>\n    <StudentContact>\n      <RefId>6472b261-0947-583a-463d-bb345291b001</RefId>\n    </StudentContact>\n    <Organisation>\n      <RefId>9651</RefId>\n    </Organisation>\n    <Relationship>\n      <Code>LEG</Code>\n    </Relationship>\n    <ContactFlags>\n      <ParentLegalGuardian>Y</ParentLegalGuardian>\n      <PickupRights>Y</PickupRights>\n      <LivesWith>N</LivesWith>\n      <AccessToRecords>U</AccessToRecords>\n      <ReceivesAssessmentReport>Y</ReceivesAssessmentReport>\n      <EmergencyContact>Y</EmergencyContact>\n      <CivilDefenceEmergencyContact>N</CivilDefenceEmergencyContact>\n      <DisciplinaryContact>N</DisciplinaryContact>\n      <AttendanceContact>N</AttendanceContact>\n      <PrimaryCareOrganisation>U</PrimaryCareOrganisation>\n      <FeesBilling>Y</FeesBilling>\n      <FamilyMail>Y</FamilyMail>\n      <CourtOrder>N</CourtOrder>\n    </ContactFlags>\n    <ContactSequence>1</ContactSequence>\n  </StudentContactRelationship>\n</StudentContactRelationships>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipErrorList"
                },
                "example": [
                  {
                    "StudentContactRelationship": {
                      "StudentContactRelationshipRefId": "7572b261-0947-583a-463d-bb345291b332",
                      "StudentContactRelationshipLocalId": "PRNT-0023",
                      "Student": {
                        "RefId": "dee34b35-9d75-101a-8c3d-00aa001a1652"
                      },
                      "StudentContact": {
                        "RefId": "6472b261-0947-583a-463d-bb345291b001"
                      },
                      "Organisation": {
                        "RefId": "9651"
                      },
                      "Relationship": {
                        "Code": "LEG"
                      },
                      "Status": "A",
                      "StartDate": "2020-05-30T00:00:00+1200",
                      "ContactFlags": {
                        "ParentLegalGuardian": "Y",
                        "LivesWith": "N",
                        "AccessToRecords": "N",
                        "ReceivesAssessmentReport": "Y",
                        "EmergencyContact": "Y",
                        "CivilDefenceEmergencyContact": "N",
                        "DisciplinaryContact": "N",
                        "AttendanceContact": "N",
                        "PrimaryCareProvider": "Y",
                        "FeesBilling": "Y",
                        "FamilyMail": "Y",
                        "CourtOrder": "N"
                      },
                      "ContactSequence": 1,
                      "RecordAudit": {
                        "CreatedDateTime": "2020-05-26T00:00:00+1200",
                        "LastUpdatedDateTime": "2020-05-26T00:00:00+1200"
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipErrorList"
                },
                "example": "<Response>\n  <StudentContactRelationship>\n    <StudentContactRelationshipRefId>7572b261-0947-583a-463d-bb345291b332</StudentContactRelationshipRefId>\n    <Student>\n      <RefId>dee34b35-9d75-101a-8c3d-00aa001a1652</RefId>\n    </Student>\n    <StudentContact>\n      <RefId>6472b261-0947-583a-463d-bb345291b001</RefId>\n    </StudentContact>\n    <Organisation>\n      <RefId>9651</RefId>\n    </Organisation>\n    <Relationship>\n      <Code>LEG</Code>\n    </Relationship>\n    <ContactFlags>\n      <ParentLegalGuardian>Y</ParentLegalGuardian>\n      <PickupRights>Y</PickupRights>\n      <LivesWith>N</LivesWith>\n      <AccessToRecords>U</AccessToRecords>\n      <ReceivesAssessmentReport>Y</ReceivesAssessmentReport>\n      <EmergencyContact>Y</EmergencyContact>\n      <CivilDefenceEmergencyContact>N</CivilDefenceEmergencyContact>\n      <DisciplinaryContact>N</DisciplinaryContact>\n      <AttendanceContact>N</AttendanceContact>\n      <PrimaryCareOrganisation>U</PrimaryCareOrganisation>\n      <FeesBilling>Y</FeesBilling>\n      <FamilyMail>Y</FamilyMail>\n      <CourtOrder>N</CourtOrder>\n    </ContactFlags>\n    <ContactSequence>1</ContactSequence>\n  </StudentContactRelationship>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "StudentContactRelationshipErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-studentPersonalObjectReference": "Student",
        "x-studentContactPersonalObjectReference": "StudentContact",
        "x-statusField": "Status",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "get": {
        "tags": [
          "StudentContactRelationship"
        ],
        "summary": "Retrieve a set of StudentContactRelationships",
        "description": "<p>Bulk operation to retrieve all available relationships between a person who is part of a  Student's whānau and that Student, for all students enrolled at the given Provider.</p> <p>Relationship properties include the relationship type and roles played by the student contact in respect of the student.</p>  <p>Individual details about the student and student contact are provided  <a href=\"#tag/StudentPersonal\">StudentPersonal</a> and <a href=\"#tag/StudentContactPersonal\">StudentContactPersonal</a></p>",
        "operationId": "getStudentContactRelationships",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/statusIA"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-statusField": "Status",
        "x-statusActive": "NZCodeSetsStudentContactRelationshipStatus.AEnum",
        "x-statusInActive": "NZCodeSetsStudentContactRelationshipStatus.IEnum",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "put": {
        "tags": [
          "StudentContactRelationship"
        ],
        "summary": "Retrieve a set of StudentContactRelationships",
        "description": "<p>Bulk operation to update one or more relationships between a person who is part of a  Student's whānau and that Student, for all students enrolled at the given Provider.</p> <p>Relationship properties include the relationship type and roles played by the student contact in respect of the student.</p>  <p>Individual details about the student and student contact are provided  <a href=\"#tag/StudentPersonal\">StudentPersonal</a> and <a href=\"#tag/StudentContactPersonal\">StudentContactPersonal</a></p>",
        "operationId": "updateStudentContactRelationships",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentContactRelationship",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactRelationshipCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentcontactrelationship/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactRelationshipCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentcontactrelationship/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentContactRelationshipErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-studentPersonalObjectReference": "Student",
        "x-studentContactPersonalObjectReference": "StudentContact",
        "x-statusField": "Status",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "patch": {
        "tags": [
          "StudentContactRelationship"
        ],
        "summary": "Patch a set of StudentContactRelationships",
        "description": "<p>Bulk operation to update one or more fields of one or more relationships between a person who is part of a Student's whānau and that Student, for all students enrolled at the given Provider.</p> <p>Relationship properties include the relationship type and roles played by the student contact in respect of the student.</p>  <p>Individual details about the student and student contact are provided  <a href=\"#tag/StudentPersonal\">StudentPersonal</a> and <a href=\"#tag/StudentContactPersonal\">StudentContactPersonal</a></p>",
        "operationId": "patchStudentContactRelationships",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentContactRelationship",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactRelationshipPATCHList"
              },
              "example": {
                "StudentContactRelationships": {
                  "StudentContactRelationship": [
                    {
                      "StudentContactRelationshipRefId": "7572b261-0947-583a-463d-bb345291b332",
                      "StudentContactRelationshipLocalId": "PRNT-0023",
                      "Student": {
                        "RefId": "dee34b35-9d75-101a-8c3d-00aa001a1652"
                      },
                      "StudentContact": {
                        "RefId": "6472b261-0947-583a-463d-bb345291b001"
                      },
                      "Organisation": {
                        "RefId": "9651"
                      },
                      "Relationship": {
                        "Code": "LEG"
                      },
                      "StartDate": "2020-05-30T00:00:00+1200",
                      "ContactFlags": {
                        "ParentLegalGuardian": "Y",
                        "LivesWith": "N",
                        "AccessToRecords": "N",
                        "ReceivesAssessmentReport": "Y",
                        "EmergencyContact": "Y",
                        "CivilDefenceEmergencyContact": "N",
                        "DisciplinaryContact": "N",
                        "AttendanceContact": "N",
                        "PrimaryCareProvider": "Y",
                        "FeesBilling": "Y",
                        "FamilyMail": "Y",
                        "CourtOrder": "N"
                      },
                      "ContactSequence": 1
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactRelationshipPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentcontactrelationship/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentContactRelationshipErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-studentPersonalObjectReference": "Student",
        "x-studentContactPersonalObjectReference": "StudentContact",
        "x-statusField": "Status",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      }
    },
    "/studentcontactrelationship/{studentContactRelationshipRefId}": {
      "get": {
        "tags": [
          "StudentContactRelationship"
        ],
        "summary": "Retrieve a single StudentContactRelationships",
        "description": "<p>Retrieve a particular relationship between a person who is part of a  Student's whānau and that Student.</p> <p>Relationship properties include the relationship type and roles played by the student contact in respect of the student.</p>  <p>Individual details about the student and student contact are provided  <a href=\"#tag/StudentPersonal\">StudentPersonal</a> and <a href=\"#tag/StudentContactPersonal\">StudentContactPersonal</a></p>",
        "operationId": "getStudentContactRelationship",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentContactRelationshipRefId",
            "in": "path",
            "description": "<p>The SIF GUID for the student contact relationship.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATE"
                },
                "example": {
                  "StudentContactRelationship": {
                    "StudentContactRelationshipRefId": "7572b261-0947-583a-463d-bb345291b332",
                    "StudentContactRelationshipLocalId": "PRNT-0023",
                    "Student": {
                      "RefId": "dee34b35-9d75-101a-8c3d-00aa001a1652"
                    },
                    "StudentContact": {
                      "RefId": "6472b261-0947-583a-463d-bb345291b001"
                    },
                    "Organisation": {
                      "RefId": "9651"
                    },
                    "Relationship": {
                      "Code": "LEG"
                    },
                    "Status": "A",
                    "StartDate": "2020-05-30T00:00:00+1200",
                    "ContactFlags": {
                      "ParentLegalGuardian": "Y",
                      "LivesWith": "N",
                      "AccessToRecords": "N",
                      "ReceivesAssessmentReport": "Y",
                      "EmergencyContact": "Y",
                      "CivilDefenceEmergencyContact": "N",
                      "DisciplinaryContact": "N",
                      "AttendanceContact": "N",
                      "PrimaryCareProvider": "Y",
                      "FeesBilling": "Y",
                      "FamilyMail": "Y",
                      "CourtOrder": "N"
                    },
                    "ContactSequence": 1,
                    "RecordAudit": {
                      "CreatedDateTime": "2020-05-26T00:00:00+1200",
                      "LastUpdatedDateTime": "2020-05-26T00:00:00+1200"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATE"
                },
                "example": "<StudentContactRelationship>\n  <StudentContactRelationshipRefId>7572b261-0947-583a-463d-bb345291b332</StudentContactRelationshipRefId>\n  <Student>\n    <RefId>dee34b35-9d75-101a-8c3d-00aa001a1652</RefId>\n  </Student>\n  <StudentContact>\n    <RefId>6472b261-0947-583a-463d-bb345291b001</RefId>\n  </StudentContact>\n  <Organisation>\n    <RefId>9651</RefId>\n  </Organisation>\n  <Relationship>\n    <Code>LEG</Code>\n  </Relationship>\n  <ContactFlags>\n    <ParentLegalGuardian>Y</ParentLegalGuardian>\n    <PickupRights>Y</PickupRights>\n    <LivesWith>N</LivesWith>\n    <AccessToRecords>U</AccessToRecords>\n    <ReceivesAssessmentReport>Y</ReceivesAssessmentReport>\n    <EmergencyContact>Y</EmergencyContact>\n    <CivilDefenceEmergencyContact>N</CivilDefenceEmergencyContact>\n    <DisciplinaryContact>N</DisciplinaryContact>\n    <AttendanceContact>N</AttendanceContact>\n    <PrimaryCareOrganisation>U</PrimaryCareOrganisation>\n    <FeesBilling>Y</FeesBilling>\n    <FamilyMail>Y</FamilyMail>\n    <CourtOrder>N</CourtOrder>\n  </ContactFlags>\n  <ContactSequence>1</ContactSequence>\n</StudentContactRelationship>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-statusField": "Status",
        "x-statusActive": "NZCodeSetsStudentContactRelationshipStatus.AEnum",
        "x-statusInActive": "NZCodeSetsStudentContactRelationshipStatus.IEnum",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "put": {
        "tags": [
          "StudentContactRelationship"
        ],
        "summary": "Update a single StudentContactRelationships",
        "description": "<p>Update a particular relationship between a person who is part of a  Student's whānau and that Student.</p> <p>Relationship properties include the relationship type and roles played by the student contact in respect of the student.</p>  <p>Individual details about the student and student contact are provided  <a href=\"#tag/StudentPersonal\">StudentPersonal</a> and <a href=\"#tag/StudentContactPersonal\">StudentContactPersonal</a></p>",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentContactRelationshipRefId",
            "in": "path",
            "description": "<p>The SIF GUID for the student contact relationship.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "operationId": "updateStudentContactRelationship",
        "requestBody": {
          "description": "CRUD operation on StudentContactRelationship",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactRelationshipCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentcontactrelationship~1%7BstudentContactRelationshipRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactRelationshipCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentcontactrelationship~1%7BstudentContactRelationshipRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship~1%7BstudentContactRelationshipRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship~1%7BstudentContactRelationshipRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-studentPersonalObjectReference": "Student",
        "x-studentContactPersonalObjectReference": "StudentContact",
        "x-statusField": "Status",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "patch": {
        "tags": [
          "StudentContactRelationship"
        ],
        "summary": "Patch a single StudentContactRelationships",
        "description": "<p>Update one or more fields of a particular relationship between a person who is part of a  Student's whānau and that Student.</p> <p>Relationship properties include the relationship type and roles played by the student contact in respect of the student.</p>  <p>Individual details about the student and student contact are provided  <a href=\"#tag/StudentPersonal\">StudentPersonal</a> and <a href=\"#tag/StudentContactPersonal\">StudentContactPersonal</a></p>",
        "operationId": "patchStudentContactRelationship",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentContactRelationshipRefId",
            "in": "path",
            "description": "<p>The SIF GUID for the student contact relationship.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentContactRelationship",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactRelationshipPATCH"
              },
              "example": {
                "StudentContactRelationship": {
                  "StudentContactRelationshipRefId": "7572b261-0947-583a-463d-bb345291b332",
                  "StudentContactRelationshipLocalId": "PRNT-0023",
                  "Student": {
                    "RefId": "dee34b35-9d75-101a-8c3d-00aa001a1652"
                  },
                  "StudentContact": {
                    "RefId": "6472b261-0947-583a-463d-bb345291b001"
                  },
                  "Organisation": {
                    "RefId": "9651"
                  },
                  "Relationship": {
                    "Code": "LEG"
                  },
                  "StartDate": "2020-05-30T00:00:00+1200",
                  "ContactFlags": {
                    "ParentLegalGuardian": "Y",
                    "LivesWith": "N",
                    "AccessToRecords": "N",
                    "ReceivesAssessmentReport": "Y",
                    "EmergencyContact": "Y",
                    "CivilDefenceEmergencyContact": "N",
                    "DisciplinaryContact": "N",
                    "AttendanceContact": "N",
                    "PrimaryCareProvider": "Y",
                    "FeesBilling": "Y",
                    "FamilyMail": "Y",
                    "CourtOrder": "N"
                  },
                  "ContactSequence": 1
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentContactRelationshipPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentcontactrelationship~1%7BstudentContactRelationshipRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship~1%7BstudentContactRelationshipRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship~1%7BstudentContactRelationshipRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-studentPersonalObjectReference": "Student",
        "x-studentContactPersonalObjectReference": "StudentContact",
        "x-statusField": "Status",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      }
    },
    "/studentpersonal/{studentPersonalRefId}/studentcontactrelationship": {
      "get": {
        "tags": [
          "StudentContactRelationship"
        ],
        "summary": "Retrieve StudentContactRelationships by Student",
        "description": "<p>Retrieve all available relationship between a person who is part of a  Student's whānau and a particular Student.</p> <p>Relationship properties include the relationship type and roles played by the student contact in respect of the student.</p>  <p>Individual details about the student and student contact are provided  <a href=\"#tag/StudentPersonal\">StudentPersonal</a> and <a href=\"#tag/StudentContactPersonal\">StudentContactPersonal</a></p>    ",
        "operationId": "getStudentContactRelationshipsByStudent",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/studentPersonalRefId"
          },
          {
            "$ref": "#/components/parameters/statusIA"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentContactRelationshipCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentcontactrelationship/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-byEntity": "ByStudentPersonal",
        "x-isBulk": true,
        "x-isSingle": false,
        "x-statusField": "Status",
        "x-statusActive": "NZCodeSetsStudentContactRelationshipStatus.AEnum",
        "x-statusInActive": "NZCodeSetsStudentContactRelationshipStatus.IEnum",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      }
    },
    "/studentproviderenrolment": {
      "post": {
        "tags": [
          "StudentProviderEnrolment"
        ],
        "summary": "Create one or more StudentProviderEnrolments",
        "description": "<p>Bulk operation to create one or more student enrolments with an education provider.</p> \n<p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>",
        "operationId": "createStudentProviderEnrolments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentProviderEnrolment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentProviderEnrolmentCREATEList"
              },
              "example": {
                "StudentProviderEnrolments": {
                  "StudentProviderEnrolment": [
                    {
                      "StudentProviderEnrolmentRefId": "5f270859-69fb-451c-b1c8-76ad8df36f18",
                      "StudentProviderEnrolmentLocalId": "2020_8001_ST1000001",
                      "Student": {
                        "LocalId": "ST1000001",
                        "NationalStudentNumber": "9001000001"
                      },
                      "Provider": {
                        "RefId": "8001"
                      },
                      "StudentId": "ST1000001",
                      "EntryDate": "2015-03-07T00:00:00+1200",
                      "Status": "ACT",
                      "ECEEducationHistoryList": {
                        "ECEType": [
                          {
                            "Type": "EPG"
                          }
                        ]
                      },
                      "SchoolEnrolmentList": {
                        "SchoolEnrolment": [
                          {
                            "SchoolEnrolmentRefId": "6395ea64-e4ef-4b57-9daf-5cae91023184",
                            "SchoolEnrolmentLocalId": "2020_8001_ST1000001",
                            "SchoolCalendarYear": 2020,
                            "StartDate": "2020-01-27T00:00:00+1200",
                            "MembershipType": "BASE",
                            "YearLevel": 6,
                            "FTE": 1,
                            "FundingType": "SF",
                            "FundingYearLevel": 6,
                            "Curriculum": "NZC"
                          }
                        ]
                      },
                      "RecordAudit": {
                        "CreatedDateTime": "2020-05-26T00:00:00+1200",
                        "LastUpdatedDateTime": "2020-05-26T00:00:00+1200"
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentProviderEnrolmentCREATEList"
              },
              "example": "<StudentProviderEnrolment>\n  <StudentProviderEnrolmentLocalId>2020_8001_ST1000001</StudentProviderEnrolmentLocalId>\n  <Student>\n    <LocalId>ST1000001</LocalId>\n    <NationalStudentNumber>9001000001</NationalStudentNumber>\n  </Student>\n  <Provider>\n    <RefId>8001</RefId>\n  </Provider>\n  <StudentId>ST1000001</StudentId>\n  <EntryDate>2015-03-07</EntryDate>\n  <Status>ACT</Status>\n  <ECEEducationHistoryList>\n    <ECEType>\n      <Type>EPG</Type>\n    </ECEType>\n  </ECEEducationHistoryList>\n  <SchoolEnrolmentList>\n    <SchoolEnrolment>\n      <SchoolCalendarYear>2020</SchoolCalendarYear>\n      <StartDate>2020-01-27</StartDate>\n      <MembershipType>BASE</MembershipType>\n      <YearLevel>6</YearLevel>\n      <FTE>1</FTE>\n      <FundingType>SF</FundingType>\n      <FundingYearLevel>6</FundingYearLevel>\n      <Curriculum>NZC</Curriculum>\n    </SchoolEnrolment>\n  </SchoolEnrolmentList>\n</StudentProviderEnrolment>  "
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentErrorList"
                },
                "example": [
                  {
                    "StudentProviderEnrolment": {
                      "StudentProviderEnrolmentRefId": "5f270859-69fb-451c-b1c8-76ad8df36f18",
                      "StudentProviderEnrolmentLocalId": "2020_8001_ST1000001",
                      "Student": {
                        "LocalId": "ST1000001",
                        "NationalStudentNumber": "9001000001"
                      },
                      "Provider": {
                        "RefId": "8001"
                      },
                      "StudentId": "ST1000001",
                      "EntryDate": "2015-03-07T00:00:00+1200",
                      "Status": "ACT",
                      "ECEEducationHistoryList": {
                        "ECEType": [
                          {
                            "Type": "EPG"
                          }
                        ]
                      },
                      "SchoolEnrolmentList": {
                        "SchoolEnrolment": [
                          {
                            "SchoolEnrolmentRefId": "6395ea64-e4ef-4b57-9daf-5cae91023184",
                            "SchoolEnrolmentLocalId": "2020_8001_ST1000001",
                            "SchoolCalendarYear": 2020,
                            "StartDate": "2020-01-27T00:00:00+1200",
                            "MembershipType": "BASE",
                            "YearLevel": 6,
                            "FTE": 1,
                            "FundingType": "SF",
                            "FundingYearLevel": 6,
                            "Curriculum": "NZC"
                          }
                        ]
                      },
                      "RecordAudit": {
                        "CreatedDateTime": "2020-05-26T00:00:00+1200",
                        "LastUpdatedDateTime": "2020-05-26T00:00:00+1200"
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentErrorList"
                },
                "example": "<Response>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "StudentProviderEnrolmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Provider.RefId"
        ],
        "x-studentPersonalObjectReference": "Student",
        "x-statusField": "Status'",
        "x-statusStartDate": "EntryDate",
        "x-statusEndDate": "ExitDate"
      },
      "get": {
        "tags": [
          "StudentProviderEnrolment"
        ],
        "summary": "Retrieve one or more StudentProviderEnrolments",
        "description": "<p>Bulk operation to retrieve all available student enrolments with the given education provider.</p>\n<p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>",
        "operationId": "getStudentProviderEnrolments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/statusENR"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-statusField": "Status",
        "x-statusActive": "NZCodeSetsProviderEnrolmentStatus.ACTEnum",
        "x-statusInActive": "NZCodeSetsProviderEnrolmentStatus.WITEnum",
        "x-statusStartDate": "EntryDate",
        "x-statusEndDate": "ExitDate"
      },
      "put": {
        "tags": [
          "StudentProviderEnrolment"
        ],
        "summary": "Update one or more StudentProviderEnrolments",
        "description": "<p>Bulk operation to update one or more student enrolments with the given education provider.</p>\n<p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>",
        "operationId": "updateStudentProviderEnrolments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentProviderEnrolment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentProviderEnrolmentCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentProviderEnrolmentCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentProviderEnrolmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Provider.RefId"
        ],
        "x-studentPersonalObjectReference": "Student",
        "x-statusField": "Status'",
        "x-statusStartDate": "EntryDate",
        "x-statusEndDate": "ExitDate"
      },
      "patch": {
        "tags": [
          "StudentProviderEnrolment"
        ],
        "summary": "Patch one or more StudentProviderEnrolments",
        "description": "<p>Bulk operation to update one or more fields of one or more student enrolments with the given education provider.</p>\n<p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>",
        "operationId": "patchStudentProviderEnrolments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentProviderEnrolment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentProviderEnrolmentPATCHList"
              },
              "example": {
                "StudentProviderEnrolments": {
                  "StudentProviderEnrolment": [
                    {
                      "StudentProviderEnrolmentLocalId": "2020_8001_ST1000001",
                      "Student": {
                        "LocalId": "ST1000001",
                        "NationalStudentNumber": "9001000001"
                      },
                      "Provider": {
                        "RefId": "8001"
                      },
                      "StudentId": "ST1000001",
                      "EntryDate": "2015-03-07T00:00:00+1200",
                      "ECEEducationHistoryList": {
                        "ECEType": [
                          {
                            "Type": "EPG"
                          }
                        ]
                      },
                      "SchoolEnrolmentList": {
                        "SchoolEnrolment": [
                          {
                            "SchoolEnrolmentRefId": "f5f35c78-95c1-4544-bd83-9e400b7c80ad",
                            "SchoolEnrolmentLocalId": "2020_8001_ST1000001",
                            "SchoolCalendarYear": 2020,
                            "StartDate": "2020-01-27T00:00:00+1200",
                            "MembershipType": "BASE",
                            "YearLevel": 6,
                            "FTE": 1,
                            "FundingType": "SF",
                            "FundingYearLevel": 6,
                            "Curriculum": "NZC"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentProviderEnrolmentPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentProviderEnrolmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Provider.RefId"
        ],
        "x-studentPersonalObjectReference": "Student",
        "x-statusField": "Status'",
        "x-statusStartDate": "EntryDate",
        "x-statusEndDate": "ExitDate"
      }
    },
    "/studentproviderenrolment/{studentProviderEnrolmentRefId}": {
      "get": {
        "tags": [
          "StudentProviderEnrolment"
        ],
        "summary": "Retrieve a single StudentProviderEnrolment",
        "description": "<p>Retrieve a particular student enrolment with the given education provider.</p>\n<p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>",
        "operationId": "getStudentProviderEnrolment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentProviderEnrolmentRefId",
            "in": "path",
            "description": "<p>The SIF GUID for the record of the particular student's  particular enrolment with the given Provider.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATE"
                },
                "example": {
                  "StudentProviderEnrolment": {
                    "StudentProviderEnrolmentRefId": "5f270859-69fb-451c-b1c8-76ad8df36f18",
                    "StudentProviderEnrolmentLocalId": "2020_8001_ST1000001",
                    "Student": {
                      "LocalId": "ST1000001",
                      "NationalStudentNumber": "9001000001"
                    },
                    "Provider": {
                      "RefId": "8001"
                    },
                    "StudentId": "ST1000001",
                    "EntryDate": "2015-03-07T00:00:00+1200",
                    "Status": "ACT",
                    "ECEEducationHistoryList": {
                      "ECEType": [
                        {
                          "Type": "EPG"
                        }
                      ]
                    },
                    "SchoolEnrolmentList": {
                      "SchoolEnrolment": [
                        {
                          "SchoolEnrolmentRefId": "6395ea64-e4ef-4b57-9daf-5cae91023184",
                          "SchoolEnrolmentLocalId": "2020_8001_ST1000001",
                          "SchoolCalendarYear": 2020,
                          "StartDate": "2020-01-27T00:00:00+1200",
                          "MembershipType": "BASE",
                          "YearLevel": 6,
                          "FTE": 1,
                          "FundingType": "SF",
                          "FundingYearLevel": 6,
                          "Curriculum": "NZC"
                        }
                      ]
                    },
                    "RecordAudit": {
                      "CreatedDateTime": "2020-05-26T00:00:00+1200",
                      "LastUpdatedDateTime": "2020-05-26T00:00:00+1200"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-statusField": "Status",
        "x-statusActive": "NZCodeSetsProviderEnrolmentStatus.ACTEnum",
        "x-statusInActive": "NZCodeSetsProviderEnrolmentStatus.WITEnum",
        "x-statusStartDate": "EntryDate",
        "x-statusEndDate": "ExitDate"
      },
      "put": {
        "tags": [
          "StudentProviderEnrolment"
        ],
        "summary": "Update a single StudentProviderEnrolment",
        "description": "<p>Update a particular student enrolment with the given education provider.</p>\n<p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>",
        "operationId": "updateStudentProviderEnrolment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentProviderEnrolmentRefId",
            "in": "path",
            "description": "<p>The SIF GUID for the record of the particular student's  particular enrolment with the given Provider.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentProviderEnrolment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentProviderEnrolmentCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentproviderenrolment~1%7BstudentProviderEnrolmentRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentProviderEnrolmentCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment~1%7BstudentProviderEnrolmentRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Provider.RefId"
        ],
        "x-studentPersonalObjectReference": [
          "Student"
        ],
        "x-statusField": "Status'",
        "x-statusStartDate": "EntryDate",
        "x-statusEndDate": "ExitDate"
      },
      "patch": {
        "tags": [
          "StudentProviderEnrolment"
        ],
        "summary": "Patch a single StudentProviderEnrolment",
        "description": "<p>Update one or more fields of a particular student enrolment with the given education provider.</p>\n<p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>",
        "operationId": "patchStudentProviderEnrolment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentProviderEnrolmentRefId",
            "in": "path",
            "description": "<p>The SIF GUID for the record of the particular student's  particular enrolment with the given Provider.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentProviderEnrolment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentProviderEnrolmentPATCH"
              },
              "example": {
                "StudentProviderEnrolment": {
                  "StudentProviderEnrolmentLocalId": "2020_8001_ST1000001",
                  "Student": {
                    "LocalId": "ST1000001",
                    "NationalStudentNumber": "9001000001"
                  },
                  "Provider": {
                    "RefId": "8001"
                  },
                  "StudentId": "ST1000001",
                  "EntryDate": "2015-03-07T00:00:00+1200",
                  "ECEEducationHistoryList": {
                    "ECEType": [
                      {
                        "Type": "EPG"
                      }
                    ]
                  },
                  "SchoolEnrolmentList": {
                    "SchoolEnrolment": [
                      {
                        "SchoolEnrolmentRefId": "f5f35c78-95c1-4544-bd83-9e400b7c80ad",
                        "SchoolEnrolmentLocalId": "2020_8001_ST1000001",
                        "SchoolCalendarYear": 2020,
                        "StartDate": "2020-01-27T00:00:00+1200",
                        "MembershipType": "BASE",
                        "YearLevel": 6,
                        "FTE": 1,
                        "FundingType": "SF",
                        "FundingYearLevel": 6,
                        "Curriculum": "NZC"
                      }
                    ]
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentProviderEnrolmentPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment~1%7BstudentProviderEnrolmentRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Provider.RefId"
        ],
        "x-studentPersonalObjectReference": "Student",
        "x-statusField": "Status'",
        "x-statusStartDate": "EntryDate",
        "x-statusEndDate": "ExitDate"
      }
    },
    "/studentpersonal/{studentPersonalRefId}/studentproviderenrolment": {
      "get": {
        "tags": [
          "StudentProviderEnrolment"
        ],
        "summary": "Retrieve StudentProviderEnrolments by Student",
        "description": "<p>Retrieve all available student enrolments with any education provider, for the given Student.</p>\n<p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>",
        "operationId": "getStudentProviderEnrolmentByStudent",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/studentPersonalRefId"
          },
          {
            "$ref": "#/components/parameters/statusENR"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-byEntity": "ByStudentPersonal",
        "x-isBulk": true,
        "x-isSingle": false,
        "x-statusField": "Status",
        "x-statusActive": "NZCodeSetsProviderEnrolmentStatus.ACTEnum",
        "x-statusInActive": "NZCodeSetsProviderEnrolmentStatus.WITEnum",
        "x-statusStartDate": "EntryDate",
        "x-statusEndDate": "ExitDate"
      }
    },
    "/schoolenrolment": {
      "post": {
        "tags": [
          "SchoolEnrolment"
        ],
        "summary": "Create one or more SchoolEnrolments",
        "description": "<p>Bulk operation to create one or more school enrolments as part of the given StudentProviderEnrolment.</p> \n<p>Provider enrolments span multiple years with the StudentProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year. Individual per-year school enrolment details are available via this SchoolEnrolment sub-object</p>\n<p><strong>Note:</strong> StudentProviderEnrolmentRefId and StudentProviderEnrolmentLocalId fields are included in the object to enable bulk CRUD operations to operate across multiple student enrolments within the same provider.</p>",
        "operationId": "createSchoolEnrolments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on SchoolEnrolment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolEnrolmentCREATEList"
              },
              "example": {
                "SchoolEnrolments": {
                  "SchoolEnrolment": [
                    {
                      "StudentProviderEnrolment": {
                        "LocalId": "8001_ST1000001"
                      },
                      "SchoolEnrolmentRefId": "f5f35c78-95c1-4544-bd83-9e400b7c80ad",
                      "SchoolEnrolmentLocalId": "2020_8001_ST1000001",
                      "SchoolCalendarYear": 2020,
                      "StartDate": "2020-01-27T00:00:00+1200",
                      "MembershipType": "BASE",
                      "YearLevel": 6,
                      "FTE": 1,
                      "FundingType": "SF",
                      "FundingYearLevel": 6,
                      "Curriculum": "NZC"
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SchoolEnrolmentCREATEList"
              },
              "example": "<SchoolEnrolments>\n  <SchoolEnrolment>\n    <SchoolCalendarYear>2020</SchoolCalendarYear>\n    <StartDate>2020-01-27</StartDate>\n    <MembershipType>BASE</MembershipType>\n    <YearLevel>6</YearLevel>\n    <FTE>1</FTE>\n    <FundingType>SF</FundingType>\n    <FundingYearLevel>6</FundingYearLevel>\n    <Curriculum>NZC</Curriculum>\n  </SchoolEnrolment>\n</SchoolEnrolments>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentCREATEList"
                },
                "example": {
                  "SchoolEnrolments": {
                    "SchoolEnrolment": [
                      {
                        "StudentProviderEnrolment": {
                          "LocalId": "8001_ST1000001"
                        },
                        "SchoolEnrolmentRefId": "6395ea64-e4ef-4b57-9daf-5cae91023184",
                        "SchoolEnrolmentLocalId": "2020_8001_ST1000001",
                        "SchoolCalendarYear": 2020,
                        "StartDate": "2020-01-27T00:00:00+1200",
                        "MembershipType": "BASE",
                        "YearLevel": 6,
                        "FTE": 1,
                        "FundingType": "SF",
                        "FundingYearLevel": 6,
                        "Curriculum": "NZC"
                      }
                    ]
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schoolenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "SchoolEnrolmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-isSubObject": true,
        "x-parentObject": "StudentProviderEnrolment"
      },
      "get": {
        "tags": [
          "SchoolEnrolment"
        ],
        "summary": "Retrieve one or more SchoolEnrolments",
        "description": "<p>Bulk operation to retrieve all available per-year school enrolments with the given StudentProviderEnrolment.</p>\n<p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year. Individual per-year school enrolment details are available via this SchoolEnrolment sub-object</p>\n<p><strong>Note:</strong> StudentProviderEnrolmentRefId and StudentProviderEnrolmentLocalId fields are included in the object to enable bulk CRUD operations to operate across multiple student enrolments within the same provider.</p>",
        "operationId": "getSchoolEnrolments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentProviderEnrolmentRefId",
            "in": "path",
            "required": true,
            "description": "System RefId of the parent StudentProviderEnrolment that the SchoolEnrolment(s) are part of",
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "example": "b43b2ae8-6b2a-42bc-802c-c4c5cf32eebf",
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schoolenrolment/post/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schoolenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-isSubObject": true,
        "x-parentObject": "StudentProviderEnrolment"
      },
      "put": {
        "tags": [
          "SchoolEnrolment"
        ],
        "summary": "Update one or more SchoolEnrolments",
        "description": "<p>Bulk operation to update one or more school enrolments with the given StudentProviderEnrolment.</p>\n<p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year. Individual per-year school enrolment details are available via this SchoolEnrolment sub-object.</p>\n<p><strong>Note:</strong> StudentProviderEnrolmentRefId and StudentProviderEnrolmentLocalId fields are included in the object to enable bulk CRUD operations to operate across multiple student enrolments within the same provider.</p>",
        "operationId": "updateSchoolEnrolments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentProviderEnrolment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolEnrolmentCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1schoolenrolment/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SchoolEnrolmentCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1schoolenrolment/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schoolenrolment/post/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schoolenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "SchoolEnrolmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-isSubObject": true,
        "x-parentObject": "StudentProviderEnrolment"
      },
      "patch": {
        "tags": [
          "SchoolEnrolment"
        ],
        "summary": "Patch one or more SchoolEnrolments",
        "description": "<p>Bulk operation to update one or more fields of one or more school enrolments within the given StudentProviderEnrolment.</p>\n<p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year. Individual per-year school enrolment details are available via this SchoolEnrolment sub-object</p>\n<p><strong>Note:</strong> StudentProviderEnrolmentRefId and StudentProviderEnrolmentLocalId fields are included in the object to enable bulk CRUD operations to operate across multiple student enrolments within the same provider.</p>",
        "operationId": "patchSchoolEnrolments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on SchoolEnrolment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolEnrolmentPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1schoolenrolment/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SchoolEnrolmentPATCHList"
              },
              "example": "<SchoolEnrolment>\n  <SchoolCalendarYear>2020</SchoolCalendarYear>\n  <StartDate>2020-01-27</StartDate>\n  <MembershipType>BASE</MembershipType>\n  <YearLevel>6</YearLevel>\n  <FTE>1</FTE>\n  <FundingType>SF</FundingType>\n  <FundingYearLevel>6</FundingYearLevel>\n  <Curriculum>NZC</Curriculum>\n</SchoolEnrolment>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schoolenrolment/post/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schoolenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProviderEnrolmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "SchoolEnrolmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-isSubObject": true,
        "x-parentObject": "StudentProviderEnrolment"
      }
    },
    "/studentproviderenrolment/{studentProviderEnrolmentRefId}/schoolenrolment/{schoolEnrolmentRefId}": {
      "get": {
        "tags": [
          "SchoolEnrolment"
        ],
        "summary": "Retrieve a single SchoolEnrolment",
        "description": "<p>Retrieve a particular student enrolment within the given StudentProviderEnrolment.</p>\n<p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year. Individual per-year school enrolment details are available via this SchoolEnrolment sub-object</p>",
        "operationId": "getSchoolEnrolment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentProviderEnrolmentRefId",
            "in": "path",
            "required": true,
            "description": "System RefId of the parent StudentProviderEnrolment that the SchoolEnrolment(s) are part of",
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "example": "b43b2ae8-6b2a-42bc-802c-c4c5cf32eebf",
            "x-isPK": true
          },
          {
            "name": "schoolEnrolmentRefId",
            "in": "path",
            "description": "<p>The SIF GUID for the record of the particular student's  particular enrolment with the given Provider.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentCREATE"
                },
                "example": {
                  "SchoolEnrolment": {
                    "StudentProviderEnrolment": {
                      "LocalId": "8001_ST1000001"
                    },
                    "SchoolEnrolmentRefId": "6395ea64-e4ef-4b57-9daf-5cae91023184",
                    "SchoolEnrolmentLocalId": "2020_8001_ST1000001",
                    "SchoolCalendarYear": 2020,
                    "StartDate": "2020-01-27T00:00:00+1200",
                    "MembershipType": "BASE",
                    "YearLevel": 6,
                    "FTE": 1,
                    "FundingType": "SF",
                    "FundingYearLevel": 6,
                    "Curriculum": "NZC"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schoolenrolment/patch/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-isSubObject": true,
        "x-parentObject": "StudentProviderEnrolment"
      },
      "put": {
        "tags": [
          "SchoolEnrolment"
        ],
        "summary": "Update a single SchoolEnrolment",
        "description": "<p>Update a particular student enrolment with the given StudentProviderEnrolment.</p>\n<p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year. Individual per-year school enrolment details are available via this SchoolEnrolment sub-object</p>",
        "operationId": "updateSchoolEnrolment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentProviderEnrolmentRefId",
            "in": "path",
            "required": true,
            "description": "System RefId of the parent StudentProviderEnrolment that the SchoolEnrolment(s) are part of",
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "example": "b43b2ae8-6b2a-42bc-802c-c4c5cf32eebf",
            "x-isPK": true
          },
          {
            "name": "schoolEnrolmentRefId",
            "in": "path",
            "description": "<p>The SIF GUID for the record of the particular student's  particular enrolment with the given Provider.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on SchoolEnrolment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolEnrolmentCREATE"
              },
              "example": {
                "SchoolEnrolment": {
                  "StudentProviderEnrolment": {
                    "LocalId": "8001_ST1000001"
                  },
                  "SchoolEnrolmentRefId": "f5f35c78-95c1-4544-bd83-9e400b7c80ad",
                  "SchoolEnrolmentLocalId": "2020_8001_ST1000001",
                  "SchoolCalendarYear": 2020,
                  "StartDate": "2020-01-27T00:00:00+1200",
                  "MembershipType": "BASE",
                  "YearLevel": 6,
                  "FTE": 1,
                  "FundingType": "SF",
                  "FundingYearLevel": 6,
                  "Curriculum": "NZC"
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SchoolEnrolmentCREATE"
              },
              "example": {
                "$ref": "#/paths/~1schoolenrolment/patch/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment~1%7BstudentProviderEnrolmentRefId%7D~1schoolenrolment~1%7BschoolEnrolmentRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schoolenrolment/patch/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-isSubObject": true,
        "x-parentObject": "StudentProviderEnrolment"
      },
      "patch": {
        "tags": [
          "SchoolEnrolment"
        ],
        "summary": "Patch a single SchoolEnrolment",
        "description": "<p>Update one or more fields of a particular student enrolment within the given StudentProviderEnrolment.</p>\n<p>Provider enrolments span multiple years with the ProviderEnrolment containing one  or more ECE, School or Tertiary Enrolment sub-objects for each particular year. Individual per-year school enrolment details are available via this SchoolEnrolment sub-object</p>",
        "operationId": "patchSchoolEnrolment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentProviderEnrolmentRefId",
            "in": "path",
            "required": true,
            "description": "System RefId of the parent StudentProviderEnrolment that the SchoolEnrolment(s) are part of",
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "example": "b43b2ae8-6b2a-42bc-802c-c4c5cf32eebf",
            "x-isPK": true
          },
          {
            "name": "schoolEnrolmentRefId",
            "in": "path",
            "description": "<p>The SIF GUID for the record of the particular student's  particular enrolment with the given Provider.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on SchoolEnrolment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolEnrolmentPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentproviderenrolment~1%7BstudentProviderEnrolmentRefId%7D~1schoolenrolment~1%7BschoolEnrolmentRefId%7D/put/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SchoolEnrolmentPATCH"
              },
              "example": {
                "$ref": "#/paths/~1schoolenrolment/patch/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentproviderenrolment~1%7BstudentProviderEnrolmentRefId%7D~1schoolenrolment~1%7BschoolEnrolmentRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolEnrolmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schoolenrolment/patch/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-isSubObject": true,
        "x-parentObject": "StudentProviderEnrolment"
      }
    },
    "/studentteachinggroupenrolment": {
      "post": {
        "tags": [
          "StudentTeachingGroupEnrolment"
        ],
        "summary": "Create one or more StudentTeachingGroupEnrolments",
        "description": "<p>Bulk operation to create multiple records of students' arrival at and departure from TeachingGroups at the given Provider.</p>",
        "operationId": "createStudentTeachingGroupEnrolment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentTeachingGroupEnrolment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
              },
              "example": {
                "StudentTeachingGroupEnrolments": {
                  "StudentTeachingGroupEnrolment": [
                    {
                      "StudentTeachingGroupEnrolmentLocalId": "2020_8001_HR6_ST1000001",
                      "Student": {
                        "LocalId": "ST1000001",
                        "NationalStudentNumber": "9001000001",
                        "YearLevel": 6
                      },
                      "Organisation": {
                        "RefId": "8001"
                      },
                      "Status": "A",
                      "TeachingGroup": {
                        "LocalId": "2020_8001_HR6"
                      },
                      "StartDate": "2020-01-27T00:00:00+1200",
                      "RecordAudit": {
                        "CreatedDateTime": "2020-05-26T00:00:00+1200",
                        "LastUpdatedDateTime": "2020-05-26T00:00:00+1200"
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
              },
              "example": "<StudentTeachingGroupEnrolments>\n  <StudentTeachingGroupEnrolment>\n    <StudentTeachingGroupEnrolmentLocalId>2020_8001_HR6_ST1000001</StudentTeachingGroupEnrolmentLocalId>\n    <Student>\n      <LocalId>ST1000001</LocalId>\n      <NationalStudentNumber>9001000001</NationalStudentNumber>\n      <YearLevel>6</YearLevel>\n    </Student>\n    <Organisation>\n      <RefId>8001</RefId>\n    </Organisation>\n    <Status>A</Status>\n    <TeachingGroup>\n      <LocalId>2020_8001_HR6</LocalId>\n    </TeachingGroup>\n    <StartDate>2020-01-27</StartDate>\n  </StudentTeachingGroupEnrolment>\n  <StudentTeachingGroupEnrolment>\n    <StudentTeachingGroupEnrolmentLocalId>2020_8001_HR6_ST1000014</StudentTeachingGroupEnrolmentLocalId>\n    <Student>\n      <LocalId>ST1000014</LocalId>\n      <NationalStudentNumber>9001000014</NationalStudentNumber>\n      <YearLevel>6</YearLevel>\n    </Student>\n    <Organisation>\n      <RefId>8001</RefId>\n    </Organisation>\n    <Status>A</Status>\n    <TeachingGroup>\n      <LocalId>2020_8001_HR6</LocalId>\n    </TeachingGroup>\n    <StartDate>2020-01-28</StartDate>\n  </StudentTeachingGroupEnrolment>\n</StudentTeachingGroupEnrolments>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentErrorList"
                },
                "example": [
                  {
                    "StudentTeachingGroupEnrolment": {
                      "StudentTeachingGroupEnrolmentLocalId": "2020_8001_HR6_ST1000001",
                      "Student": {
                        "LocalId": "ST1000001",
                        "NationalStudentNumber": "9001000001",
                        "YearLevel": 6
                      },
                      "Organisation": {
                        "RefId": "8001"
                      },
                      "Status": "A",
                      "TeachingGroup": {
                        "LocalId": "2020_8001_HR6"
                      },
                      "StartDate": "2020-01-27T00:00:00+1200",
                      "RecordAudit": {
                        "CreatedDateTime": "2020-05-26T00:00:00+1200",
                        "LastUpdatedDateTime": "2020-05-26T00:00:00+1200"
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentErrorList"
                },
                "example": "<Response>\n  <StudentTeachingGroupEnrolment>\n    <StudentTeachingGroupEnrolmentLocalId>2020_8001_HR6_ST1000001</StudentTeachingGroupEnrolmentLocalId>\n    <Student>\n      <LocalId>ST1000001</LocalId>\n      <NationalStudentNumber>9001000001</NationalStudentNumber>\n      <YearLevel>6</YearLevel>\n    </Student>\n    <Organisation>\n      <RefId>8001</RefId>\n    </Organisation>\n    <Status>A</Status>\n    <TeachingGroup>\n      <LocalId>2020_8001_HR6</LocalId>\n    </TeachingGroup>\n    <StartDate>2020-01-27</StartDate>\n  </StudentTeachingGroupEnrolment>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "StudentTeachingGroupEnrolmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-studentPersonalObjectReference": "Student",
        "x-teachingGroupObjectReference": "TeachingGroup",
        "x-statusField": "Status",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "get": {
        "tags": [
          "StudentTeachingGroupEnrolment"
        ],
        "summary": "Retrieve one or more StudentTeachingGroupEnrolments",
        "description": "<p>Bulk operation to retrieve all available records of students' arrival at and departure from TeachingGroups at the given Provider.</p>",
        "operationId": "getStudentTeachingGroupEnrolments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/statusIA"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-statusField": "Status",
        "x-statusActive": "NZCodeSetsStudentTeachingGroupEnrolmentStatus.AEnum",
        "x-statusInActive": "NZCodeSetsStudentTeachingGroupEnrolmentStatus.IEnum",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "put": {
        "tags": [
          "StudentTeachingGroupEnrolment"
        ],
        "summary": "Update one or more StudentTeachingGroupEnrolments",
        "description": "<p>Bulk operation to update one or more records of students' arrival at and departure from TeachingGroups at the given Provider.</p>",
        "operationId": "updateStudentTeachingGroupEnrolments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentTeachingGroupEnrolment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentteachinggroupenrolment/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentteachinggroupenrolment/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns update objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentTeachingGroupEnrolmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-studentPersonalObjectReference": "Student",
        "x-teachingGroupObjectReference": "TeachingGroup",
        "x-statusField": "Status",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "patch": {
        "tags": [
          "StudentTeachingGroupEnrolment"
        ],
        "summary": "Patch one or more StudentTeachingGroupEnrolments",
        "description": "<p>Bulk operation to update one or more fields of one or more records of students'  arrival at and departure from TeachingGroups at the given Provider.</p>",
        "operationId": "patchStudentTeachingGroupEnrolments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentTeachingGroupEnrolment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentPATCHList"
              },
              "example": {
                "StudentTeachingGroupEnrolments": {
                  "StudentTeachingGroupEnrolment": [
                    {
                      "StudentTeachingGroupEnrolmentLocalId": "2020_8001_HR6_ST1000001",
                      "Student": {
                        "LocalId": "ST1000001",
                        "NationalStudentNumber": "9001000001",
                        "YearLevel": 6
                      },
                      "Organisation": {
                        "RefId": "8001"
                      },
                      "TeachingGroup": {
                        "LocalId": "2020_8001_HR6"
                      },
                      "StartDate": "2020-01-27T00:00:00+1200"
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentteachinggroupenrolment/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentTeachingGroupEnrolmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-studentPersonalObjectReference": "Student",
        "x-teachingGroupObjectReference": "TeachingGroup",
        "x-statusField": "Status",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      }
    },
    "/studentteachinggroupenrolment/{studentTeachingGroupEnrolmentRefId}": {
      "get": {
        "tags": [
          "StudentTeachingGroupEnrolment"
        ],
        "summary": "Retrieve a single StudentTeachingGroupEnrolment",
        "description": "<p>Retrieve a particular record of a student's arrival at and departure from a TeachingGroup at the given Provider.</p>",
        "operationId": "getStudentTeachingGroupEnrolment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentTeachingGroupEnrolmentRefId",
            "in": "path",
            "description": "<p>The SIF GUID for the particular record of a student's  arrival at and departure from a particualr TeachingGroup at the given Provider.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATE"
                },
                "example": {
                  "StudentTeachingGroupEnrolment": {
                    "StudentTeachingGroupEnrolmentLocalId": "2020_8001_HR6_ST1000001",
                    "Student": {
                      "LocalId": "ST1000001",
                      "NationalStudentNumber": "9001000001",
                      "YearLevel": 6
                    },
                    "Organisation": {
                      "RefId": "8001"
                    },
                    "Status": "A",
                    "TeachingGroup": {
                      "LocalId": "2020_8001_HR6"
                    },
                    "StartDate": "2020-01-27T00:00:00+1200",
                    "RecordAudit": {
                      "CreatedDateTime": "2020-05-26T00:00:00+1200",
                      "LastUpdatedDateTime": "2020-05-26T00:00:00+1200"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATE"
                },
                "example": "<StudentTeachingGroupEnrolment>\n  <StudentTeachingGroupEnrolmentLocalId>2020_8001_HR6_ST1000001</StudentTeachingGroupEnrolmentLocalId>\n  <Student>\n    <LocalId>ST1000001</LocalId>\n    <NationalStudentNumber>9001000001</NationalStudentNumber>\n    <YearLevel>6</YearLevel>\n  </Student>\n  <Organisation>\n    <RefId>8001</RefId>\n  </Organisation>\n  <Status>A</Status>\n  <TeachingGroup>\n    <LocalId>2020_8001_HR6</LocalId>\n  </TeachingGroup>\n  <StartDate>2020-01-27</StartDate>\n</StudentTeachingGroupEnrolment>  "
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-statusField": "Status",
        "x-statusActive": "NZCodeSetsStudentTeachingGroupEnrolmentStatus.AEnum",
        "x-statusInActive": "NZCodeSetsStudentTeachingGroupEnrolmentStatus.IEnum",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "put": {
        "tags": [
          "StudentTeachingGroupEnrolment"
        ],
        "summary": "Update a single StudentTeachingGroupEnrolment",
        "description": "<p>Update a particular record of a student's arrival at and departure from a TeachingGroup at the given Provider.</p>",
        "operationId": "updateStudentTeachingGroupEnrolment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentTeachingGroupEnrolmentRefId",
            "in": "path",
            "description": "<p>The SIF GUID for the particular record of a student's  arrival at and departure from a particualr TeachingGroup at the given Provider.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentTeachingGroupEnrolment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentteachinggroupenrolment~1%7BstudentTeachingGroupEnrolmentRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentteachinggroupenrolment~1%7BstudentTeachingGroupEnrolmentRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment~1%7BstudentTeachingGroupEnrolmentRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment~1%7BstudentTeachingGroupEnrolmentRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-studentPersonalObjectReference": "Student",
        "x-teachingGroupObjectReference": "TeachingGroup",
        "x-statusField": "Status",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      },
      "patch": {
        "tags": [
          "StudentTeachingGroupEnrolment"
        ],
        "summary": "Patch a single StudentTeachingGroupEnrolment",
        "description": "<p>Update one or more fields of a particular record of a student's arrival at and departure from a TeachingGroup at the given Provider.</p>",
        "operationId": "patchStudentTeachingGroupEnrolment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentTeachingGroupEnrolmentRefId",
            "in": "path",
            "description": "<p>The SIF GUID for the particular record of a student's  arrival at and departure from a particualr TeachingGroup at the given Provider.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentTeachingGroupEnrolment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentPATCH"
              },
              "example": {
                "StudentTeachingGroupEnrolment": {
                  "StudentTeachingGroupEnrolmentLocalId": "2020_8001_HR6_ST1000001",
                  "Student": {
                    "LocalId": "ST1000001",
                    "NationalStudentNumber": "9001000001",
                    "YearLevel": 6
                  },
                  "Organisation": {
                    "RefId": "8001"
                  },
                  "TeachingGroup": {
                    "LocalId": "2020_8001_HR6"
                  },
                  "StartDate": "2020-01-27T00:00:00+1200"
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentteachinggroupenrolment~1%7BstudentTeachingGroupEnrolmentRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment~1%7BstudentTeachingGroupEnrolmentRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment~1%7BstudentTeachingGroupEnrolmentRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-studentPersonalObjectReference": "Student",
        "x-teachingGroupObjectReference": "TeachingGroup",
        "x-statusField": "Status",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      }
    },
    "/studentpersonal/{studentPersonalRefId}/studentteachinggroupenrolment": {
      "get": {
        "tags": [
          "StudentTeachingGroupEnrolment"
        ],
        "summary": "Retrieve StudentTeachingGroupEnrolments by Student",
        "description": "<p>Retrieve all available records of a particular student's arrival at and departure from any TeachingGroups at the given Provider.</p>",
        "operationId": "getStudentTeachingGroupEnrolmentByStudent",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/studentPersonalRefId"
          },
          {
            "$ref": "#/components/parameters/statusIA"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-byEntity": "ByStudentPersonal",
        "x-isBulk": true,
        "x-isSingle": false,
        "x-statusField": "Status",
        "x-statusActive": "NZCodeSetsStudentTeachingGroupEnrolmentStatus.AEnum",
        "x-statusInActive": "NZCodeSetsStudentTeachingGroupEnrolmentStatus.IEnum",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      }
    },
    "/teachinggroup/{teachingGroupRefId}/studentteachinggroupenrolment": {
      "get": {
        "tags": [
          "StudentTeachingGroupEnrolment"
        ],
        "summary": "Retrieve StudentTeachingGroupEnrolments by TeachingGroup",
        "description": "<p>Retrieve all available records of any student's arrival at and departure from a particular TeachingGroup at the given Provider.</p>",
        "operationId": "getStudentTeachingGroupEnrolmentByTeachingGroup",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/teachingGroupRefId"
          },
          {
            "$ref": "#/components/parameters/statusIA"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentTeachingGroupEnrolmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentteachinggroupenrolment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-byEntity": "ByTeachingGroup",
        "x-isBulk": true,
        "x-isSingle": false,
        "x-statusField": "Status",
        "x-statusActive": "NZCodeSetsStudentTeachingGroupEnrolmentStatus.AEnum",
        "x-statusInActive": "NZCodeSetsStudentTeachingGroupEnrolmentStatus.IEnum",
        "x-statusStartDate": "StartDate",
        "x-statusEndDate": "EndDate"
      }
    },
    "/schedule/{scheduleRefId}/scheduleperiod": {
      "post": {
        "tags": [
          "SchedulePeriod"
        ],
        "summary": "Create one or more timetable Schedule Periods",
        "description": "Bulk operation to create one or more timetable SchedulePeriods within the scope of a particular timetable <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "createSchedulePeriods",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on SchedulePeriod",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePeriodCREATEList"
              },
              "example": {
                "SchedulePeriods": {
                  "SchedulePeriod": [
                    {
                      "SchedulePeriodLocalId": "8003_HR",
                      "PeriodName": "Homeroom",
                      "Organisation": {
                        "RefId": "8003"
                      },
                      "Schedule": {
                        "LocalId": "8003_Sched_2020"
                      }
                    },
                    {
                      "SchedulePeriodLocalId": "8003_P1",
                      "PeriodName": "Period 1",
                      "Organisation": {
                        "RefId": "8003"
                      },
                      "Schedule": {
                        "LocalId": "8003_Sched_2020"
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePeriodCREATEList"
              },
              "example": "<SchedulePeriods>\n  <SchedulePeriod>\n    <SchedulePeriodLocalId>8003_HR</SchedulePeriodLocalId>\n    <PeriodName>Homeroom</PeriodName>\n    <Organisation>\n      <RefId>8003</RefId>\n    </Organisation>\n    <Schedule>\n      <LocalId>8003_Sched_2020<LocalId>\n    </Schedule>\n  </SchedulePeriod>\n  <SchedulePeriod>\n    <SchedulePeriodLocalId>8003_P1</SchedulePeriodLocalId>\n    <PeriodName>Period 1</PeriodName>\n    <Organisation>\n      <RefId>8003</RefId>\n    </Organisation>\n    <Schedule>\n      <LocalId>8003_Sched_2020</LocalId>\n    </Schedule>\n  </SchedulePeriod>\n</SchedulePeriods>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodErrorList"
                },
                "example": [
                  {
                    "SchedulePeriod": {
                      "SchedulePeriodLocalId": "8003_HR",
                      "PeriodName": "Homeroom",
                      "Organisation": {
                        "RefId": "8003"
                      },
                      "Schedule": {
                        "LocalId": "8003_Sched_2020"
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodErrorList"
                },
                "example": "<Response>\n  <SchedulePeriod>\n    <SchedulePeriodLocalId>8003_HR</SchedulePeriodLocalId>\n    <PeriodName>Homeroom</PeriodName>\n    <Organisation>\n      <RefId>8003</RefId>\n    </Organisation>\n    <Schedule>\n      <LocalId>8003_Sched_2020<LocalId>\n    </Schedule>\n  </SchedulePeriod>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "SchedulePeriodErrorList"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "get": {
        "tags": [
          "SchedulePeriod"
        ],
        "summary": "Retrieve one or more timetable Schedule Periods",
        "description": "Bulk operation to create one or more timetable SchedulePeriods within the scope of a particular timetable <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "getSchedulePeriods",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-isScheduleEntity": true
      },
      "put": {
        "tags": [
          "SchedulePeriod"
        ],
        "summary": "Update one or more timetable Schedule Periods",
        "description": "Bulk operation to update one or more timetable SchedulePeriods within the scope of a particular timetable <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "updateSchedulePeriods",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on SchedulePeriod",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePeriodCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePeriodCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "SchedulePeriodErrorList"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "SchedulePeriod"
        ],
        "summary": "Patch one or more timetable Schedule Periods",
        "description": "Bulk operation to update one or more fields of one or more timetable SchedulePeriods within the scope of a particular timetable <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "patchSchedulePeriods",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on SchedulePeriod",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePeriodPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePeriodPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "SchedulePeriodErrorList"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/schedule/{scheduleRefId}/scheduleperiod/{schedulePeriodRefId}": {
      "get": {
        "tags": [
          "SchedulePeriod"
        ],
        "summary": "Retrieve a single timetable Schedule Period",
        "description": "Retrieve a single timetable SchedulePeriod within within the scope of a particular timetable <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "getSchedulePeriod",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          },
          {
            "name": "schedulePeriodRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify this Schedule Period.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodCREATE"
                },
                "example": {
                  "SchedulePeriod": {
                    "SchedulePeriodLocalId": "8003_HR",
                    "PeriodName": "Homeroom",
                    "Organisation": {
                      "RefId": "8003"
                    },
                    "Schedule": {
                      "LocalId": "8003_Sched_2020"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodCREATE"
                },
                "example": "<SchedulePeriod>\n  <SchedulePeriodLocalId>8003_HR</SchedulePeriodLocalId>\n  <PeriodName>Homeroom</PeriodName>\n  <Organisation>\n    <RefId>8003</RefId>\n  </Organisation>\n  <Schedule>\n    <LocalId>8003_Sched_2020<LocalId>\n  </Schedule>\n</SchedulePeriod>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "SchedulePeriod"
        ],
        "summary": "Update a single timetable Schedule Period",
        "description": "Update a single timetable SchedulePeriod within the scope of a particular timetable <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "updateSchedulePeriod",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          },
          {
            "name": "schedulePeriodRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify this Schedule Period.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on SchedulePeriod",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePeriodCREATE"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod~1%7BschedulePeriodRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePeriodCREATE"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod~1%7BschedulePeriodRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod~1%7BschedulePeriodRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod~1%7BschedulePeriodRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "SchedulePeriod"
        ],
        "summary": "Patch a single timetable Schedule Period",
        "description": "Update one or more fields of a single timetable SchedulePeriod within the scope of a particular timetable <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "patchSchedulePeriod",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          },
          {
            "name": "schedulePeriodRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify this Schedule Period.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on SchedulePeriod",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePeriodPATCH"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod~1%7BschedulePeriodRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePeriodPATCH"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod~1%7BschedulePeriodRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod~1%7BschedulePeriodRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleperiod~1%7BschedulePeriodRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/schedule": {
      "post": {
        "tags": [
          "Schedule"
        ],
        "summary": "Create one or more timetable Schedules",
        "description": "Bulk operation to create one or more timetable Schedules within the scope of a given Provider",
        "operationId": "createSchedules",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on Schedule",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleCREATEList"
              },
              "example": {
                "Schedules": {
                  "Schedule": [
                    {
                      "ScheduleLocalId": "8003_Sched_2020",
                      "ScheduleName": "Koromiko High Schedule - 2020",
                      "StartDate": "2020-01-27T00:00:00+1200",
                      "EndDate": "2020-12-18T00:00:00+1200",
                      "Organisation": {
                        "RefId": "8003"
                      },
                      "AcademicDayList": {
                        "AcademicDay": [
                          {
                            "LocalId": "8003_Day_A",
                            "BellSchedule": {
                              "LocalId": "8003_Regular"
                            },
                            "PeriodList": {
                              "Period": [
                                {
                                  "LocalId": "8003_HR"
                                },
                                {
                                  "LocalId": "8003_P1"
                                },
                                {
                                  "LocalId": "8003_P2"
                                },
                                {
                                  "LocalId": "8003_P3"
                                },
                                {
                                  "LocalId": "8003_P4"
                                },
                                {
                                  "LocalId": "8003_P5"
                                }
                              ]
                            }
                          },
                          {
                            "LocalId": "8003_Day_B",
                            "BellSchedule": {
                              "LocalId": "8003_Regular"
                            },
                            "PeriodList": {
                              "Period": [
                                {
                                  "LocalId": "8003_HR"
                                },
                                {
                                  "LocalId": "8003_P1"
                                },
                                {
                                  "LocalId": "8003_P2"
                                },
                                {
                                  "LocalId": "8003_P3"
                                },
                                {
                                  "LocalId": "8003_P4"
                                },
                                {
                                  "LocalId": "8003_P5"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleCREATEList"
              },
              "example": "<Schedules>\n  <Schedule>\n    <ScheduleLocalId>8003_Sched_2020</ScheduleLocalId>\n    <ScheduleName>Koromiko High Schedule - 2020</ScheduleName>\n    <StartDate>2020-01-27</StartDate>\n    <EndDate>2020-12-18</EndDate>\n    <Organisation>\n      <RefId>8003</RefId>\n    </Organisation>\n    <AcademicDayList>\n      <AcademicDay>\n        <LocalId>8003_Day_A</LocalId>\n        <BellSchedule>\n          <LocalId>8003_Regular</LocalId>\n        </BellSchedule\n        <PeriodList>\n          <Period>\n            <LocalId>8003_HR</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P1</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P2</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P3</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P4</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P5</LocalId>\n          </Period>\n        </PeriodList>\n      </AcademicDay>\n      <AcademicDay>\n        <LocalId>8003_Day_B</LocalId>\n        <BellSchedule>\n          <LocalId>8003_Regular</LocalId>\n        </BellSchedule>\n        <PeriodList>\n          <Period>\n            <LocalId>8003_HR</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P1</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P2</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P3</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P4</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P5</LocalId>\n          </Period>\n        </PeriodList>            \n      </AcademicDay>\n    </AcademicDayList>\n  </Schedule>\n</Schedules>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleErrorList"
                },
                "example": [
                  {
                    "Schedule": {
                      "ScheduleLocalId": "8003_Sched_2020",
                      "ScheduleName": "Koromiko High Schedule - 2020",
                      "StartDate": "2020-01-27T00:00:00+1200",
                      "EndDate": "2020-12-18T00:00:00+1200",
                      "Organisation": {
                        "RefId": "8003"
                      },
                      "AcademicDayList": {
                        "AcademicDay": [
                          {
                            "LocalId": "8003_Day_A",
                            "BellSchedule": {
                              "LocalId": "8003_Regular"
                            },
                            "PeriodList": {
                              "Period": [
                                {
                                  "LocalId": "8003_HR"
                                },
                                {
                                  "LocalId": "8003_P1"
                                },
                                {
                                  "LocalId": "8003_P2"
                                },
                                {
                                  "LocalId": "8003_P3"
                                },
                                {
                                  "LocalId": "8003_P4"
                                },
                                {
                                  "LocalId": "8003_P5"
                                }
                              ]
                            }
                          },
                          {
                            "LocalId": "8003_Day_B",
                            "BellSchedule": {
                              "LocalId": "8003_Regular"
                            },
                            "PeriodList": {
                              "Period": [
                                {
                                  "LocalId": "8003_HR"
                                },
                                {
                                  "LocalId": "8003_P1"
                                },
                                {
                                  "LocalId": "8003_P2"
                                },
                                {
                                  "LocalId": "8003_P3"
                                },
                                {
                                  "LocalId": "8003_P4"
                                },
                                {
                                  "LocalId": "8003_P5"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleErrorList"
                },
                "example": "<Response>\n  <Schedule>\n    <ScheduleLocalId>8003_Sched_2020</ScheduleLocalId>\n    <ScheduleName>Koromiko High Schedule - 2020</ScheduleName>\n    <StartDate>2020-01-27</StartDate>\n    <EndDate>2020-12-18</EndDate>\n    <Organisation>\n      <RefId>8003</RefId>\n    </Organisation>\n    <AcademicDayList>\n      <AcademicDay>\n        <LocalId>8003_Day_A</LocalId>\n        <BellSchedule>\n          <LocalId>8003_Regular</LocalId>\n        </BellSchedule\n        <PeriodList>\n          <Period>\n            <LocalId>8003_HR</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P1</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P2</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P3</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P4</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P5</LocalId>\n          </Period>\n        </PeriodList>\n      </AcademicDay>\n      <AcademicDay>\n        <LocalId>8003_Day_B</LocalId>\n        <BellSchedule>\n          <LocalId>8003_Regular</LocalId>\n        </BellSchedule>\n        <PeriodList>\n          <Period>\n            <LocalId>8003_HR</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P1</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P2</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P3</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P4</LocalId>\n          </Period>\n          <Period>\n            <LocalId>8003_P5</LocalId>\n          </Period>\n        </PeriodList>            \n      </AcademicDay>\n    </AcademicDayList>\n  </Schedule> \n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>        \n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "ScheduleErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Retrieve one or more timetable Schedules",
        "description": "Bulk operation to retrieve all available timetable Schedules within the scope of a given Provider",
        "operationId": "getSchedules",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "Schedule"
        ],
        "summary": "Update one or more timetable Schedules",
        "description": "Bulk operation to update one or more timetable Schedules within the scope of a given Provider",
        "operationId": "updateSchedules",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on Schedule",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1schedule/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1schedule/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "ScheduleErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "Schedule"
        ],
        "summary": "Patch one or more timetable Schedules",
        "description": "Bulk operation to update one or more fields of one or more timetable Schedules within the scope of a given Provider",
        "operationId": "patchSchedules",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on Schedule",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePATCHList"
              },
              "example": {
                "$ref": "#/paths/~1schedule/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePATCHList"
              },
              "example": {
                "$ref": "#/paths/~1schedule/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "ScheduleErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/schedule/{scheduleRefId}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Retrieve a single timetable Schedule",
        "description": "Retrieve a particular timetable Schedule within the scope of a given Provider",
        "operationId": "getSchedule",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "scheduleRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify the requested timetable Schedule.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCREATE"
                },
                "example": {
                  "Schedule": {
                    "ScheduleLocalId": "8003_Sched_2020",
                    "ScheduleName": "Koromiko High Schedule - 2020",
                    "StartDate": "2020-01-27T00:00:00+1200",
                    "EndDate": "2020-12-18T00:00:00+1200",
                    "Organisation": {
                      "RefId": "8003"
                    },
                    "AcademicDayList": {
                      "AcademicDay": [
                        {
                          "LocalId": "8003_Day_A",
                          "BellSchedule": {
                            "LocalId": "8003_Regular"
                          },
                          "PeriodList": {
                            "Period": [
                              {
                                "LocalId": "8003_HR"
                              },
                              {
                                "LocalId": "8003_P1"
                              },
                              {
                                "LocalId": "8003_P2"
                              },
                              {
                                "LocalId": "8003_P3"
                              },
                              {
                                "LocalId": "8003_P4"
                              },
                              {
                                "LocalId": "8003_P5"
                              }
                            ]
                          }
                        },
                        {
                          "LocalId": "8003_Day_B",
                          "BellSchedule": {
                            "LocalId": "8003_Regular"
                          },
                          "PeriodList": {
                            "Period": [
                              {
                                "LocalId": "8003_HR"
                              },
                              {
                                "LocalId": "8003_P1"
                              },
                              {
                                "LocalId": "8003_P2"
                              },
                              {
                                "LocalId": "8003_P3"
                              },
                              {
                                "LocalId": "8003_P4"
                              },
                              {
                                "LocalId": "8003_P5"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCREATE"
                },
                "example": "<Schedule>\n  <ScheduleLocalId>8003_Sched_2020</ScheduleLocalId>\n  <ScheduleName>Koromiko High Schedule - 2020</ScheduleName>\n  <StartDate>2020-01-27</StartDate>\n  <EndDate>2020-12-18</EndDate>\n  <Organisation>\n    <RefId>8003</RefId>\n  </Organisation>\n  <AcademicDayList>\n    <AcademicDay>\n      <LocalId>8003_Day_A</LocalId>\n      <BellSchedule>\n        <LocalId>8003_Regular</LocalId>\n      </BellSchedule\n      <PeriodList>\n        <Period>\n          <LocalId>8003_HR</LocalId>\n        </Period>\n        <Period>\n          <LocalId>8003_P1</LocalId>\n        </Period>\n        <Period>\n          <LocalId>8003_P2</LocalId>\n        </Period>\n        <Period>\n          <LocalId>8003_P3</LocalId>\n        </Period>\n        <Period>\n          <LocalId>8003_P4</LocalId>\n        </Period>\n        <Period>\n          <LocalId>8003_P5</LocalId>\n        </Period>\n      </PeriodList>\n    </AcademicDay>\n    <AcademicDay>\n      <LocalId>8003_Day_B</LocalId>\n      <BellSchedule>\n        <LocalId>8003_Regular</LocalId>\n      </BellSchedule>\n      <PeriodList>\n        <Period>\n          <LocalId>8003_HR</LocalId>\n        </Period>\n        <Period>\n          <LocalId>8003_P1</LocalId>\n        </Period>\n        <Period>\n          <LocalId>8003_P2</LocalId>\n        </Period>\n        <Period>\n          <LocalId>8003_P3</LocalId>\n        </Period>\n        <Period>\n          <LocalId>8003_P4</LocalId>\n        </Period>\n        <Period>\n          <LocalId>8003_P5</LocalId>\n        </Period>\n      </PeriodList>            \n    </AcademicDay>\n  </AcademicDayList>\n</Schedule> "
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "Schedule"
        ],
        "summary": "Update a single timetable Schedule",
        "description": "Update a particular timetable Schedule within the scope of a given Provider",
        "operationId": "updateSchedule",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "scheduleRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify the requested timetable Schedule.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on Schedule",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleCREATE"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleCREATE"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "Schedule"
        ],
        "summary": "Patch a single timetable Schedule",
        "description": "Update one or more fields of a particular timetable Schedule within the scope of a given Provider",
        "operationId": "patchSchedule",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "scheduleRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify the requested timetable Schedule.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on Schedule",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePATCH"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePATCH"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/schedule/{scheduleRefId}/scheduleacademicday": {
      "post": {
        "tags": [
          "ScheduleAcademicDay"
        ],
        "summary": "Create one or more timetable Schedule AcademicDays",
        "description": "Bulk operation to create one or more ScheduleAcademicDays within the scope of a particular timetable <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "createScheduleAcademicDays",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on ScheduleAcademicDay",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleAcademicDayCREATEList"
              },
              "example": {
                "ScheduleAcademicDays": {
                  "ScheduleAcademicDay": [
                    {
                      "ScheduleAcademicDayLocalId": "8003_Day_A",
                      "AcademicDayName": "Day A",
                      "Organisation": {
                        "RefId": "8003"
                      },
                      "Schedule": {
                        "LocalId": "8003_Sched_2020"
                      },
                      "BellSchedule": {
                        "LocalId": "8003_Regular"
                      },
                      "PeriodList": {
                        "Period": [
                          {
                            "LocalId": "8003_HR"
                          },
                          {
                            "LocalId": "8003_P1"
                          },
                          {
                            "LocalId": "8003_P2"
                          },
                          {
                            "LocalId": "8003_P3"
                          },
                          {
                            "LocalId": "8003_P4"
                          },
                          {
                            "LocalId": "8003_P5"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleAcademicDayCREATEList"
              },
              "example": "<ScheduleAcademicDays> \n  <ScheduleAcademicDay>\n    <ScheduleAcademicDayLocalId>8003_Day_A</ScheduleAcademicDayLocalId>\n    <AcademicDayName>Day A</AcademicDayName>\n    <Organisation>\n      <RefId>8003</RefId>\n    </Organisation>\n    <Schedule>\n      <LocalId>8003_Sched_2020</LocalId>\n    </Schedule>\n    <BellSchedule>\n      <LocalId>8003_Regular</LocalId>\n    </BellSchedule>\n    <PeriodList>\n      <Period>\n        <LocalId>8003_HR</LocalId>\n      </Period>\n      <Period>\n        <LocalId>8003_P1</LocalId>\n      </Period>\n      <Period>\n        <LocalId>8003_P2</LocalId>\n      </Period>\n      <Period>\n        <LocalId>8003_P3</LocalId>\n      </Period>\n      <Period>\n        <LocalId>8003_P4</LocalId>\n      </Period>\n      <Period>\n        <LocalId>8003_P5</LocalId>\n      </Period>\n    </PeriodList>\n  </ScheduleAcademicDay>\n  <ScheduleAcademicDay>\n    <ScheduleAcademicDayLocalId>8003_Day_B</ScheduleAcademicDayLocalId>\n    <AcademicDayName>Day B</AcademicDayName>\n    <Organisation>\n      <RefId>8003</RefId>\n    </Organisation>\n    <Schedule>\n      <LocalId>8003_Sched_2020</LocalId>\n    </Schedule>\n    <BellSchedule>\n      <LocalId>8003_Regular</LocalId>\n    </BellSchedule>\n    <PeriodList>\n      <Period>\n        <LocalId>8003_HR</LocalId>\n      </Period>\n      <Period>\n        <LocalId>8003_P1</LocalId>\n      </Period>\n      <Period>\n        <LocalId>8003_P2</LocalId>\n      </Period>\n      <Period>\n        <LocalId>8003_P3</LocalId>\n      </Period>\n      <Period>\n        <LocalId>8003_P4</LocalId>\n      </Period>\n      <Period>\n        <LocalId>8003_P5</LocalId>\n      </Period>\n    </PeriodList>\n  </ScheduleAcademicDay>\n</ScheduleAcademicDays>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayErrorList"
                },
                "example": [
                  {
                    "ScheduleAcademicDay": {
                      "ScheduleAcademicDayLocalId": "8003_Day_A",
                      "AcademicDayName": "Day A",
                      "Organisation": {
                        "RefId": "8003"
                      },
                      "Schedule": {
                        "LocalId": "8003_Sched_2020"
                      },
                      "BellSchedule": {
                        "LocalId": "8003_Regular"
                      },
                      "PeriodList": {
                        "Period": [
                          {
                            "LocalId": "8003_HR"
                          },
                          {
                            "LocalId": "8003_P1"
                          },
                          {
                            "LocalId": "8003_P2"
                          },
                          {
                            "LocalId": "8003_P3"
                          },
                          {
                            "LocalId": "8003_P4"
                          },
                          {
                            "LocalId": "8003_P5"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayErrorList"
                },
                "example": "<Response>\n  <ScheduleAcademicDay>\n    <ScheduleAcademicDayLocalId>8003_Day_A</ScheduleAcademicDayLocalId>\n    <AcademicDayName>Day A</AcademicDayName>\n    <Organisation>\n      <RefId>8003</RefId>\n    </Organisation>\n    <Schedule>\n      <LocalId>8003_Sched_2020</LocalId>\n    </Schedule>\n    <BellSchedule>\n      <LocalId>8003_Regular</LocalId>\n    </BellSchedule>\n    <PeriodList>\n      <Period>\n        <LocalId>8003_HR</LocalId>\n      </Period>\n      <Period>\n        <LocalId>8003_P1</LocalId>\n      </Period>\n      <Period>\n        <LocalId>8003_P2</LocalId>\n      </Period>\n      <Period>\n        <LocalId>8003_P3</LocalId>\n      </Period>\n      <Period>\n        <LocalId>8003_P4</LocalId>\n      </Period>\n      <Period>\n        <LocalId>8003_P5</LocalId>\n      </Period>\n    </PeriodList>\n  </ScheduleAcademicDay>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "ScheduleAcademicDayErrorList"
          }
        },
        "x-isScheduleEntity": false,
        "x-isSubObject": true,
        "x-parentObject": "Schedule",
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "get": {
        "tags": [
          "ScheduleAcademicDay"
        ],
        "summary": "Retrieve one or more timetable Schedule AcademicDays",
        "description": "Bulk operation to retrieve all available timetable Schedule AcademicDays in a particular timetable <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "getScheduleAcademicDays",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isScheduleEntity": false,
        "x-isSubObject": true,
        "x-parentObject": "Schedule",
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "ScheduleAcademicDay"
        ],
        "summary": "Update one or more timetable Schedule AcademicDays",
        "description": "Bulk operation to update one or more timetable Schedule AcademicDays in a particular timetable <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "updateScheduleAcademicDays",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on ScheduleAcademicDay",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleAcademicDayCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleAcademicDayCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "ScheduleAcademicDayErrorList"
          }
        },
        "x-isScheduleEntity": false,
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "ScheduleAcademicDay"
        ],
        "summary": "Patch one or more timetable Schedule AcademicDays",
        "description": "Default operation to update one or more fields of one or more timetable Schedule AcademicDays  in a particular timetable <a href=\"#tag/Schedule\">Schedule</a> at the given Provider ",
        "operationId": "patchScheduleAcademicDays",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on ScheduleAcademicDay",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleAcademicDayPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleAcademicDayPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "ScheduleAcademicDayErrorList"
          }
        },
        "x-isScheduleEntity": false,
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/schedule/{scheduleRefId}/scheduleacademicday/{scheduleAcademicDayRefId}": {
      "get": {
        "tags": [
          "ScheduleAcademicDay"
        ],
        "summary": "Retrieve a single timetable Schedule AcademicDay",
        "description": "Retrieve a single timetable Schedule AcademicDay in a particular timetable <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "getScheduleAcademicDay",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          },
          {
            "name": "scheduleAcademicDayRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify this Academic Day.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayCREATE"
                },
                "example": {
                  "ScheduleAcademicDay": {
                    "ScheduleAcademicDayLocalId": "8003_Day_A",
                    "AcademicDayName": "Day A",
                    "Organisation": {
                      "RefId": "8003"
                    },
                    "Schedule": {
                      "LocalId": "8003_Sched_2020"
                    },
                    "BellSchedule": {
                      "LocalId": "8003_Regular"
                    },
                    "PeriodList": {
                      "Period": [
                        {
                          "LocalId": "8003_HR"
                        },
                        {
                          "LocalId": "8003_P1"
                        },
                        {
                          "LocalId": "8003_P2"
                        },
                        {
                          "LocalId": "8003_P3"
                        },
                        {
                          "LocalId": "8003_P4"
                        },
                        {
                          "LocalId": "8003_P5"
                        }
                      ]
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayCREATE"
                },
                "example": "<ScheduleAcademicDay>\n  <ScheduleAcademicDayLocalId>8003_Day_A</ScheduleAcademicDayLocalId>\n  <AcademicDayName>Day A</AcademicDayName>\n  <Organisation>\n    <RefId>8003</RefId>\n  </Organisation>\n  <Schedule>\n    <LocalId>8003_Sched_2020</LocalId>\n  </Schedule>\n  <BellSchedule>\n    <LocalId>8003_Regular</LocalId>\n  </BellSchedule>\n  <PeriodList>\n    <Period>\n      <LocalId>8003_HR</LocalId>\n    </Period>\n    <Period>\n      <LocalId>8003_P1</LocalId>\n    </Period>\n    <Period>\n      <LocalId>8003_P2</LocalId>\n    </Period>\n    <Period>\n      <LocalId>8003_P3</LocalId>\n    </Period>\n    <Period>\n      <LocalId>8003_P4</LocalId>\n    </Period>\n    <Period>\n      <LocalId>8003_P5</LocalId>\n    </Period>\n  </PeriodList>\n</ScheduleAcademicDay>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isScheduleEntity": false,
        "x-isSubObject": true,
        "x-parentObject": "Schedule",
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "ScheduleAcademicDay"
        ],
        "summary": "Update a single timetable Schedule AcademicDay",
        "description": "Update a single timetable Schedule AcademicDay in a particular timetable <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "updateScheduleAcademicDay",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          },
          {
            "name": "scheduleAcademicDayRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify this Academic Day.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on ScheduleAcademicDay",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleAcademicDayCREATE"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday~1%7BscheduleAcademicDayRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleAcademicDayCREATE"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday~1%7BscheduleAcademicDayRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday~1%7BscheduleAcademicDayRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday~1%7BscheduleAcademicDayRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isScheduleEntity": false,
        "x-isSubObject": true,
        "x-parentObject": "Schedule",
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "ScheduleAcademicDay"
        ],
        "summary": "Patch a single timetable Schedule AcademicDay",
        "description": "Update some fields of a single timetable Schedule AcademicDay in a particular timetable <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "patchScheduleAcademicDay",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          },
          {
            "name": "scheduleAcademicDayRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify this Academic Day.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on ScheduleAcademicDay",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleAcademicDayPATCH"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday~1%7BscheduleAcademicDayRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleAcademicDayPATCH"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday~1%7BscheduleAcademicDayRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday~1%7BscheduleAcademicDayRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAcademicDayCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduleacademicday~1%7BscheduleAcademicDayRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isScheduleEntity": false,
        "x-isSubObject": true,
        "x-parentObject": "Schedule",
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/schedule/{scheduleRefId}/bellschedule": {
      "post": {
        "tags": [
          "BellSchedule"
        ],
        "summary": "Create one or more BellSchedules",
        "description": "<p>Bulk operation to create one or more BellSchedules, which define when the  bells ring for the start and end of the <a href=\"#tag/SchedulePeriod\">SchedulePeriods</a> at the given Provider.</p>",
        "operationId": "createBellSchedules",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on BellSchedule",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BellScheduleCREATEList"
              },
              "example": {
                "BellSchedules": {
                  "BellSchedule": [
                    {
                      "BellScheduleRefId": "d2f4aea9-564f-4bdf-a18e-42a111a0602c",
                      "BellScheduleLocalId": "2019a-Normal",
                      "BellScheduleName": "Schedule 2019a, Normal Bell Schedule",
                      "Organisation": {
                        "RefId": "9651",
                        "Name": "Hogwarts High"
                      },
                      "Schedule": {
                        "RefId": "3d389610-b650-44a7-9669-db86b3e83004",
                        "Name": "Schedule 2019a (Term 1)"
                      },
                      "SchedulePeriodList": {
                        "SchedulePeriodTime": [
                          {
                            "Period": {
                              "RefId": "215f796c-67f7-4855-83dc-28ad9d002830",
                              "LocalId": "2019a-A1",
                              "Name": "Period 1 on Day A"
                            },
                            "StartTime": "08:45:00",
                            "EndTime": "09:35:00"
                          },
                          {
                            "Period": {
                              "RefId": "1c48a0bb-a6cc-41ab-8aae-929ce5ec9c34",
                              "LocalId": "2019a-A2",
                              "Name": "Period 2 on Day A"
                            },
                            "StartTime": "09:45:00",
                            "EndTime": "10:35:00"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BellScheduleCREATEList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleCREATEList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleErrorList"
                },
                "example": [
                  {
                    "BellSchedule": {
                      "BellScheduleRefId": "d2f4aea9-564f-4bdf-a18e-42a111a0602c",
                      "BellScheduleLocalId": "2019a-Normal",
                      "BellScheduleName": "Schedule 2019a, Normal Bell Schedule",
                      "Organisation": {
                        "RefId": "9651",
                        "Name": "Hogwarts High"
                      },
                      "Schedule": {
                        "RefId": "3d389610-b650-44a7-9669-db86b3e83004",
                        "Name": "Schedule 2019a (Term 1)"
                      },
                      "SchedulePeriodList": {
                        "SchedulePeriodTime": [
                          {
                            "Period": {
                              "RefId": "215f796c-67f7-4855-83dc-28ad9d002830",
                              "LocalId": "2019a-A1",
                              "Name": "Period 1 on Day A"
                            },
                            "StartTime": "08:45:00",
                            "EndTime": "09:35:00"
                          },
                          {
                            "Period": {
                              "RefId": "1c48a0bb-a6cc-41ab-8aae-929ce5ec9c34",
                              "LocalId": "2019a-A2",
                              "Name": "Period 2 on Day A"
                            },
                            "StartTime": "09:45:00",
                            "EndTime": "10:35:00"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleErrorList"
                },
                "example": "<Response>\n  <BellSchedule>\n    <BellScheduleRefId>d2f4aea9-564f-4bdf-a18e-42a111a0602c</BellScheduleRefId>\n    <BellScheduleLocalId>2019a-Normal</BellScheduleLocalId>\n    <BellScheduleName>Schedule 2019a, Normal Bell Schedule</BellScheduleName>\n    <Organisation>\n      <RefId>ab987eeb-cf1d-4e62-aecd-96d942a12828</RefId>\n    </Organisation>\n    <Schedule>\n      <Name>Scheule 2019a (Term 1)</Name>\n    </Schedule>\n    <SchedulePeriodList>\n      <SchedulePeriodTime>\n        <Period>\n          <RefId>215f796c-67f7-4855-83dc-28ad9d002830</RefId>\n          <LocalId>2019a-A1</LocalId>\n          <Name>Period 1 on Day A</Name>\n        </Period>\n        </StartTime>08:45:00</StartTime>\n        </EndTime>09:35:00</EndTime>\n      </SchedulePeriodTime>\n      <SchedulePeriodTime>\n        <Period>\n          <RefId>1c48a0bb-a6cc-41ab-8aae-929ce5ec9c34</RefId>\n          <LocalId>2019a-A2</LocalId>\n          <Name>Period 2 on Day A</Name>\n        </Period>\n        <StartTime>09:45:00</StartTime>\n        <EndTime>10:35:00</EndTime>\n      </SchedulePeriodTime>\n    </SchedulePeriodList>\n  </BellSchedule>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "BellScheduleErrorList"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "get": {
        "tags": [
          "BellSchedule"
        ],
        "summary": "Retrieve one or more BellSchedules",
        "description": "<p>Bulk operation to retrieve all available BellSchedules, which define when the  bells ring for the start and end of the <a href=\"#tag/SchedulePeriod\">SchedulePeriods</a> at the given Provider.</p>",
        "operationId": "getBellSchedules",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleCREATEList"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "BellSchedule"
        ],
        "summary": "Update one or more BellSchedules",
        "description": "<p>Bulk operation to update one or more BellSchedules, which define when the  bells ring for the start and end of the <a href=\"#tag/SchedulePeriod\">SchedulePeriods</a> at the given Provider.</p>",
        "operationId": "updateBellSchedules",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on BellSchedule",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BellScheduleCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BellScheduleCREATEList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleCREATEList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "BellScheduleErrorList"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "BellSchedule"
        ],
        "summary": "Patch one or more BellSchedules",
        "description": "<p>Bulk operation to update one or more fields of one ore more BellSchedules, which define when the bells ring for the start and end of the <a href=\"#tag/SchedulePeriod\">SchedulePeriods</a> at the given Provider.</p>",
        "operationId": "patchBellSchedules",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on BellSchedule",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BellSchedulePATCHList"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BellSchedulePATCHList"
              },
              "example": "<BellSchedules>\n  <BellSchedule>\n    <BellScheduleRefId>d2f4aea9-564f-4bdf-a18e-42a111a0602c</BellScheduleRefId>\n    <BellScheduleLocalId>2019a-Normal</BellScheduleLocalId>\n    <BellScheduleName>Schedule 2019a, Normal Bell Schedule</BellScheduleName>\n    <Organisation>\n      <RefId>ab987eeb-cf1d-4e62-aecd-96d942a12828</RefId>\n    </Organisation>\n    <Schedule>\n      <Name>Scheule 2019a (Term 1)<Name>\n    </Schedule>\n    <SchedulePeriodList>\n      <SchedulePeriodTime>\n        <Period>\n          <RefId>215f796c-67f7-4855-83dc-28ad9d002830</RefId>\n          <LocalId>2019a-A1</LocalId>\n          <Name>Period 1 on Day A</Name>\n        </Period>\n        </StartTime>08:45:00</StartTime>\n        </EndTime>09:35:00</EndTime>\n      </SchedulePeriodTime>\n      <SchedulePeriodTime>\n        <Period>\n          <RefId>1c48a0bb-a6cc-41ab-8aae-929ce5ec9c34</RefId>\n          <LocalId>2019a-A2</LocalId>\n          <Name>Period 2 on Day A</Name>\n        </Period>\n        <StartTime>09:45:00</StartTime>\n        <EndTime>10:35:00</EndTime>\n      </SchedulePeriodTime>\n    </SchedulePeriodList>\n  </BellSchedule>\n</BellSchedules>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleCREATEList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "BellScheduleErrorList"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/schedule/{scheduleRefId}/bellschedule/{bellScheduleRefId}": {
      "get": {
        "tags": [
          "BellSchedule"
        ],
        "summary": "Retrieve a single BellSchedule",
        "description": "<p>Retrive a particular BellSchedule, which define when the bells ring for the start and end of the <a href=\"#tag/SchedulePeriod\">SchedulePeriods</a> at the given Provider.</p>",
        "operationId": "getBellSchedule",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          },
          {
            "name": "bellScheduleRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify the BellSchedule, which defines when the bells ring for the start and end of the <a href=\"#tag/SchedulePeriod\">SchedulePeriods</a> at the given Provider.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleCREATE"
                },
                "example": {
                  "BellSchedule": {
                    "BellScheduleRefId": "d2f4aea9-564f-4bdf-a18e-42a111a0602c",
                    "BellScheduleLocalId": "2019a-Normal",
                    "BellScheduleName": "Schedule 2019a, Normal Bell Schedule",
                    "Organisation": {
                      "RefId": "9651",
                      "Name": "Hogwarts High"
                    },
                    "Schedule": {
                      "RefId": "3d389610-b650-44a7-9669-db86b3e83004",
                      "Name": "Schedule 2019a (Term 1)"
                    },
                    "SchedulePeriodList": {
                      "SchedulePeriodTime": [
                        {
                          "Period": {
                            "RefId": "215f796c-67f7-4855-83dc-28ad9d002830",
                            "LocalId": "2019a-A1",
                            "Name": "Period 1 on Day A"
                          },
                          "StartTime": "08:45:00",
                          "EndTime": "09:35:00"
                        },
                        {
                          "Period": {
                            "RefId": "1c48a0bb-a6cc-41ab-8aae-929ce5ec9c34",
                            "LocalId": "2019a-A2",
                            "Name": "Period 2 on Day A"
                          },
                          "StartTime": "09:45:00",
                          "EndTime": "10:35:00"
                        }
                      ]
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleCREATE"
                },
                "example": "<BellSchedule>\n  <BellScheduleRefId>d2f4aea9-564f-4bdf-a18e-42a111a0602c</BellScheduleRefId>\n  <BellScheduleLocalId>2019a-Normal</BellScheduleLocalId>\n  <BellScheduleName>Schedule 2019a, Normal Bell Schedule</BellScheduleName>\n  <Organisation>\n    <RefId>ab987eeb-cf1d-4e62-aecd-96d942a12828</RefId>\n  </Organisation>\n  <Schedule>\n    <Name>Scheule 2019a (Term 1)</Name>\n  </Schedule>\n  <SchedulePeriodList>\n    <SchedulePeriodTime>\n      <Period>\n        <RefId>215f796c-67f7-4855-83dc-28ad9d002830</RefId>\n        <LocalId>2019a-A1</LocalId>\n        <Name>Period 1 on Day A</Name>\n      </Period>\n      </StartTime>08:45:00</StartTime>\n      </EndTime>09:35:00</EndTime>\n    </SchedulePeriodTime>\n    <SchedulePeriodTime>\n      <Period>\n        <RefId>1c48a0bb-a6cc-41ab-8aae-929ce5ec9c34</RefId>\n        <LocalId>2019a-A2</LocalId>\n        <Name>Period 2 on Day A</Name>\n      </Period>\n      <StartTime>09:45:00</StartTime>\n      <EndTime>10:35:00</EndTime>\n    </SchedulePeriodTime>\n  </SchedulePeriodList>\n</BellSchedule>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "BellSchedule"
        ],
        "summary": "Retrieve a single BellSchedule",
        "description": "<p>Update a particular BellSchedule, which define when the bells ring for the start and end of the <a href=\"#tag/SchedulePeriod\">SchedulePeriods</a> at the given Provider.</p>",
        "operationId": "updateBellSchedule",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          },
          {
            "name": "bellScheduleRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify the BellSchedule, which defines when the bells ring for the start and end of the <a href=\"#tag/SchedulePeriod\">SchedulePeriods</a> at the given Provider.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on BellSchedule",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BellScheduleCREATE"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule~1%7BbellScheduleRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BellScheduleCREATE"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule~1%7BbellScheduleRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule~1%7BbellScheduleRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule~1%7BbellScheduleRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "BellSchedule"
        ],
        "summary": "Patch a single BellSchedule",
        "description": "<p>Update one or more fields of a particular BellSchedule, which define when the bells ring for the start and end of the <a href=\"#tag/SchedulePeriod\">SchedulePeriods</a> at the given Provider.</p>",
        "operationId": "patchBellSchedule",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          },
          {
            "name": "bellScheduleRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify the BellSchedule, which defines when the bells ring for the start and end of the <a href=\"#tag/SchedulePeriod\">SchedulePeriods</a> at the given Provider.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on BellSchedule",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BellSchedulePATCH"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule~1%7BbellScheduleRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BellSchedulePATCH"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule~1%7BbellScheduleRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule~1%7BbellScheduleRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BellScheduleCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1bellschedule~1%7BbellScheduleRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/scheduleterm": {
      "post": {
        "tags": [
          "ScheduleTerm"
        ],
        "summary": "Create a one or more timetable ScheduleTerms",
        "description": "Bulk operation to create one or more timetable ScheduleTerms for a particular <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "createScheduleTerms",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on ScheduleTerm",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTermCREATEList"
              },
              "example": {
                "ScheduleTerms": {
                  "ScheduleTerm": [
                    {
                      "ScheduleTermLocalId": "2020_8001_T1",
                      "TermName": "2020",
                      "Organisation": {
                        "RefId": "8001"
                      },
                      "SchoolYear": 2020,
                      "StartDate": "2020-01-27T00:00:00+1200",
                      "EndDate": "2020-03-27T00:00:00+1200"
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTermCREATEList"
              },
              "example": "<ScheduleTerms>\n  <ScheduleTerm>\n    <ScheduleTermLocalId>2020_8001_T1</ScheduleTermLocalId>\n    <TermName>2020</TermName>\n    <Organisation>\n      <RefId>8001</RefId>\n    </Organisation>\n    <SchoolYear>2020</SchoolYear>\n    <StartDate>2020-01-27</StartDate>\n    <EndDate>2020-03-27<EndDate>\n  </ScheduleTerm>\n  <ScheduleTerm>\n    <ScheduleTermLocalId>2020_8001_T2</ScheduleTermLocalId>\n    <TermName>2020</TermName>\n    <Organisation>\n      <RefId>8001</RefId>\n    </Organisation>\n    <SchoolYear>2020</SchoolYear>\n    <StartDate>2020-04-15</StartDate>\n    <EndDate>2020-07-03</EndDate>\n  </ScheduleTerm>\n</ScheduleTerms>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermErrorList"
                },
                "example": [
                  {
                    "ScheduleTerm": {
                      "ScheduleTermLocalId": "2020_8001_T1",
                      "TermName": "2020",
                      "Organisation": {
                        "RefId": "8001"
                      },
                      "SchoolYear": 2020,
                      "StartDate": "2020-01-27T00:00:00+1200",
                      "EndDate": "2020-03-27T00:00:00+1200"
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermErrorList"
                },
                "example": "<Response>\n  <ScheduleTerm>\n    <ScheduleTermLocalId>2020_8001_T1</ScheduleTermLocalId>\n    <TermName>2020</TermName>\n    <Organisation>\n      <RefId>8001</RefId>\n    </Organisation>\n    <SchoolYear>2020</SchoolYear>\n    <StartDate>2020-01-27</StartDate>\n    <EndDate>2020-03-27<EndDate>\n  </ScheduleTerm>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "ScheduleTermErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "get": {
        "tags": [
          "ScheduleTerm"
        ],
        "summary": "Retrieve a one or more timetable ScheduleTerms",
        "description": "Bulk operation to retrive one or more timetable ScheduleTerms for a particular <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "getScheduleTerms",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "ScheduleTerm"
        ],
        "summary": "Update a one or more timetable ScheduleTerms",
        "description": "Bulk operation to update one or more timetable ScheduleTerms for a particular <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "updateScheduleTerms",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on ScheduleTerm",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTermCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1scheduleterm/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTermCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1scheduleterm/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "ScheduleTermErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "ScheduleTerm"
        ],
        "summary": "Patch a one or more timetable ScheduleTerms",
        "description": "Bulk operation to update one or more fields of one or more timetable ScheduleTerms for a particular <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "patchScheduleTerms",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on ScheduleTerm",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTermPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1scheduleterm/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTermPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1scheduleterm/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "ScheduleTermErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/scheduleterm/{scheduleTermRefId}": {
      "get": {
        "tags": [
          "ScheduleTerm"
        ],
        "summary": "Retrieve a single more timetable ScheduleTerm",
        "description": "Retrieve a particular timetable ScheduleTerm for a particular <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "getScheduleTerm",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "scheduleTermRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify this Schedule Term.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermCREATE"
                },
                "example": {
                  "ScheduleTerm": {
                    "ScheduleTermLocalId": "2020_8001_T1",
                    "TermName": "2020",
                    "Organisation": {
                      "RefId": "8001"
                    },
                    "SchoolYear": 2020,
                    "StartDate": "2020-01-27T00:00:00+1200",
                    "EndDate": "2020-03-27T00:00:00+1200"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermCREATE"
                },
                "example": "<ScheduleTerm>\n  <ScheduleTermLocalId>2020_8001_T1</ScheduleTermLocalId>\n  <TermName>2020</TermName>\n  <Organisation>\n    <RefId>8001</RefId>\n  </Organisation>\n  <SchoolYear>2020</SchoolYear>\n  <StartDate>2020-01-27</StartDate>\n  <EndDate>2020-03-27<EndDate>\n</ScheduleTerm>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "ScheduleTerm"
        ],
        "summary": "Update a single more timetable ScheduleTerm",
        "description": "Upate a particular timetable ScheduleTerm for a particular <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "updateScheduleTerm",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "scheduleTermRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify this Schedule Term.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on ScheduleTerm",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTermCREATE"
              },
              "example": {
                "$ref": "#/paths/~1scheduleterm~1%7BscheduleTermRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTermCREATE"
              },
              "example": {
                "$ref": "#/paths/~1scheduleterm~1%7BscheduleTermRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm~1%7BscheduleTermRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm~1%7BscheduleTermRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "ScheduleTerm"
        ],
        "summary": "Patch a single more timetable ScheduleTerm",
        "description": "Update one or more fields of a particular timetable ScheduleTerm for a particular <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "patchScheduleTerm",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "scheduleTermRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify this Schedule Term.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on ScheduleTerm",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTermPATCH"
              },
              "example": {
                "$ref": "#/paths/~1scheduleterm~1%7BscheduleTermRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTermPATCH"
              },
              "example": {
                "$ref": "#/paths/~1scheduleterm~1%7BscheduleTermRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm~1%7BscheduleTermRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTermCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1scheduleterm~1%7BscheduleTermRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/schedule/{scheduleRefId}/scheduledate": {
      "post": {
        "tags": [
          "ScheduleDate"
        ],
        "summary": "Create one or more ScheduleDates",
        "description": "Bulk operation to create one or more timetable ScheduleDates for a particular <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "createScheduleDates",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on ScheduleDate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDateCREATEList"
              },
              "example": {
                "ScheduleDates": {
                  "ScheduleDate": [
                    {
                      "ScheduleDateLocalId": "8003_2020_001",
                      "CalendarDate": "2020-01-27T00:00:00+1200",
                      "Organisation": {
                        "RefId": "8003"
                      },
                      "Term": {
                        "LocalId": "2020_8003_T1"
                      },
                      "Schedule": {
                        "LocalId": "8003_Sched_2020"
                      },
                      "AcademicDay": {
                        "LocalId": "8003_Day_A"
                      },
                      "BellSchedule": {
                        "LocalId": "8003_Regular"
                      },
                      "SchedulePeriodList": {
                        "SchedulePeriodTime": [
                          {
                            "Period": {
                              "LocalId": "8003_HR"
                            },
                            "StartTime": "08:45:00",
                            "EndTime": "08:55:00"
                          },
                          {
                            "Period": {
                              "LocalId": "8003_P1"
                            },
                            "StartTime": "09:00:00",
                            "EndTime": "09:50:00"
                          },
                          {
                            "Period": {
                              "LocalId": "8003_P2"
                            },
                            "StartTime": "09:55:00",
                            "EndTime": "10:45:00"
                          },
                          {
                            "Period": {
                              "LocalId": "8003_P3"
                            },
                            "StartTime": "11:00:00",
                            "EndTime": "11:50:00"
                          },
                          {
                            "Period": {
                              "LocalId": "8003_P4"
                            },
                            "StartTime": "12:40:00",
                            "EndTime": "13:30:00"
                          },
                          {
                            "Period": {
                              "LocalId": "8003_P5"
                            },
                            "StartTime": "13:45:00",
                            "EndTime": "14:45:00"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDateCREATEList"
              },
              "example": "<ScheduleDates>\n  <ScheduleDate>\n    <ScheduleDateLocalId>8003_2020_001</ScheduleDateLocalId>\n    <CalendarDate>2020-01-27</CalendarDate>\n    <Organisation><RefId>8003</RefId></Organisation>\n    <Term><LocalId>2020_8003_T1<LocalId></Term>\n    <Schedule><LocalId>8003_Sched_2020</LocalId></Schedule>\n    <AcademicDay><LocalId>8003_Day_A</LocalId></AcademicDay>\n    <BellSchedule>LocalId>8003_Regular</LocalId></BellSchedule>\n    <SchedulePeriodList>\n      <SchedulePeriodTime>\n        <Period><LocalId>8003_HR<LocalId></Period>\n        <StartTime>08:45:00</StartTime>\n        <EndTime>08:55:00</EndTime>\n      </SchedulePeriodTime>\n      <SchedulePeriodTime>\n        <Period><LocalId>8003_P1</LocalId></Period>\n        <StartTime>09:00:00</StartTime>\n        <EndTime>09:50:00</EndTime>\n      </SchedulePeriodTime>\n      <SchedulePeriodTime>\n        <Period><LocalId>8003_P2</LocalId></Period>\n        <StartTime>09:55:00</StartTime>\n        <EndTime>10:45:00</EndTime>\n      </SchedulePeriodTime>\n      <SchedulePeriodTime>\n        <Period><LocalId>8003_P3</LocalId></Period>\n        <StartTime>11:00:00</StartTime>\n        <EndTime>11:50:00</EndTime>\n      </SchedulePeriodTime>\n      <SchedulePeriodTime>\n        <Period><LocalId>8003_P4</LocalId></Period>\n        <StartTime>12:40:00</StartTime>\n        <EndTime>13:30:00</EndTime>\n      </SchedulePeriodTime>\n      <SchedulePeriodTime>\n        <Period><LocalId>8003_P5</LocalId></Period>\n        <StartTime>13:45:00</StartTime>\n        <EndTime>14:45:00<EndTime>\n      </SchedulePeriodTime>\n    </SchedulePeriodList>\n  </ScheduleDate>\n</ScheduleDates>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateErrorList"
                },
                "example": [
                  {
                    "ScheduleDate": {
                      "ScheduleDateLocalId": "8003_2020_001",
                      "CalendarDate": "2020-01-27T00:00:00+1200",
                      "Organisation": {
                        "RefId": "8003"
                      },
                      "Term": {
                        "LocalId": "2020_8003_T1"
                      },
                      "Schedule": {
                        "LocalId": "8003_Sched_2020"
                      },
                      "AcademicDay": {
                        "LocalId": "8003_Day_A"
                      },
                      "BellSchedule": {
                        "LocalId": "8003_Regular"
                      },
                      "SchedulePeriodList": {
                        "SchedulePeriodTime": [
                          {
                            "Period": {
                              "LocalId": "8003_HR"
                            },
                            "StartTime": "08:45:00",
                            "EndTime": "08:55:00"
                          },
                          {
                            "Period": {
                              "LocalId": "8003_P1"
                            },
                            "StartTime": "09:00:00",
                            "EndTime": "09:50:00"
                          },
                          {
                            "Period": {
                              "LocalId": "8003_P2"
                            },
                            "StartTime": "09:55:00",
                            "EndTime": "10:45:00"
                          },
                          {
                            "Period": {
                              "LocalId": "8003_P3"
                            },
                            "StartTime": "11:00:00",
                            "EndTime": "11:50:00"
                          },
                          {
                            "Period": {
                              "LocalId": "8003_P4"
                            },
                            "StartTime": "12:40:00",
                            "EndTime": "13:30:00"
                          },
                          {
                            "Period": {
                              "LocalId": "8003_P5"
                            },
                            "StartTime": "13:45:00",
                            "EndTime": "14:45:00"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateErrorList"
                },
                "example": "<Response>\n  <ScheduleDate>\n    <ScheduleDateLocalId>8003_2020_001</ScheduleDateLocalId>\n    <CalendarDate>2020-01-27</CalendarDate>\n    <Organisation><RefId>8003</RefId></Organisation>\n    <Term><LocalId>2020_8003_T1<LocalId></Term>\n    <Schedule><LocalId>8003_Sched_2020</LocalId></Schedule>\n    <AcademicDay><LocalId>8003_Day_A</LocalId></AcademicDay>\n    <BellSchedule>LocalId>8003_Regular</LocalId></BellSchedule>\n    <SchedulePeriodList>\n      <SchedulePeriodTime>\n        <Period><LocalId>8003_HR<LocalId></Period>\n        <StartTime>08:45:00</StartTime>\n        <EndTime>08:55:00</EndTime>\n      </SchedulePeriodTime>\n      <SchedulePeriodTime>\n        <Period><LocalId>8003_P1</LocalId></Period>\n        <StartTime>09:00:00</StartTime>\n        <EndTime>09:50:00</EndTime>\n      </SchedulePeriodTime>\n      <SchedulePeriodTime>\n        <Period><LocalId>8003_P2</LocalId></Period>\n        <StartTime>09:55:00</StartTime>\n        <EndTime>10:45:00</EndTime>\n      </SchedulePeriodTime>\n      <SchedulePeriodTime>\n        <Period><LocalId>8003_P3</LocalId></Period>\n        <StartTime>11:00:00</StartTime>\n        <EndTime>11:50:00</EndTime>\n      </SchedulePeriodTime>\n      <SchedulePeriodTime>\n        <Period><LocalId>8003_P4</LocalId></Period>\n        <StartTime>12:40:00</StartTime>\n        <EndTime>13:30:00</EndTime>\n      </SchedulePeriodTime>\n      <SchedulePeriodTime>\n        <Period><LocalId>8003_P5</LocalId></Period>\n        <StartTime>13:45:00</StartTime>\n        <EndTime>14:45:00<EndTime>\n      </SchedulePeriodTime>\n    </SchedulePeriodList>\n  </ScheduleDate>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "ScheduleDateErrorList"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "get": {
        "tags": [
          "ScheduleDate"
        ],
        "summary": "Retrieve one or more ScheduleDates",
        "description": "Bulk operation to retrieve all available timetable ScheduleDates for a particular <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "getScheduleDates",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "ScheduleDate"
        ],
        "summary": "Update one or more ScheduleDates",
        "description": "Bulk operation to update one or more timetable ScheduleDates for a particular <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "updateScheduleDates",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on ScheduleDate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDateCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDateCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "ScheduleDateErrorList"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "ScheduleDate"
        ],
        "summary": "Patch one or more ScheduleDates",
        "description": "Bulk operation to update one or more fields of one or more timetable ScheduleDates for a particular <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "patchScheduleDates",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on ScheduleDate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDatePATCHList"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDatePATCHList"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "ScheduleDateErrorList"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/schedule/{scheduleRefId}/scheduledate/{scheduleDateRefId}": {
      "get": {
        "tags": [
          "ScheduleDate"
        ],
        "summary": "Retrieve a single ScheduleDate",
        "description": "Retrieve a particular timetable ScheduleDate for a particular <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "getScheduleDate",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          },
          {
            "name": "scheduleDateRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify this Schedule Date.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateCREATE"
                },
                "example": {
                  "ScheduleDate": {
                    "ScheduleDateLocalId": "8003_2020_001",
                    "CalendarDate": "2020-01-27T00:00:00+1200",
                    "Organisation": {
                      "RefId": "8003"
                    },
                    "Term": {
                      "LocalId": "2020_8003_T1"
                    },
                    "Schedule": {
                      "LocalId": "8003_Sched_2020"
                    },
                    "AcademicDay": {
                      "LocalId": "8003_Day_A"
                    },
                    "BellSchedule": {
                      "LocalId": "8003_Regular"
                    },
                    "SchedulePeriodList": {
                      "SchedulePeriodTime": [
                        {
                          "Period": {
                            "LocalId": "8003_HR"
                          },
                          "StartTime": "08:45:00",
                          "EndTime": "08:55:00"
                        },
                        {
                          "Period": {
                            "LocalId": "8003_P1"
                          },
                          "StartTime": "09:00:00",
                          "EndTime": "09:50:00"
                        },
                        {
                          "Period": {
                            "LocalId": "8003_P2"
                          },
                          "StartTime": "09:55:00",
                          "EndTime": "10:45:00"
                        },
                        {
                          "Period": {
                            "LocalId": "8003_P3"
                          },
                          "StartTime": "11:00:00",
                          "EndTime": "11:50:00"
                        },
                        {
                          "Period": {
                            "LocalId": "8003_P4"
                          },
                          "StartTime": "12:40:00",
                          "EndTime": "13:30:00"
                        },
                        {
                          "Period": {
                            "LocalId": "8003_P5"
                          },
                          "StartTime": "13:45:00",
                          "EndTime": "14:45:00"
                        }
                      ]
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateCREATE"
                },
                "example": "<ScheduleDate>\n  <ScheduleDateLocalId>8003_2020_001</ScheduleDateLocalId>\n  <CalendarDate>2020-01-27</CalendarDate>\n  <Organisation><RefId>8003</RefId></Organisation>\n  <Term><LocalId>2020_8003_T1<LocalId></Term>\n  <Schedule><LocalId>8003_Sched_2020</LocalId></Schedule>\n  <AcademicDay><LocalId>8003_Day_A</LocalId></AcademicDay>\n  <BellSchedule>LocalId>8003_Regular</LocalId></BellSchedule>\n  <SchedulePeriodList>\n    <SchedulePeriodTime>\n      <Period><LocalId>8003_HR<LocalId></Period>\n      <StartTime>08:45:00</StartTime>\n      <EndTime>08:55:00</EndTime>\n    </SchedulePeriodTime>\n    <SchedulePeriodTime>\n      <Period><LocalId>8003_P1</LocalId></Period>\n      <StartTime>09:00:00</StartTime>\n      <EndTime>09:50:00</EndTime>\n    </SchedulePeriodTime>\n    <SchedulePeriodTime>\n      <Period><LocalId>8003_P2</LocalId></Period>\n      <StartTime>09:55:00</StartTime>\n      <EndTime>10:45:00</EndTime>\n    </SchedulePeriodTime>\n    <SchedulePeriodTime>\n      <Period><LocalId>8003_P3</LocalId></Period>\n      <StartTime>11:00:00</StartTime>\n      <EndTime>11:50:00</EndTime>\n    </SchedulePeriodTime>\n    <SchedulePeriodTime>\n      <Period><LocalId>8003_P4</LocalId></Period>\n      <StartTime>12:40:00</StartTime>\n      <EndTime>13:30:00</EndTime>\n    </SchedulePeriodTime>\n    <SchedulePeriodTime>\n      <Period><LocalId>8003_P5</LocalId></Period>\n      <StartTime>13:45:00</StartTime>\n      <EndTime>14:45:00<EndTime>\n    </SchedulePeriodTime>\n  </SchedulePeriodList>\n</ScheduleDate>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "ScheduleDate"
        ],
        "summary": "Update a single ScheduleDate",
        "description": "Update a particular timetable ScheduleDate for a particular <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "updateScheduleDate",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          },
          {
            "name": "scheduleDateRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify this Schedule Date.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on ScheduleDate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDateCREATE"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate~1%7BscheduleDateRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDateCREATE"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate~1%7BscheduleDateRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate~1%7BscheduleDateRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate~1%7BscheduleDateRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "ScheduleDate"
        ],
        "summary": "Patch a single ScheduleDate",
        "description": "Update one or more fields of a particular timetable ScheduleDate for a particular <a href=\"#tag/Schedule\">Schedule</a> at the given Provider",
        "operationId": "patchScheduleDate",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/scheduleRefId"
          },
          {
            "name": "scheduleDateRefId",
            "in": "path",
            "description": "<p> The ID (GUID) assigned to uniquely identify this Schedule Date.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on ScheduleDate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDatePATCH"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate~1%7BscheduleDateRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDatePATCH"
              },
              "example": {
                "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate~1%7BscheduleDateRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate~1%7BscheduleDateRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDateCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1schedule~1%7BscheduleRefId%7D~1scheduledate~1%7BscheduleDateRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isScheduleEntity": true,
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/studentattendancesummary": {
      "get": {
        "tags": [
          "StudentAttendanceSummary"
        ],
        "summary": "Retrieve one or more StudentAttendanceSummarys",
        "description": "Bulk operation to retrieve all available summaries of a student's daily attendance and membership information for a given provider during the time period between the StartDate and  EndDate inclusive, within the scope of the given Provider</p>",
        "operationId": "getStudentAttendanceSummarys",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceSummaryCREATEList"
                },
                "example": {
                  "StudentAttendanceSummarys": {
                    "StudentAttendanceSummary": [
                      {
                        "StudentAttendanceSummaryRefId": "d3476fae-8647-384b-da24-31eda3583211",
                        "Student": {
                          "RefId": "7c834ea9-eda1-2090-347f-83297e1c290c"
                        },
                        "Organisation": {
                          "RefId": "9651"
                        },
                        "SchoolCalendarYear": 2015,
                        "StartDate": "2014-08-30T00:00:00+1200",
                        "EndDate": "2015-06-10T00:00:00+1200",
                        "StartDay": 1,
                        "EndDay": 180,
                        "FTE": 1,
                        "HalfDaysYearPresent": 178,
                        "HalfDaysYearJustified": 2,
                        "HalfDaysYearTotal": 2
                      }
                    ]
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceSummaryCREATEList"
                },
                "example": "<StudentAttendanceSummarys>\n  <StudentAttendanceSummary>\n    <StudentAttendanceSummaryRefId>d3476fae-8647-384b-da24-31eda3583211</StudentAttendanceSummaryRefId>\n    <Student>\n      <RefId>7c834ea9-eda1-2090-347f-83297e1c290c</RefId>\n    </Student>\n    <Organisation>\n      <RefId>9651</RefId>\n    </Organisation>\n    <SchoolCalendarYear>2015</SchoolCalendarYear>\n    <StartDate>2014-08-30</StartDate>\n    <EndDate>2015-06-10</EndDate>\n    <StartDay>1</StartDay>\n    <EndDay>180</EndDay>\n    <FTE>1.00</FTE>\n    <HalfDaysYearPresent>178</HalfDaysYearPresent>\n    <HalfDaysYearJustified>2</HalfDaysYearJustified>\n    <HalfDaysYearTotal>2</HalfDaysYearTotal>\n  </StudentAttendanceSummary>\n</StudentAttendanceSummarys>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false
      }
    },
    "/studentattendancesummary/{studentAttendanceSummaryRefId}": {
      "get": {
        "tags": [
          "StudentAttendanceSummary"
        ],
        "summary": "Retrieve a single StudentAttendanceSummary",
        "description": "Retrieve a single summary of a student's daily attendance and membership information for a given provider during the time period between the StartDate and  EndDate inclusive, within the scope of the given Provider</p>",
        "operationId": "getStudentAttendanceSummary",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentAttendanceSummaryRefId",
            "in": "path",
            "description": "<p>An ID (GUID) for this summary of attendance information being reported on. This GUID would be used to form a REST URL.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceSummaryCREATE"
                },
                "example": {
                  "StudentAttendanceSummary": {
                    "StudentAttendanceSummaryRefId": "d3476fae-8647-384b-da24-31eda3583211",
                    "Student": {
                      "RefId": "7c834ea9-eda1-2090-347f-83297e1c290c"
                    },
                    "Organisation": {
                      "RefId": "9651"
                    },
                    "SchoolCalendarYear": 2015,
                    "StartDate": "2014-08-30T00:00:00+1200",
                    "EndDate": "2015-06-10T00:00:00+1200",
                    "StartDay": 1,
                    "EndDay": 180,
                    "FTE": 1,
                    "HalfDaysYearPresent": 178,
                    "HalfDaysYearJustified": 2,
                    "HalfDaysYearTotal": 2
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceSummaryCREATE"
                },
                "example": "<StudentAttendanceSummary>\n  <StudentAttendanceSummaryRefId>d3476fae-8647-384b-da24-31eda3583211</StudentAttendanceSummaryRefId>\n  <Student>\n    <RefId>7c834ea9-eda1-2090-347f-83297e1c290c</RefId>\n  </Student>\n  <Organisation>\n    <RefId>9651</RefId>\n  </Organisation>\n  <SchoolCalendarYear>2015</SchoolCalendarYear>\n  <StartDate>2014-08-30</StartDate>\n  <EndDate>2015-06-10</EndDate>\n  <StartDay>1</StartDay>\n  <EndDay>180</EndDay>\n  <FTE>1.00</FTE>\n  <HalfDaysYearPresent>178</HalfDaysYearPresent>\n  <HalfDaysYearJustified>2</HalfDaysYearJustified>\n  <HalfDaysYearTotal>2</HalfDaysYearTotal>\n</StudentAttendanceSummary>  "
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true
      }
    },
    "/studentattendancetimelist": {
      "post": {
        "tags": [
          "StudentAttendanceTimeList"
        ],
        "summary": "Create one or more StudentAttenadanceTimeLists",
        "description": "Bulk operation to create one or more StudentAttendanceTimeList records, which are an attendance record for a single student on a single day at the given Provider.</p>",
        "operationId": "createStudentAttendanceTimeLists",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAttendanceTimeList",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
              },
              "example": {
                "StudentAttendanceTimeLists": {
                  "StudentAttendanceTimeList": [
                    {
                      "Student": {
                        "RefId": "7f11e3ed-3ac5-4673-9fdc-bcdbcd971811"
                      },
                      "Organisation": {
                        "RefId": "9651"
                      },
                      "AttendanceTimeList": {
                        "AttendanceTime": [
                          {
                            "AttendanceTimeLocalId": "2304928",
                            "AttendanceType": "SCH",
                            "AttendanceCodeGroup": "U",
                            "Code": "E",
                            "AttendanceDate": "2018-06-26T00:00:00+1200",
                            "StartTime": "09:00:00",
                            "EndTime": "10:30:00",
                            "Note": "Explained absence, but unjustified, 9:00 to 10:30am"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
              },
              "example": "<StudentAttendanceTimeList>\n  <Student>\n    <RefId>9651</RefId>\n  </Student>\n  <Organisation>\n    <RefId>e7c15fb4-48a6-4c11-b66f-fe93520444b6</RefId>\n  </Organisation>\n  <AttendanceTimeList>\n    <AttendanceTime>\n      <AttendanceTimeLocalId>2304298</AttendanceTimeLocalId>\n      <AttendanceType>SCH</AttendanceType>\n      <AttendanceCodeGroup>U</AttendanceCodeGroup>\n      <Code>U</Code>\n      <AttendanceDate>2018-06-26</AttendanceDate>\n      <StartTime>09:00:00</StartTime>\n      <EndTime>10:30:00</EndTime>\n      <Note>Explained absence, but unjustified, 9:00 to 10:30am</Note>\n    </AttendanceTime>\n  </AttendanceTimeList>\n</StudentAttendanceTimeList>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListErrorList"
                },
                "example": [
                  {
                    "StudentAttendanceTimeList": {
                      "Student": {
                        "RefId": "7f11e3ed-3ac5-4673-9fdc-bcdbcd971811"
                      },
                      "Organisation": {
                        "RefId": "9651"
                      },
                      "AttendanceTimeList": {
                        "AttendanceTime": [
                          {
                            "AttendanceTimeLocalId": "2304928",
                            "AttendanceType": "SCH",
                            "AttendanceCodeGroup": "U",
                            "Code": "E",
                            "AttendanceDate": "2018-06-26T00:00:00+1200",
                            "StartTime": "09:00:00",
                            "EndTime": "10:30:00",
                            "Note": "Explained absence, but unjustified, 9:00 to 10:30am"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListErrorList"
                },
                "example": "<Response>\n  <StudentAttendanceTimeList>\n    <Student>\n      <RefId>7f11e3ed-3ac5-4673-9fdc-bcdbcd971811</RefId>\n    </Student>\n    <Organisation>\n      <RefId>e7c15fb4-48a6-4c11-b66f-fe93520444b6</RefId>\n    </Organisation>\n    <AttendanceTimeList>\n      <AttendanceTime>\n        <AttendanceTimeLocalId>2304298</AttendanceTimeLocalId>\n        <AttendanceType>SCH</AttendanceType>\n        <AttendanceCodeGroup>U</AttendanceCodeGroup>\n        <Code>U</Code>\n        <AttendanceDate>2018-06-26</AttendanceDate>\n        <StartTime>09:00:00</StartTime>\n        <EndTime>10:30:00</EndTime>\n        <Note>Explained absence, but unjustified, 9:00 to 10:30am</Note>\n      </AttendanceTime>\n    </AttendanceTimeList>\n  </StudentAttendanceTimeList>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "StudentAttendanceTimeListErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-customObject": true
      },
      "get": {
        "tags": [
          "StudentAttendanceTimeList"
        ],
        "summary": "Retrieve one or more StudentAttenadanceTimeLists",
        "description": "Bulk operation to retrieve all available StudentAttendanceTimeList records, which are an attendance record for a single student on a single day at the given Provider.</p>",
        "operationId": "getStudentAttendanceTimeLists",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-customObject": true
      },
      "put": {
        "tags": [
          "StudentAttendanceTimeList"
        ],
        "summary": "Update one or more StudentAttenadanceTimeLists",
        "description": "Bulk operation to update one or more StudentAttendanceTimeList records, which are an attendance record for a single student on a single day at the given Provider.</p>",
        "operationId": "updateStudentAttendanceTimeLists",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAttendanceTimeList",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentAttendanceTimeListErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-customObject": true
      },
      "patch": {
        "tags": [
          "StudentAttendanceTimeList"
        ],
        "summary": "Patch one or more StudentAttenadanceTimeLists",
        "description": "Bulk operation to update one or more fields of one or more StudentAttendanceTimeList records, which are an attendance record for a single student on a single day at the given Provider.</p>",
        "operationId": "patchStudentAttendanceTimeLists",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAttendanceTimeList",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttendanceTimeListPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttendanceTimeListPATCHList"
              },
              "example": "<StudentAttendanceTimeLists>\n  <StudentAttendanceTimeList>\n    <Student>\n      <RefId>7f11e3ed-3ac5-4673-9fdc-bcdbcd971811</RefId>\n    </Student>\n    <Organisation>\n      <RefId>9651</RefId>\n    </Organisation>\n    <AttendanceTimeList>\n      <AttendanceTime>\n        <AttendanceTimeLocalId>2304298</AttendanceTimeLocalId>\n        <AttendanceType>SCH</AttendanceType>\n        <AttendanceCodeGroup>U</AttendanceCodeGroup>\n        <Code>U</Code>\n        <AttendanceDate>2018-06-26</AttendanceDate>\n        <StartTime>09:00:00</StartTime>\n        <EndTime>10:30:00</EndTime>\n        <Note>Explained absence, but unjustified, 9:00 to 10:30am</Note>\n      </AttendanceTime>\n  </StudentAttendanceTimeList>\n</StudentAttendanceTimeLists>  "
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentAttendanceTimeListErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-customObject": true
      }
    },
    "/studentattendancetimelist/{studentAttendanceTimeListRefId}": {
      "get": {
        "tags": [
          "StudentAttendanceTimeList"
        ],
        "summary": "Retrieve a single StudentAttenadanceTimeList",
        "description": "Retrieve an attendance record for a single student on a single day at the given Provider.</p>",
        "operationId": "getStudentAttendanceTimeList",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentAttendanceTimeListRefId",
            "in": "path",
            "description": "The ID (GUID) that uniquely identifies the attendance record.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATE"
                },
                "example": {
                  "StudentAttendanceTimeList": {
                    "Student": {
                      "RefId": "7f11e3ed-3ac5-4673-9fdc-bcdbcd971811"
                    },
                    "Organisation": {
                      "RefId": "9651"
                    },
                    "AttendanceTimeList": {
                      "AttendanceTime": [
                        {
                          "AttendanceTimeLocalId": "2304928",
                          "AttendanceType": "SCH",
                          "AttendanceCodeGroup": "U",
                          "Code": "E",
                          "AttendanceDate": "2018-06-26T00:00:00+1200",
                          "StartTime": "09:00:00",
                          "EndTime": "10:30:00",
                          "Note": "Explained absence, but unjustified, 9:00 to 10:30am"
                        }
                      ]
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-customObject": true
      },
      "put": {
        "tags": [
          "StudentAttendanceTimeList"
        ],
        "summary": "Update a single StudentAttenadanceTimeList",
        "description": "Update an attendance record for a single student on a single day at the given Provider.</p>",
        "operationId": "updateStudentAttendanceTimeList",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentAttendanceTimeListRefId",
            "in": "path",
            "description": "The ID (GUID) that uniquely identifies the attendance record.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAttendanceTimeList",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttendanceTimeListCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentattendancetimelist~1%7BstudentAttendanceTimeListRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttendanceTimeListCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist~1%7BstudentAttendanceTimeListRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-customObject": true
      },
      "patch": {
        "tags": [
          "StudentAttendanceTimeList"
        ],
        "summary": "Patch a single StudentAttenadanceTimeList",
        "description": "Update one or more fields of an attendance record for a single student on a single day at the given Provider.</p>",
        "operationId": "patchStudentAttendanceTimeList",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentAttendanceTimeListRefId",
            "in": "path",
            "description": "The ID (GUID) that uniquely identifies the attendance record.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAttendanceTimeList",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttendanceTimeListPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentattendancetimelist~1%7BstudentAttendanceTimeListRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttendanceTimeListPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist~1%7BstudentAttendanceTimeListRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ],
        "x-customObject": true
      }
    },
    "/studentpersonal/{studentPersonalRefId}/studentattendancetimelist": {
      "get": {
        "tags": [
          "StudentAttendanceTimeList"
        ],
        "summary": "Retrieve StudentAttendanceTimeLists by Student",
        "description": "Retrieve all available attendance records for the given Student at the given Provider",
        "operationId": "getStudentAttendanceTimeListsByStudent",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/studentPersonalRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-byEntity": "ByStudentPersonal",
        "x-isBulk": true,
        "x-isSingle": false
      }
    },
    "/teachinggroup/{teachingGroupRefId}/studentattendancetimelist": {
      "get": {
        "tags": [
          "StudentAttendanceTimeList"
        ],
        "summary": "Retrieve StudentAttendanceTimeLists by TeachingGroup",
        "description": "Retrieve all available StudentAttendanceTimeLists for the given TeachingGroup at the given Provider",
        "operationId": "getStudentAttendanceTimeListsByTeachingGroup",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/teachingGroupRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttendanceTimeListCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattendancetimelist/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-byEntity": "ByTeachingGroup",
        "x-isBulk": true,
        "x-isSingle": false
      }
    },
    "/learningstandard": {
      "post": {
        "tags": [
          "LearningStandard"
        ],
        "summary": "Create one or more LearningStandards",
        "description": "<p>Bulk operation to create one or more LearningStandards which are published by MoE/NZQA, professional associations or other interested parties.</p>",
        "operationId": "createLearningStandards",
        "security": [
          {
            "sifDataObject": [
              "NZQA"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on LearningStandard",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LearningStandardCREATEList"
              },
              "example": {
                "LearningStandards": {
                  "LearningStandard": [
                    {
                      "LearningStandardRefId": "NC-91165-2",
                      "LearningStandardLocalId": "91165-v2",
                      "Title": "Chemistry, Organic Compounds",
                      "Number": 91165,
                      "VersionNo": 2,
                      "Publisher": {
                        "RefId": "cedf9eae-4358-408d-af57-ec0ea1b0d210"
                      },
                      "Description": "Demonstrate understanding of the properties of selected organic compounds",
                      "SubjectAreaList": {
                        "SubjectArea": [
                          "CHEM"
                        ]
                      },
                      "StandardType": "US",
                      "Status": "PU",
                      "Credits": 4,
                      "Level": 2,
                      "AssessmentType": "INT"
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LearningStandardCREATEList"
              },
              "example": "<LearningStandards>\n  <LearningStandard>\n    <LearningStandardRefId>NC-91165-2</LearningStandardRefId>\n    <LearningStandardLocalId>91165-v2</LearningStandardLocalId>\n    <Title>Chemistry</Title>\n    <Number>91165</Number>\n    <VersionNo>2</VersionNo>\n    <Publisher>\n      <RefId>cedf9eae-4358-408d-af57-ec0ea1b0d210</RefId>\n    </Publisher>\n    <Description>Demonstrate understanding of the properties of selected organic compounds</Description>\n    <SubjectAreaList>\n      <SubjectArea>CHEM</SubjectArea>\n    </SubjectAreaList>\n    <Status>PU</Status>\n    <Credits>4</Credits>\n    <Level>2</Level>\n    <AssessmentType>INT</AssessmentType>\n  </LearningStandard>\n</LearningStandards>  "
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardErrorList"
                },
                "example": [
                  {
                    "LearningStandard": {
                      "LearningStandardRefId": "NC-91165-2",
                      "LearningStandardLocalId": "91165-v2",
                      "Title": "Chemistry, Organic Compounds",
                      "Number": 91165,
                      "VersionNo": 2,
                      "Publisher": {
                        "RefId": "cedf9eae-4358-408d-af57-ec0ea1b0d210"
                      },
                      "Description": "Demonstrate understanding of the properties of selected organic compounds",
                      "SubjectAreaList": {
                        "SubjectArea": [
                          "CHEM"
                        ]
                      },
                      "StandardType": "US",
                      "Status": "PU",
                      "Credits": 4,
                      "Level": 2,
                      "AssessmentType": "INT"
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardErrorList"
                },
                "example": "<Response>\n  <LearningStandard>\n    <LearningStandardRefId>NC-91165-2</LearningStandardRefId>\n    <LearningStandardLocalId>91165-v2</LearningStandardLocalId>\n    <Title>Chemistry</Title>\n    <Number>91165</Number>\n    <VersionNo>2</VersionNo>\n    <Publisher>\n      <RefId>cedf9eae-4358-408d-af57-ec0ea1b0d210</RefId>\n    </Publisher>\n    <Description>Demonstrate understanding of the properties of selected organic compounds</Description>\n    <SubjectAreaList>\n      <SubjectArea>CHEM</SubjectArea>\n    </SubjectAreaList>\n    <Status>PU</Status>\n    <Credits>4</Credits>\n    <Level>2</Level>\n    <AssessmentType>INT</AssessmentType>\n  </LearningStandard>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "LearningStandardErrorList"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": true,
        "x-isSingle": false
      },
      "get": {
        "tags": [
          "LearningStandard"
        ],
        "summary": "Retrieve one or more LearningStandards",
        "description": "<p>Bulk operation to retrieve one or more LearningStandards which are published by MoE/NZQA, professional associations or other interested parties.</p>",
        "operationId": "getLearningStandards",
        "security": [
          {
            "sifDataObject": [
              "NZQA",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "LearningStandard"
        ],
        "summary": "Update one or more LearningStandards",
        "description": "<p>Bulk operation to update one or more LearningStandards  which are published by MoE/NZQA, professional associations or other interested parties.</p>",
        "operationId": "updateLearningStandards",
        "security": [
          {
            "sifDataObject": [
              "NZQA"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on LearningStandard",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LearningStandardCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1learningstandard/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LearningStandardCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1learningstandard/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard/post/responses/422/content/application~1xml/example"
                }
              }
            }
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": true,
        "x-isSingle": false
      },
      "patch": {
        "tags": [
          "LearningStandard"
        ],
        "summary": "Patch one or more LearningStandards",
        "description": "<p>Bulk operation to update one or more fields of one or more LearningStandards which are published by MoE/NZQA, professional associations or other interested parties.</p>",
        "operationId": "patchLearningStandards",
        "security": [
          {
            "sifDataObject": [
              "sysadmin"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on LearningStandard",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LearningStandardPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1learningstandard/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LearningStandardPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1learningstandard/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard/post/responses/422/content/application~1xml/example"
                }
              }
            }
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": true,
        "x-isSingle": false
      }
    },
    "/learningstandard/{learningStandardRefId}": {
      "get": {
        "tags": [
          "LearningStandard"
        ],
        "summary": "Retrieve a single LearningStandard",
        "description": "<p>Retrieve a single LearningStandard  which is published by MoE/NZQA, professional associations or other interested parties.</p>",
        "operationId": "getLearningStandard",
        "security": [
          {
            "sifDataObject": [
              "NZQA",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "learningStandardRefId",
            "in": "path",
            "description": "<p>A unique identifier for the LearningStandard assembled by concatenating the following fields, with '-' between each piece:\n <ul>\n  <li>LearningStandardFamily</li>\n  <li>Number</li>\n  <li>VersionNo</li>\n</ul></p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardCREATE"
                },
                "example": {
                  "LearningStandard": {
                    "LearningStandardRefId": "NC-91165-2",
                    "LearningStandardLocalId": "91165-v2",
                    "Title": "Chemistry, Organic Compounds",
                    "Number": 91165,
                    "VersionNo": 2,
                    "Publisher": {
                      "RefId": "cedf9eae-4358-408d-af57-ec0ea1b0d210"
                    },
                    "Description": "Demonstrate understanding of the properties of selected organic compounds",
                    "SubjectAreaList": {
                      "SubjectArea": [
                        "CHEM"
                      ]
                    },
                    "StandardType": "US",
                    "Status": "PU",
                    "Credits": 4,
                    "Level": 2,
                    "AssessmentType": "INT"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardCREATE"
                },
                "example": "<LearningStandard>\n  <LearningStandardRefId>NC-91165-2</LearningStandardRefId>\n  <LearningStandardLocalId>91165-v2</LearningStandardLocalId>\n  <Title>Chemistry</Title>\n  <Number>91165</Number>\n  <VersionNo>2</VersionNo>\n  <Publisher>\n    <RefId>cedf9eae-4358-408d-af57-ec0ea1b0d210</RefId>\n  </Publisher>\n  <Description>Demonstrate understanding of the properties of selected organic compounds</Description>\n  <SubjectAreaList>\n    <SubjectArea>CHEM</SubjectArea>\n  </SubjectAreaList>\n  <Status>PU</Status>\n  <Credits>4</Credits>\n  <Level>2</Level>\n  <AssessmentType>INT</AssessmentType>\n</LearningStandard>"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "LearningStandard"
        ],
        "summary": "Update a single LearningStandard",
        "description": "<p>Update a single LearningStandard  which is published by MoE/NZQA, professional associations or other interested parties.</p>",
        "operationId": "updateLearningStandard",
        "security": [
          {
            "sifDataObject": [
              "NZQA"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "learningStandardRefId",
            "in": "path",
            "description": "<p>A unique identifier for the LearningStandard assembled by concatenating the following fields, with '-' between each piece:\n <ul>\n  <li>LearningStandardFamily</li>\n  <li>Number</li>\n  <li>VersionNo</li>\n</ul></p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on LearningStandard",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LearningStandardCREATE"
              },
              "example": {
                "$ref": "#/paths/~1learningstandard~1%7BlearningStandardRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LearningStandardCREATE"
              },
              "example": {
                "$ref": "#/paths/~1learningstandard~1%7BlearningStandardRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard~1%7BlearningStandardRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard~1%7BlearningStandardRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": false,
        "x-isSingle": true
      },
      "patch": {
        "tags": [
          "LearningStandard"
        ],
        "summary": "Patch a single LearningStandard",
        "description": "<p>Update some fields of a single LearningStandard which is published by MoE/NZQA, professional associations or other interested parties.</p>",
        "operationId": "patchLearningStandard",
        "security": [
          {
            "sifDataObject": [
              "NZQA"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "learningStandardRefId",
            "in": "path",
            "description": "<p>A unique identifier for the LearningStandard assembled by concatenating the following fields, with '-' between each piece:\n <ul>\n  <li>LearningStandardFamily</li>\n  <li>Number</li>\n  <li>VersionNo</li>\n</ul></p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on LearningStandard",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LearningStandardPATCH"
              },
              "example": {
                "$ref": "#/paths/~1learningstandard~1%7BlearningStandardRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LearningStandardPATCH"
              },
              "example": {
                "$ref": "#/paths/~1learningstandard~1%7BlearningStandardRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard~1%7BlearningStandardRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LearningStandardCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1learningstandard~1%7BlearningStandardRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": false,
        "x-isSingle": true
      }
    },
    "/credential": {
      "post": {
        "tags": [
          "Credential"
        ],
        "summary": "Create one or more Credentials",
        "description": "<p>Bulk operation to create one or more Credentials, which are granted by national bodies, professional associations or other interested parties.</p>",
        "operationId": "createCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          }
        ],
        "security": [
          {
            "sifDataObject": [
              "NZQA"
            ]
          }
        ],
        "requestBody": {
          "description": "CRUD operation on Credential",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialCREATEList"
              },
              "example": {
                "Credentials": {
                  "Credential": [
                    {
                      "CredentialRefId": "2b560779-872b-4491-afd6-3c6bd5f1c8cc",
                      "CredentialLocalId": "91165",
                      "Title": "NCEA Level 2 - Endorsed with Merit",
                      "VersionNo": 2,
                      "Administrator": {
                        "RefId": "3d614c16-9046-47d1-87b5-51438590de15",
                        "Name": "NZQA"
                      },
                      "Description": "Achieved sufficient credits endorsed with merit",
                      "Status": "PU",
                      "Level": "2"
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CredentialCREATEList"
              },
              "example": "<Credentials>\n  <Credential>\n    <CredentialRefId>2b560779-872b-4491-afd6-3c6bd5f1c8cc</CredentialRefId>\n    <CredentialLocalId>91165</CredentialLocalId>\n    <Title>NCEA Level 2 - Endorsed with Merit</Title>\n    <VersionNo>2</VersionNo>\n    <Administrator>\n      <RefId>3d614c16-9046-47d1-87b5-51438590de15</RefId>\n      <Name>NZQA</Name>\n    </Administrator>\n    <Description>Achieved sufficient credits endorsed with merit</Description>\n    <Status>PU</Status>\n    <Level>2</Level>\n  </Credential>\n</Credentials>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1credential/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1credential/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialErrorList"
                },
                "example": [
                  {
                    "Credential": {
                      "CredentialRefId": "2b560779-872b-4491-afd6-3c6bd5f1c8cc",
                      "CredentialLocalId": "91165",
                      "Title": "NCEA Level 2 - Endorsed with Merit",
                      "VersionNo": 2,
                      "Administrator": {
                        "RefId": "3d614c16-9046-47d1-87b5-51438590de15",
                        "Name": "NZQA"
                      },
                      "Description": "Achieved sufficient credits endorsed with merit",
                      "Status": "PU",
                      "Level": "2"
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialErrorList"
                },
                "example": "<Response>\n  <Credential>\n    <CredentialRefId>2b560779-872b-4491-afd6-3c6bd5f1c8cc</CredentialRefId>\n    <CredentialLocalId>91165</CredentialLocalId>\n    <Title>NCEA Level 2 - Endorsed with Merit</Title>\n    <VersionNo>2</VersionNo>\n    <Administrator>\n      <RefId>3d614c16-9046-47d1-87b5-51438590de15</RefId>\n      <Name>NZQA</Name>\n    </Administrator>\n    <Description>Achieved sufficient credits endorsed with merit</Description>\n    <Status>PU</Status>\n    <Level>2</Level>\n  </Credential>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "CredentialErrorList"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": true,
        "x-isSingle": false
      },
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Retrieve one or more Credentials",
        "description": "<p>Bulk operation to retrieve one or more Credentials,  which are granted by national bodies, professional associations or other interested parties.</p>",
        "operationId": "getCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          }
        ],
        "security": [
          {
            "sifDataObject": [
              "NZQA",
              "SMS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1credential/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1credential/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "Credential"
        ],
        "summary": "Update one or more Credentials",
        "description": "<p>Bulk operation to update one or more Credentials,  which are granted by national bodies, professional associations or other interested parties.</p>",
        "operationId": "updateCredentials",
        "security": [
          {
            "sifDataObject": [
              "NZQA"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on Credential",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1credential/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CredentialCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1credential/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1credential/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1credential/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1credential/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1credential/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "CredentialErrorList"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": true,
        "x-isSingle": false
      },
      "patch": {
        "tags": [
          "Credential"
        ],
        "summary": "Patch one or more Credentials",
        "description": "<p>Bulk operation to update one or more fields of one or more Credentials,  which are granted by national bodies, professional associations or other  interested parties.</p>",
        "operationId": "patchCredentials",
        "security": [
          {
            "sifDataObject": [
              "NZQA"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on Credential",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1credential/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CredentialPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1credential/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1credential/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1credential/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1credential/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1credential/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "CredentialErrorList"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": true,
        "x-isSingle": false
      }
    },
    "/credential/{credentialRefId}": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Retrieve a single Credential",
        "description": "<p>Bulk operation to retrieve a single Credential,  which are granted by national bodies, professional associations or other interested parties.</p>",
        "operationId": "getCredential",
        "security": [
          {
            "sifDataObject": [
              "NZQA",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "credentialRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular\n version or edition of the Credential.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialCREATE"
                },
                "example": {
                  "Credential": {
                    "CredentialRefId": "2b560779-872b-4491-afd6-3c6bd5f1c8cc",
                    "CredentialLocalId": "91165",
                    "Title": "NCEA Level 2 - Endorsed with Merit",
                    "VersionNo": 2,
                    "Administrator": {
                      "RefId": "3d614c16-9046-47d1-87b5-51438590de15",
                      "Name": "NZQA"
                    },
                    "Description": "Achieved sufficient credits endorsed with merit",
                    "Status": "PU",
                    "Level": "2"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialCREATE"
                },
                "example": "<Credential>\n  <CredentialRefId>2b560779-872b-4491-afd6-3c6bd5f1c8cc</CredentialRefId>\n  <CredentialLocalId>91165</CredentialLocalId>\n  <Title>NCEA Level 2 - Endorsed with Merit</Title>\n  <VersionNo>2</VersionNo>\n  <Administrator>\n    <RefId>3d614c16-9046-47d1-87b5-51438590de15</RefId>\n    <Name>NZQA</Name>\n  </Administrator>\n  <Description>Achieved sufficient credits endorsed with merit</Description>\n  <Status>PU</Status>\n  <Level>2</Level>\n</Credential>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "Credential"
        ],
        "summary": "Update a single Credential",
        "description": "<p>Bulk operation to update a single Credential,  which are granted by national bodies, professional associations or other interested parties.</p>",
        "operationId": "updateCredential",
        "security": [
          {
            "sifDataObject": [
              "NZQA"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "credentialRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular\n version or edition of the Credential.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on Credential",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialCREATE"
              },
              "example": {
                "$ref": "#/paths/~1credential~1%7BcredentialRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CredentialCREATE"
              },
              "example": {
                "$ref": "#/paths/~1credential~1%7BcredentialRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1credential~1%7BcredentialRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1credential~1%7BcredentialRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": false,
        "x-isSingle": true
      },
      "patch": {
        "tags": [
          "Credential"
        ],
        "summary": "Patch a single Credential",
        "description": "<p>Bulk operation to update some fields of a single Credential,  which are granted by national bodies, professional associations or other interested parties.</p>",
        "operationId": "patchCredential",
        "security": [
          {
            "sifDataObject": [
              "NZQA"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "name": "credentialRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular\n version or edition of the Credential.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on Credential",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialPATCH"
              },
              "example": {
                "$ref": "#/paths/~1credential~1%7BcredentialRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CredentialPATCH"
              },
              "example": {
                "$ref": "#/paths/~1credential~1%7BcredentialRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1credential~1%7BcredentialRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1credential~1%7BcredentialRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-noFKPKs": true,
        "x-isBulk": false,
        "x-isSingle": true
      }
    },
    "/studentassessmenttask": {
      "post": {
        "tags": [
          "StudentAssessmentTask"
        ],
        "summary": "Create one or more StudentAssessmentTasks",
        "description": "<p>Bulk operation to create multiple student's attempts at multiple assignments, essays, class tests,  internal or external assessment exams, or any other tasks that are set to students and  assessed as part of the learning process, within the scope of the Provider that the student is enrolled in.</p>",
        "operationId": "createStudentAssessmentTasks",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAssessmentTask",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskCREATEList"
              },
              "example": {
                "StudentAssessmentTasks": {
                  "StudentAssessmentTask": [
                    {
                      "StudentAssessmentTaskRefId": "359d7510-1ad0-a9d7-a8c3-dad0a85103a2",
                      "StudentAssessmentTaskLocalId": "TST-HPotter-3a",
                      "Student": {
                        "RefId": "cd106d6d-d9d5-41fb-9943-5feb967c9435",
                        "LocalId": "HP-850139",
                        "Name": "Harry Potter"
                      },
                      "AssessmentTask": {
                        "RefId": "d0a0a27a-d0a8-510a-d9d7-5101a8c3da39"
                      },
                      "OrganisationInvolvedList": {
                        "OrganisationInvolved": [
                          {
                            "RefId": "9651",
                            "OrganisationRole": "PRO"
                          }
                        ]
                      },
                      "StaffInvolvedList": {
                        "StaffInvolved": [
                          {
                            "RefId": "228a2cbe-93c4-46ba-91fa-b3ae689eb437",
                            "Name": "Prof. McGonnegal",
                            "StaffRole": "INV"
                          }
                        ]
                      },
                      "Status": "PUB",
                      "DateTimeAssessmentScheduled": "2018-11-25T09:00:00+12:00",
                      "AssessmentAttempt": 1
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskCREATEList"
              },
              "example": "<StudentAssessmentTasks>\n  <StudentAssessmentTask>\n    <StudentAssessmentTaskRefId>359d7510-1ad0-a9d7-a8c3-dad0a85103a2</StudentAssessmentTaskRefId>\n    <Student>\n      <RefId>cd106d6d-d9d5-41fb-9943-5feb967c9435</RefId>\n      <LocalId>HP-850139</LocalId>\n      <Name>Harry Potter</Name>\n    </Student>\n    <AssessmentTask>\n      <RefId>d0a0a27a-d0a8-510a-d9d7-5101a8c3da39</RefId>\n    </AssessmentTask>\n    <OrganisationInvolvedList>\n      <OrganisationInvolved>\n        <RefId>ad30d3a6-e663-4d5b-8975-6c4ffc745bfb</RefId>\n        <OrganisationRole>PRO</OrganisationRole>\n      </OrganisationInvolved>\n    </OrganisationInvolvedList>\n    <StaffInvolvedList>\n      <StaffInvolved>\n        <RefId>228a2cbe-93c4-46ba-91fa-b3ae689eb437</RefId>\n        <Name>Prof. McGonnegal</Name>\n        <StaffRole>INV</StaffRole>\n      </StaffInvolved>\n    </StaffInvolvedList>\n    <DateTimeAssessmentScheduled>2018-11-25T09:00:00+12:00</DateTimeAssessmentScheduled>\n  </StudentAssessmentTask>\n</StudentAssessmentTasks>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskErrorList"
                },
                "example": [
                  {
                    "StudentAssessmentTask": {
                      "StudentAssessmentTaskRefId": "359d7510-1ad0-a9d7-a8c3-dad0a85103a2",
                      "StudentAssessmentTaskLocalId": "TST-HPotter-3a",
                      "Student": {
                        "RefId": "cd106d6d-d9d5-41fb-9943-5feb967c9435",
                        "LocalId": "HP-850139",
                        "Name": "Harry Potter"
                      },
                      "AssessmentTask": {
                        "RefId": "d0a0a27a-d0a8-510a-d9d7-5101a8c3da39"
                      },
                      "OrganisationInvolvedList": {
                        "OrganisationInvolved": [
                          {
                            "RefId": "9651",
                            "OrganisationRole": "PRO"
                          }
                        ]
                      },
                      "StaffInvolvedList": {
                        "StaffInvolved": [
                          {
                            "RefId": "228a2cbe-93c4-46ba-91fa-b3ae689eb437",
                            "Name": "Prof. McGonnegal",
                            "StaffRole": "INV"
                          }
                        ]
                      },
                      "Status": "PUB",
                      "DateTimeAssessmentScheduled": "2018-11-25T09:00:00+12:00",
                      "AssessmentAttempt": 1
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskErrorList"
                },
                "example": "<Response>\n  <StudentAssessmentTask>\n    <StudentAssessmentTaskRefId>359d7510-1ad0-a9d7-a8c3-dad0a85103a2</StudentAssessmentTaskRefId>\n    <Student>\n      <RefId>cd106d6d-d9d5-41fb-9943-5feb967c9435</RefId>\n      <LocalId>HP-850139</LocalId>\n      <Name>Harry Potter</Name>\n    </Student>\n    <AssessmentTask>\n      <RefId>d0a0a27a-d0a8-510a-d9d7-5101a8c3da39</RefId>\n    </AssessmentTask>\n    <OrganisationInvolvedList>\n      <OrganisationInvolved>\n        <RefId>ad30d3a6-e663-4d5b-8975-6c4ffc745bfb</RefId>\n        <OrganisationRole>PRO</OrganisationRole>\n      </OrganisationInvolved>\n    </OrganisationInvolvedList>\n    <StaffInvolvedList>\n      <StaffInvolved>\n        <RefId>228a2cbe-93c4-46ba-91fa-b3ae689eb437</RefId>\n        <Name>Prof. McGonnegal</Name>\n        <StaffRole>INV</StaffRole>\n      </StaffInvolved>\n    </StaffInvolvedList>\n    <DateTimeAssessmentScheduled>2018-11-25T09:00:00+12:00</DateTimeAssessmentScheduled>\n  </StudentAssessmentTask>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "StudentAssessmentTaskErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "OrganisationInvolvedList.OrganisationInvolved[0].RefId"
        ]
      },
      "get": {
        "tags": [
          "StudentAssessmentTask"
        ],
        "summary": "Retrieve one or more StudentAssessmentTasks",
        "description": "<p>Bulk operation to retrieve multiple student's attempts at multiple assignments, essays, class tests,  internal or external assessment exams, or any other tasks that are set to students and  assessed as part of the learning process, within the scope of the Provider that the student is enrolled in.</p>",
        "operationId": "getStudentAssessmentTasks",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "StudentAssessmentTask"
        ],
        "summary": "Update one or more StudentAssessmentTasks",
        "description": "<p>Bulk operation to update multiple student's attempts at multiple assignments, essays, class tests,  internal or external assessment exams, or any other tasks that are set to students and  assessed as part of the learning process, within the scope of the Provider that the student is enrolled in.</p>",
        "operationId": "updateStudentAssessmentTasks",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAssessmentTask",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttask/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttask/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentAssessmentTaskErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "OrganisationInvolvedList.OrganisationInvolved[0].RefId"
        ]
      },
      "patch": {
        "tags": [
          "StudentAssessmentTask"
        ],
        "summary": "Patch one or more StudentAssessmentTasks",
        "description": "<p>Bulk operation to update one or more fields of multiple student's attempts at multiple  assignments, essays, class tests, internal or external assessment exams, or any other tasks that are set to students and assessed as part of the learning process, within  the scope of the Provider that the student is enrolled in.</p>",
        "operationId": "patchStudentAssessmentTasks",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAssessmentTask",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttask/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttask/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentAssessmentTaskErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "OrganisationInvolvedList.OrganisationInvolved[0].RefId"
        ]
      }
    },
    "/studentassessmenttask/{studentAssessmentTaskRefId}": {
      "get": {
        "tags": [
          "StudentAssessmentTask"
        ],
        "summary": "Retrieve a single StudentAssessmentTask",
        "description": "<p>Retrieve a single student's attempt at a single assignment, essay, class test,  internal or external assessment exam, or any other task that is set to students and  assessed as part of the learning process, within the scope of the Provider that the student is enrolled in.</p>",
        "operationId": "getStudentAssessmentTask",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentAssessmentTaskRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular student's attempt at the particular assignment, essay, class test, internal or external assessment exam, or any other <a href=\"#tag/AssessmentTask\">AssessmentTask</a> that is being attempted.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATE"
                },
                "example": {
                  "StudentAssessmentTask": {
                    "StudentAssessmentTaskRefId": "359d7510-1ad0-a9d7-a8c3-dad0a85103a2",
                    "StudentAssessmentTaskLocalId": "TST-HPotter-3a",
                    "Student": {
                      "RefId": "cd106d6d-d9d5-41fb-9943-5feb967c9435",
                      "LocalId": "HP-850139",
                      "Name": "Harry Potter"
                    },
                    "AssessmentTask": {
                      "RefId": "d0a0a27a-d0a8-510a-d9d7-5101a8c3da39"
                    },
                    "OrganisationInvolvedList": {
                      "OrganisationInvolved": [
                        {
                          "RefId": "9651",
                          "OrganisationRole": "PRO"
                        }
                      ]
                    },
                    "StaffInvolvedList": {
                      "StaffInvolved": [
                        {
                          "RefId": "228a2cbe-93c4-46ba-91fa-b3ae689eb437",
                          "Name": "Prof. McGonnegal",
                          "StaffRole": "INV"
                        }
                      ]
                    },
                    "Status": "PUB",
                    "DateTimeAssessmentScheduled": "2018-11-25T09:00:00+12:00",
                    "AssessmentAttempt": 1
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATE"
                },
                "example": "<StudentAssessmentTask>\n  <StudentAssessmentTaskRefId>359d7510-1ad0-a9d7-a8c3-dad0a85103a2</StudentAssessmentTaskRefId>\n  <Student>\n    <RefId>cd106d6d-d9d5-41fb-9943-5feb967c9435</RefId>\n    <LocalId>HP-850139</LocalId>\n    <Name>Harry Potter</Name>\n  </Student>\n  <AssessmentTask>\n    <RefId>d0a0a27a-d0a8-510a-d9d7-5101a8c3da39</RefId>\n  </AssessmentTask>\n  <OrganisationInvolvedList>\n    <OrganisationInvolved>\n      <RefId>ad30d3a6-e663-4d5b-8975-6c4ffc745bfb</RefId>\n      <OrganisationRole>PRO</OrganisationRole>\n    </OrganisationInvolved>\n  </OrganisationInvolvedList>\n  <StaffInvolvedList>\n    <StaffInvolved>\n      <RefId>228a2cbe-93c4-46ba-91fa-b3ae689eb437</RefId>\n      <Name>Prof. McGonnegal</Name>\n      <StaffRole>INV</StaffRole>\n    </StaffInvolved>\n  </StaffInvolvedList>\n  <DateTimeAssessmentScheduled>2018-11-25T09:00:00+12:00</DateTimeAssessmentScheduled>\n</StudentAssessmentTask>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "StudentAssessmentTask"
        ],
        "summary": "Update a single StudentAssessmentTask",
        "description": "<p>Update a single student's attempt at a single assignment, essay, class test,  internal or external assessment exam, or any other task that is set to students and  assessed as part of the learning process, within the scope of the Provider that the student is enrolled in.</p>",
        "operationId": "updateStudentAssessmentTask",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentAssessmentTaskRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular student's attempt at the particular assignment, essay, class test, internal or external assessment exam, or any other <a href=\"#tag/AssessmentTask\">AssessmentTask</a> that is being attempted.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAssessmentTask",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttask~1%7BstudentAssessmentTaskRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttask~1%7BstudentAssessmentTaskRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask~1%7BstudentAssessmentTaskRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask~1%7BstudentAssessmentTaskRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "OrganisationInvolvedList.OrganisationInvolved[0].RefId"
        ]
      },
      "patch": {
        "tags": [
          "StudentAssessmentTask"
        ],
        "summary": "Patch a single StudentAssessmentTask",
        "description": "<p>Update one or more fields of a single student's attempt at a single assignment, essay, class test,  internal or external assessment exam, or any other task that is set to students and  assessed as part of the learning process, within the scope of the Provider that the student is enrolled in.</p>",
        "operationId": "patchStudentAssessmentTask",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentAssessmentTaskRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular student's attempt at the particular assignment, essay, class test, internal or external assessment exam, or any other <a href=\"#tag/AssessmentTask\">AssessmentTask</a> that is being attempted.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAssessmentTask",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttask~1%7BstudentAssessmentTaskRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttask~1%7BstudentAssessmentTaskRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask~1%7BstudentAssessmentTaskRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask~1%7BstudentAssessmentTaskRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "OrganisationInvolvedList.OrganisationInvolved[0].RefId"
        ]
      }
    },
    "/studentpersonal/{studentPersonalRefId}/studentassessmenttask": {
      "get": {
        "tags": [
          "StudentAssessmentTask"
        ],
        "summary": "Retrieve StudentAssessmentTasks by Student",
        "description": "<p>Retrieve all of a particular student's available attempts at multiple assignments, essays, class tests, internal or external assessment exams, or any other tasks that are set to students and assessed as part of the learning process.</p>",
        "operationId": "getStudentAssessmentTasksByStudent",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/studentPersonalRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttask/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-byEntity": "ByStudentPersonal",
        "x-isBulk": true,
        "x-isSingle": false
      }
    },
    "/studentassessmenttaskresult": {
      "post": {
        "tags": [
          "StudentAssessmentTaskResult"
        ],
        "summary": "Create one or more StudentAssessmentTaskResults",
        "description": "<p>Bulk operation to create one or more results from students' attempts at one or more assignments, essays, class tests, internal or external assessment exams, or any other tasks that are set to students and assessed as part of the learning process, within the scope of the Provider that the student is enrolled in.</p>",
        "operationId": "createStudentAssessmentTaskResults",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAssessmentTaskResult",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATEList"
              },
              "example": {
                "StudentAssessmentTaskResults": {
                  "StudentAssessmentTaskResult": [
                    {
                      "StudentAssessmentTaskResultRefId": "359d7510-1ad0-a9d7-a8c3-dad0a85103a2",
                      "StudentAssessmentTaskResultLocalId": "RSLT-HPotter-3a",
                      "AssessmentType": "INT",
                      "Student": {
                        "RefId": "a75a0010-1a8c-301d-02e3-a05b359d0a00"
                      },
                      "OrganisationInvolvedList": {
                        "OrganisationInvolved": [
                          {
                            "RefId": "9651",
                            "OrganisationRole": "PRO"
                          }
                        ]
                      },
                      "SubjectAreaList": {
                        "SubjectArea": [
                          "MATH"
                        ]
                      },
                      "AssessmentMethodology": "P",
                      "EvaluationType": "F",
                      "Timeframe": "OUT",
                      "ResultScoreList": {
                        "ResultScore": [
                          {
                            "Competency": "Maths",
                            "ScoreMetric": "RAW",
                            "ScoreValue": "25"
                          },
                          {
                            "Competency": "Maths",
                            "ScoreMetric": "SCA",
                            "ScoreValue": "38.5"
                          },
                          {
                            "Competency": "Maths",
                            "ScoreMetric": "MAR",
                            "ScoreValue": "5.0"
                          },
                          {
                            "Competency": "Maths",
                            "ScoreMetric": "STA",
                            "ScoreValue": "6"
                          },
                          {
                            "Competency": "Maths",
                            "ScoreMetric": "YEA",
                            "ScoreValue": "4"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATEList"
              },
              "example": "<StudentAssessmentTaskResults>\n  <StudentAssessmentTaskResult>\n    <StudentAssessmentTaskResultRefId>359d7510-1ad0-a9d7-a8c3-dad0a85103a2</StudentAssessmentTaskResultRefId>\n    <AssessmentType>INT</AssessmentType>\n    <Student>\n      <RefId>a75a0010-1a8c-301d-02e3-a05b359d0a00</RefId>\n    </Student>\n    <OrganisationInvolvedList>\n      <OrganisationInvolved>\n        <RefId>9651</RefId>\n        <OrganisationRole>PRO</OrganisationRole>\n      </OrganisationInvolved>\n    </OrganisationInvolvedList>\n    <SubjectAreaList>\n      <SubjectArea>MATH</SubjectArea>\n    </SubjectAreaList>\n    <SummativeIndicator>N</SummativeIndicator>\n    <FormativeIndicator>Y</FormativeIndicator>\n    <ResultScoreList>\n      <ResultScore>\n        <ScoreMetric>RAW</ScoreMetric>\n        <ScoreValue>25</ScoreValue>\n      </ResultScore>\n      <ResultScore>\n        <ScoreMetric>SCA</ScoreMetric>\n        <ScoreValue>38.5</ScoreValue>\n      </ResultScore>\n      <ResultScore>\n        <ScoreMetric>MAR</ScoreMetric>\n        <ScoreValue>5.0</ScoreValue>\n      </ResultScore>\n      <ResultScore>\n        <ScoreMetric>STA</ScoreMetric>\n        <ScoreValue>6</ScoreValue>\n      </ResultScore>\n      <ResultScore>\n        <ScoreMetric>YEA</ScoreMetric>\n        <ScoreValue>4</ScoreValue>\n      </ResultScore>\n    </ResultScoreList>\n  </StudentAssessmentTaskResult>\n</StudentAssessmentTaskResults>  "
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultErrorList"
                },
                "example": [
                  {
                    "StudentAssessmentTaskResult": {
                      "StudentAssessmentTaskResultRefId": "359d7510-1ad0-a9d7-a8c3-dad0a85103a2",
                      "StudentAssessmentTaskResultLocalId": "RSLT-HPotter-3a",
                      "AssessmentType": "INT",
                      "Student": {
                        "RefId": "a75a0010-1a8c-301d-02e3-a05b359d0a00"
                      },
                      "OrganisationInvolvedList": {
                        "OrganisationInvolved": [
                          {
                            "RefId": "9651",
                            "OrganisationRole": "PRO"
                          }
                        ]
                      },
                      "SubjectAreaList": {
                        "SubjectArea": [
                          "MATH"
                        ]
                      },
                      "AssessmentMethodology": "P",
                      "EvaluationType": "F",
                      "Timeframe": "OUT",
                      "ResultScoreList": {
                        "ResultScore": [
                          {
                            "Competency": "Maths",
                            "ScoreMetric": "RAW",
                            "ScoreValue": "25"
                          },
                          {
                            "Competency": "Maths",
                            "ScoreMetric": "SCA",
                            "ScoreValue": "38.5"
                          },
                          {
                            "Competency": "Maths",
                            "ScoreMetric": "MAR",
                            "ScoreValue": "5.0"
                          },
                          {
                            "Competency": "Maths",
                            "ScoreMetric": "STA",
                            "ScoreValue": "6"
                          },
                          {
                            "Competency": "Maths",
                            "ScoreMetric": "YEA",
                            "ScoreValue": "4"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultErrorList"
                },
                "example": "<Response>\n  <StudentAssessmentTaskResult>\n    <StudentAssessmentTaskResultRefId>359d7510-1ad0-a9d7-a8c3-dad0a85103a2</StudentAssessmentTaskResultRefId>\n    <AssessmentType>INT</AssessmentType>\n    <Student>\n      <RefId>a75a0010-1a8c-301d-02e3-a05b359d0a00</RefId>\n    </Student>\n    <OrganisationInvolvedList>\n      <OrganisationInvolved>\n        <RefId>9651</RefId>\n        <OrganisationRole>PRO</OrganisationRole>\n      </OrganisationInvolved>\n    </OrganisationInvolvedList>\n    <SubjectAreaList>\n      <SubjectArea>MATH</SubjectArea>\n    </SubjectAreaList>\n    <SummativeIndicator>N</SummativeIndicator>\n    <FormativeIndicator>Y</FormativeIndicator>\n    <ResultScoreList>\n      <ResultScore>\n        <ScoreMetric>RAW</ScoreMetric>\n        <ScoreValue>25</ScoreValue>\n      </ResultScore>\n      <ResultScore>\n        <ScoreMetric>SCA</ScoreMetric>\n        <ScoreValue>38.5</ScoreValue>\n      </ResultScore>\n      <ResultScore>\n        <ScoreMetric>MAR</ScoreMetric>\n        <ScoreValue>5.0</ScoreValue>\n      </ResultScore>\n      <ResultScore>\n        <ScoreMetric>STA</ScoreMetric>\n        <ScoreValue>6</ScoreValue>\n      </ResultScore>\n      <ResultScore>\n        <ScoreMetric>YEA</ScoreMetric>\n        <ScoreValue>4</ScoreValue>\n      </ResultScore>\n    </ResultScoreList>\n  </StudentAssessmentTaskResult>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "StudentAssessmentTaskResultErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "OrganisationInvolvedList.OrganisationInvolved[0].RefId"
        ]
      },
      "get": {
        "tags": [
          "StudentAssessmentTaskResult"
        ],
        "summary": "Retrieve one or more StudentAssessmentTaskResults",
        "description": "<p>Bulk operation to retrieve one or more results from students' attempts at one or more assignments, essays, class tests, internal or external assessment exams, or any other tasks that are set to students and assessed as part of the learning process, within the scope of the Provider that the student is enrolled in.</p>",
        "operationId": "getStudentAssessmentTaskResults",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "StudentAssessmentTaskResult"
        ],
        "summary": "Update one or more StudentAssessmentTaskResults",
        "description": "<p>Bulk operation to update one or more results from students' attempts at one or more assignments, essays, class tests, internal or external assessment exams, or any other tasks that are set to students and assessed as part of the learning process, within the scope of the Provider that the student is enrolled in.</p>",
        "operationId": "updateStudentAssessmentTaskResults",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAssessmentTaskResult",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttaskresult/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttaskresult/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentAssessmentTaskResultErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "OrganisationInvolvedList.OrganisationInvolved[0].RefId"
        ]
      },
      "patch": {
        "tags": [
          "StudentAssessmentTaskResult"
        ],
        "summary": "Patch one or more StudentAssessmentTaskResults",
        "description": "<p>Bulk operation to update one or more fields of one or more results from students'  attempts at one or more assignments, essays, class tests, internal or external assessment exams, or any other tasks that are set to students and assessed as part of the learning  process, within the scope of the Provider that the student is enrolled in.</p>",
        "operationId": "patchStudentAssessmentTaskResults",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAssessmentTaskResult",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskResultPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttaskresult/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskResultPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttaskresult/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentAssessmentTaskResultErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "OrganisationInvolvedList.OrganisationInvolved[0].RefId"
        ]
      }
    },
    "/studentassessmenttaskresult/{studentAssessmentTaskResultRefId}": {
      "get": {
        "tags": [
          "StudentAssessmentTaskResult"
        ],
        "summary": "Retrieve a single StudentAssessmentTaskResult",
        "description": "<p>Retrieve a single result from a particular student's attempt at a single assignment, essay, class test, internal or external assessment exam, or any other tasks that are set to students and assessed as part of the learning process, within the scope of the Provider that the student is enrolled in.</p>",
        "operationId": "getStudentAssessmentTaskResult",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentAssessmentTaskResultRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the result from a particular student's attempt at a single assignment, essay, class test, internal or external assessment exam, or any other  <a href=\"#tag/AssessmentTask\">AssessmentTask</a>.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATE"
                },
                "example": {
                  "StudentAssessmentTaskResult": {
                    "StudentAssessmentTaskResultRefId": "359d7510-1ad0-a9d7-a8c3-dad0a85103a2",
                    "StudentAssessmentTaskResultLocalId": "RSLT-HPotter-3a",
                    "AssessmentType": "INT",
                    "Student": {
                      "RefId": "a75a0010-1a8c-301d-02e3-a05b359d0a00"
                    },
                    "OrganisationInvolvedList": {
                      "OrganisationInvolved": [
                        {
                          "RefId": "9651",
                          "OrganisationRole": "PRO"
                        }
                      ]
                    },
                    "SubjectAreaList": {
                      "SubjectArea": [
                        "MATH"
                      ]
                    },
                    "AssessmentMethodology": "P",
                    "EvaluationType": "F",
                    "Timeframe": "OUT",
                    "ResultScoreList": {
                      "ResultScore": [
                        {
                          "Competency": "Maths",
                          "ScoreMetric": "RAW",
                          "ScoreValue": "25"
                        },
                        {
                          "Competency": "Maths",
                          "ScoreMetric": "SCA",
                          "ScoreValue": "38.5"
                        },
                        {
                          "Competency": "Maths",
                          "ScoreMetric": "MAR",
                          "ScoreValue": "5.0"
                        },
                        {
                          "Competency": "Maths",
                          "ScoreMetric": "STA",
                          "ScoreValue": "6"
                        },
                        {
                          "Competency": "Maths",
                          "ScoreMetric": "YEA",
                          "ScoreValue": "4"
                        }
                      ]
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATE"
                },
                "example": "<StudentAssessmentTaskResult>\n  <StudentAssessmentTaskResultRefId>359d7510-1ad0-a9d7-a8c3-dad0a85103a2</StudentAssessmentTaskResultRefId>\n  <AssessmentType>INT</AssessmentType>\n  <Student>\n    <RefId>a75a0010-1a8c-301d-02e3-a05b359d0a00</RefId>\n  </Student>\n  <OrganisationInvolvedList>\n    <OrganisationInvolved>\n      <RefId>9651</RefId>\n      <OrganisationRole>PRO</OrganisationRole>\n    </OrganisationInvolved>\n  </OrganisationInvolvedList>\n  <SubjectAreaList>\n    <SubjectArea>MATH</SubjectArea>\n  </SubjectAreaList>\n  <SummativeIndicator>N</SummativeIndicator>\n  <FormativeIndicator>Y</FormativeIndicator>\n  <ResultScoreList>\n    <ResultScore>\n      <ScoreMetric>RAW</ScoreMetric>\n      <ScoreValue>25</ScoreValue>\n    </ResultScore>\n    <ResultScore>\n      <ScoreMetric>SCA</ScoreMetric>\n      <ScoreValue>38.5</ScoreValue>\n    </ResultScore>\n    <ResultScore>\n      <ScoreMetric>MAR</ScoreMetric>\n      <ScoreValue>5.0</ScoreValue>\n    </ResultScore>\n    <ResultScore>\n      <ScoreMetric>STA</ScoreMetric>\n      <ScoreValue>6</ScoreValue>\n    </ResultScore>\n    <ResultScore>\n      <ScoreMetric>YEA</ScoreMetric>\n      <ScoreValue>4</ScoreValue>\n    </ResultScore>\n  </ResultScoreList>\n</StudentAssessmentTaskResult>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "StudentAssessmentTaskResult"
        ],
        "summary": "Update a single StudentAssessmentTaskResult",
        "description": "<p>Update a single result from a particular student's attempt at a single assignment, essay, class test, internal or external assessment exam, or any other tasks that are set to students and assessed as part of the learning process, within the scope of the Provider that the student is enrolled in.</p>",
        "operationId": "updateStudentAssessmentTaskResult",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentAssessmentTaskResultRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the result from a particular student's attempt at a single assignment, essay, class test, internal or external assessment exam, or any other  <a href=\"#tag/AssessmentTask\">AssessmentTask</a>.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAssessmentTaskResult",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttaskresult~1%7BstudentAssessmentTaskResultRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttaskresult~1%7BstudentAssessmentTaskResultRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult~1%7BstudentAssessmentTaskResultRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult~1%7BstudentAssessmentTaskResultRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "OrganisationInvolvedList.OrganisationInvolved[0].RefId"
        ]
      },
      "patch": {
        "tags": [
          "StudentAssessmentTaskResult"
        ],
        "summary": "Patch a single StudentAssessmentTaskResult",
        "description": "<p>Update one or more fields from a single result from a particular student's attempt at a single assignment, essay, class test, internal or external assessment exam, or any other tasks that are set to students and assessed as part of the learning process, within the  scope of the Provider that the student is enrolled in.</p>",
        "operationId": "patchStudentAssessmentTaskResult",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentAssessmentTaskResultRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the result from a particular student's attempt at a single assignment, essay, class test, internal or external assessment exam, or any other  <a href=\"#tag/AssessmentTask\">AssessmentTask</a>.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAssessmentTaskResult",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskResultPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttaskresult~1%7BstudentAssessmentTaskResultRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAssessmentTaskResultPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentassessmenttaskresult~1%7BstudentAssessmentTaskResultRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult~1%7BstudentAssessmentTaskResultRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult~1%7BstudentAssessmentTaskResultRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "OrganisationInvolvedList.OrganisationInvolved[0].RefId"
        ]
      }
    },
    "/studentpersonal/{studentPersonalRefId}/studentassessmenttaskresult": {
      "get": {
        "tags": [
          "StudentAssessmentTaskResult"
        ],
        "summary": "Retrieve StudentAssessmentTaskResults by Student",
        "description": "<p>Retrieve all of a particular student's available results from students' attempts at one or more assignments, essays, class tests, internal or external assessment exams, or any other tasks that are set to students and assessed as part of the learning process</p>",
        "operationId": "getStudentAssessmentTaskResultsByStudent",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/studentPersonalRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAssessmentTaskResultCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentassessmenttaskresult/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-byEntity": "ByStudentPersonal",
        "x-isBulk": true,
        "x-isSingle": false
      }
    },
    "/studentattainment": {
      "post": {
        "tags": [
          "StudentAttainment"
        ],
        "summary": "Create one or more StudentAttainments",
        "description": "<p>Bulk operation to create one or more students' achievement of some <a href=\"#tag/Credential\">Credential</a>, <a href=\"#tag/LearningStandard\">LearningStandard</a>, or completing a <a href=\"#tag/ProviderCourse\">ProviderCourse</a>, within the scope of the  Provider the students are enrolled in.",
        "operationId": "createStudentAttainments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAttainment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttainmentCREATEList"
              },
              "example": {
                "StudentAttainments": {
                  "StudentAttainment": [
                    {
                      "StudentAttainmentRefId": "359d7510-1ad0-a9d7-a8c3-dad0a85103a2",
                      "StudentAttainmentLocalId": "CRED-HPotter-48",
                      "GrantingOrganisation": {
                        "RefId": "8772"
                      },
                      "Attainment": {
                        "RefId": "d0a0a27a-d0a8-510a-d9d7-5101a8c3da39",
                        "Name": "NCEA Level 2 Chemistry - Endorsed with merit",
                        "ObjectType": "Credential"
                      },
                      "Student": {
                        "RefId": "cd106d6d-d9d5-41fb-9943-5feb967c9435",
                        "LocalId": "HP85-1039",
                        "Name": "Harry Potter"
                      },
                      "YearAttained": 2018,
                      "DateAttained": "2018-07-25T00:00:00+1200",
                      "JustificationList": {
                        "Justification": [
                          {
                            "RefId": "2752a16b-b62a-4973-9d44-23e13e1c037b",
                            "LocalId": "91165-v2",
                            "Name": "Demonstrate understanding of the properties of selected organic compounds",
                            "ObjectType": "StudentAssessmentTaskResult",
                            "AssessmentType": "EXT",
                            "Result": "Achieved",
                            "Date": "2016-06-28T00:00:00+1200",
                            "CreditValue": 4
                          },
                          {
                            "RefId": "eca0da5d-94af-4223-aaa6-7c0083006efd",
                            "LocalId": "91166-v2",
                            "Name": "Demonstrate understanding of chemical reactivity",
                            "ObjectType": "StudentAssessmentTaskResult",
                            "AssessmentType": "INT",
                            "Result": "Achieved with merit",
                            "Date": "2016-06-01T00:00:00+1200",
                            "CreditValue": 3
                          },
                          {
                            "RefId": "12f4761d-5e97-4e12-804e-e16d882c86c7",
                            "LocalId": "91167-v2",
                            "Name": "Demonstrate understanding of oxidation-reduction",
                            "ObjectType": "StudentAssessmentTaskResult",
                            "AssessmentType": "EXT",
                            "Result": "Achieved",
                            "Date": "2016-06-28T00:00:00+1200",
                            "CreditValue": 3
                          }
                        ]
                      },
                      "SubjectAreaList": {
                        "SubjectArea": [
                          "CHEM"
                        ]
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttainmentCREATEList"
              },
              "example": "<StudentAttainments>\n  <StudentAttainment>\n    <StudentAttainmentRefId>359d7510-1ad0-a9d7-a8c3-dad0a85103a2</StudentAttainmentRefId>\n    <GrantingOrganisation>\n      <RefId>8772</RefId>\n    </GrantingOrganisation>\n    <Attainment>\n      <RefId>d0a0a27a-d0a8-510a-d9d7-5101a8c3da39</RefId>\n      <Name>NCEA Level 2 Chemistry - Endorsed with merit</Name>\n      <ObjectType>Credential</ObjectType>\n    </Attainment>\n    <Student>\n      <RefId>cd106d6d-d9d5-41fb-9943-5feb967c9435</RefId>\n      <LocalId>HP85-1039</LocalId>\n      <Name>Harry Potter</Name>\n    </Student>\n    </DateAttained>2018-07-25</DateAttained>\n    <JustificationList>\n      <Justification>\n        <RefId>2752a16b-b62a-4973-9d44-23e13e1c037b</RefId>\n        <LocalId>91165-v2</LocalId>\n        <Name>Demonstrate understanding of the properties of selected organic compounds</Name>\n        <ObjectType>StudentAssessmentTaskResult</ObjectType>\n        <AssessmentType>EXT</AssessmentType>\n        <Result>Achieved</Result>\n        <Date>2016-06-28</Date>\n        <CreditValue>4</CreditValue>\n      </Justification>\n      <Justification>\n        <RefId>eca0da5d-94af-4223-aaa6-7c0083006efd</RefId>\n        <LocalId>91166-v2</LocalId>\n        <Name>Demonstrate understanding of chemical reactivity</Name>\n        <ObjectType>StudentAssessmentTaskResult</ObjectType>\n        <AssessmentType>INT</AssessmentType>\n        <Result>Achieved with merit</Result>\n        <Date>2016-06-01</Date>\n        <CreditValue>3</CreditValue>\n      </Justification>\n      <Justification>\n        <RefId>12f4761d-5e97-4e12-804e-e16d882c86c7</RefId>\n        <LocalId>91167-v2</LocalId>\n        <Name>Demonstrate understanding of oxidation-reduction</Name>\n        <ObjectType>StudentAssessmentTaskResult</ObjectType>\n        <AssessmentType>EXT</AssessmentType>\n        <Result>Achieved</Result>\n        <Date>2016-06-28</Date>\n        <CreditValue>3</CreditValue>\n      </Justification>\n    </JustificationList>\n    <SubjectAreaList>\n      <SubjectArea>CHEM</SubjectArea>\n    </SubjectAreaList>\n  </StudentAttainment>\n</StudentAttainments>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentErrorList"
                },
                "example": [
                  {
                    "StudentAttainment": {
                      "StudentAttainmentRefId": "359d7510-1ad0-a9d7-a8c3-dad0a85103a2",
                      "StudentAttainmentLocalId": "CRED-HPotter-48",
                      "GrantingOrganisation": {
                        "RefId": "8772"
                      },
                      "Attainment": {
                        "RefId": "d0a0a27a-d0a8-510a-d9d7-5101a8c3da39",
                        "Name": "NCEA Level 2 Chemistry - Endorsed with merit",
                        "ObjectType": "Credential"
                      },
                      "Student": {
                        "RefId": "cd106d6d-d9d5-41fb-9943-5feb967c9435",
                        "LocalId": "HP85-1039",
                        "Name": "Harry Potter"
                      },
                      "YearAttained": 2018,
                      "DateAttained": "2018-07-25T00:00:00+1200",
                      "JustificationList": {
                        "Justification": [
                          {
                            "RefId": "2752a16b-b62a-4973-9d44-23e13e1c037b",
                            "LocalId": "91165-v2",
                            "Name": "Demonstrate understanding of the properties of selected organic compounds",
                            "ObjectType": "StudentAssessmentTaskResult",
                            "AssessmentType": "EXT",
                            "Result": "Achieved",
                            "Date": "2016-06-28T00:00:00+1200",
                            "CreditValue": 4
                          },
                          {
                            "RefId": "eca0da5d-94af-4223-aaa6-7c0083006efd",
                            "LocalId": "91166-v2",
                            "Name": "Demonstrate understanding of chemical reactivity",
                            "ObjectType": "StudentAssessmentTaskResult",
                            "AssessmentType": "INT",
                            "Result": "Achieved with merit",
                            "Date": "2016-06-01T00:00:00+1200",
                            "CreditValue": 3
                          },
                          {
                            "RefId": "12f4761d-5e97-4e12-804e-e16d882c86c7",
                            "LocalId": "91167-v2",
                            "Name": "Demonstrate understanding of oxidation-reduction",
                            "ObjectType": "StudentAssessmentTaskResult",
                            "AssessmentType": "EXT",
                            "Result": "Achieved",
                            "Date": "2016-06-28T00:00:00+1200",
                            "CreditValue": 3
                          }
                        ]
                      },
                      "SubjectAreaList": {
                        "SubjectArea": [
                          "CHEM"
                        ]
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentErrorList"
                },
                "example": "<Response>\n  <StudentAttainment>\n    <StudentAttainmentRefId>359d7510-1ad0-a9d7-a8c3-dad0a85103a2</StudentAttainmentRefId>\n    <GrantingOrganisation>\n      <RefId>8772</RefId>\n    </GrantingOrganisation>\n    <Attainment>\n      <RefId>d0a0a27a-d0a8-510a-d9d7-5101a8c3da39</RefId>\n      <Name>NCEA Level 2 Chemistry - Endorsed with merit</Name>\n      <ObjectType>Credential</ObjectType>\n    </Attainment>\n    <Student>\n      <RefId>cd106d6d-d9d5-41fb-9943-5feb967c9435</RefId>\n      <LocalId>HP85-1039</LocalId>\n      <Name>Harry Potter</Name>\n    </Student>\n    </DateAttained>2018-07-25</DateAttained>\n    <JustificationList>\n      <Justification>\n        <RefId>2752a16b-b62a-4973-9d44-23e13e1c037b</RefId>\n        <LocalId>91165-v2</LocalId>\n        <Name>Demonstrate understanding of the properties of selected organic compounds</Name>\n        <ObjectType>StudentAssessmentTaskResult</ObjectType>\n        <AssessmentType>EXT</AssessmentType>\n        <Result>Achieved</Result>\n        <Date>2016-06-28</Date>\n        <CreditValue>4</CreditValue>\n      </Justification>\n      <Justification>\n        <RefId>eca0da5d-94af-4223-aaa6-7c0083006efd</RefId>\n        <LocalId>91166-v2</LocalId>\n        <Name>Demonstrate understanding of chemical reactivity</Name>\n        <ObjectType>StudentAssessmentTaskResult</ObjectType>\n        <AssessmentType>INT</AssessmentType>\n        <Result>Achieved with merit</Result>\n        <Date>2016-06-01</Date>\n        <CreditValue>3</CreditValue>\n      </Justification>\n      <Justification>\n        <RefId>12f4761d-5e97-4e12-804e-e16d882c86c7</RefId>\n        <LocalId>91167-v2</LocalId>\n        <Name>Demonstrate understanding of oxidation-reduction</Name>\n        <ObjectType>StudentAssessmentTaskResult</ObjectType>\n        <AssessmentType>EXT</AssessmentType>\n        <Result>Achieved</Result>\n        <Date>2016-06-28</Date>\n        <CreditValue>3</CreditValue>\n      </Justification>\n    </JustificationList>\n    <SubjectAreaList>\n      <SubjectArea>CHEM</SubjectArea>\n    </SubjectAreaList>\n  </StudentAttainment>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "StudentAttainmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "GrantingOrganisation.RefId"
        ]
      },
      "get": {
        "tags": [
          "StudentAttainment"
        ],
        "summary": "Retrieve one or more StudentAttainments",
        "description": "<p>Bulk operation to retrieve one or more students' achievement of some <a href=\"#tag/Credential\">Credential</a>, <a href=\"#tag/LearningStandard\">LearningStandard</a>, or completing a <a href=\"#tag/ProviderCourse\">ProviderCourse</a>, within the scope of the  Provider the students are enrolled in.",
        "operationId": "getStudentAttainments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "StudentAttainment"
        ],
        "summary": "Update one or more StudentAttainments",
        "description": "<p>Bulk operation to update one or more students' achievement of some <a href=\"#tag/Credential\">Credential</a>, <a href=\"#tag/LearningStandard\">LearningStandard</a>, or completing a <a href=\"#tag/ProviderCourse\">ProviderCourse</a>, within the scope of the  Provider the students are enrolled in.",
        "operationId": "updateStudentAttainments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAttainment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttainmentCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentattainment/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttainmentCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentattainment/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentAttainmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "GrantingOrganisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "StudentAttainment"
        ],
        "summary": "Patch one or more StudentAttainments",
        "description": "<p>Bulk operation to update one or more fields of one or more students' achievement of some <a href=\"#tag/Credential\">Credential</a>, <a href=\"#tag/LearningStandard\">LearningStandard</a>, or completing a <a href=\"#tag/ProviderCourse\">ProviderCourse</a>, within the scope of the  Provider the students are enrolled in.",
        "operationId": "patchStudentAttainments",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAttainment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttainmentPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentattainment/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttainmentPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentattainment/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentAttainmentErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "GrantingOrganisation.RefId"
        ]
      }
    },
    "/studentattainment/{studentAttainmentRefId}": {
      "get": {
        "tags": [
          "StudentAttainment"
        ],
        "summary": "Retrieve a single StudentAttainment",
        "description": "<p>Retrieve a particular student's achievement of a particular <a href=\"#tag/Credential\">Credential</a>, <a href=\"#tag/LearningStandard\">LearningStandard</a>, or completing a <a href=\"#tag/ProviderCourse\">ProviderCourse</a>, within the scope of the  Provider the students are enrolled in.",
        "operationId": "getStudentAttainment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentAttainmentRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular student's achievement of a particular <a href=\"#tag/Credential\">Credential</a>, <a href=\"#tag/LearningStandard\">LearningStandard</a>, or completing a <a href=\"#tag/ProviderCourse\">ProviderCourse</a></p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATE"
                },
                "example": {
                  "StudentAttainment": {
                    "StudentAttainmentRefId": "359d7510-1ad0-a9d7-a8c3-dad0a85103a2",
                    "StudentAttainmentLocalId": "CRED-HPotter-48",
                    "GrantingOrganisation": {
                      "RefId": "8772"
                    },
                    "Attainment": {
                      "RefId": "d0a0a27a-d0a8-510a-d9d7-5101a8c3da39",
                      "Name": "NCEA Level 2 Chemistry - Endorsed with merit",
                      "ObjectType": "Credential"
                    },
                    "Student": {
                      "RefId": "cd106d6d-d9d5-41fb-9943-5feb967c9435",
                      "LocalId": "HP85-1039",
                      "Name": "Harry Potter"
                    },
                    "YearAttained": 2018,
                    "DateAttained": "2018-07-25T00:00:00+1200",
                    "JustificationList": {
                      "Justification": [
                        {
                          "RefId": "2752a16b-b62a-4973-9d44-23e13e1c037b",
                          "LocalId": "91165-v2",
                          "Name": "Demonstrate understanding of the properties of selected organic compounds",
                          "ObjectType": "StudentAssessmentTaskResult",
                          "AssessmentType": "EXT",
                          "Result": "Achieved",
                          "Date": "2016-06-28T00:00:00+1200",
                          "CreditValue": 4
                        },
                        {
                          "RefId": "eca0da5d-94af-4223-aaa6-7c0083006efd",
                          "LocalId": "91166-v2",
                          "Name": "Demonstrate understanding of chemical reactivity",
                          "ObjectType": "StudentAssessmentTaskResult",
                          "AssessmentType": "INT",
                          "Result": "Achieved with merit",
                          "Date": "2016-06-01T00:00:00+1200",
                          "CreditValue": 3
                        },
                        {
                          "RefId": "12f4761d-5e97-4e12-804e-e16d882c86c7",
                          "LocalId": "91167-v2",
                          "Name": "Demonstrate understanding of oxidation-reduction",
                          "ObjectType": "StudentAssessmentTaskResult",
                          "AssessmentType": "EXT",
                          "Result": "Achieved",
                          "Date": "2016-06-28T00:00:00+1200",
                          "CreditValue": 3
                        }
                      ]
                    },
                    "SubjectAreaList": {
                      "SubjectArea": [
                        "CHEM"
                      ]
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATE"
                },
                "example": "<StudentAttainment>\n  <StudentAttainmentRefId>359d7510-1ad0-a9d7-a8c3-dad0a85103a2</StudentAttainmentRefId>\n  <GrantingOrganisation>\n    <RefId>8772</RefId>\n  </GrantingOrganisation>\n  <Attainment>\n    <RefId>d0a0a27a-d0a8-510a-d9d7-5101a8c3da39</RefId>\n    <Name>NCEA Level 2 Chemistry - Endorsed with merit</Name>\n    <ObjectType>Credential</ObjectType>\n  </Attainment>\n  <Student>\n    <RefId>cd106d6d-d9d5-41fb-9943-5feb967c9435</RefId>\n    <LocalId>HP85-1039</LocalId>\n    <Name>Harry Potter</Name>\n  </Student>\n  </DateAttained>2018-07-25</DateAttained>\n  <JustificationList>\n    <Justification>\n      <RefId>2752a16b-b62a-4973-9d44-23e13e1c037b</RefId>\n      <LocalId>91165-v2</LocalId>\n      <Name>Demonstrate understanding of the properties of selected organic compounds</Name>\n      <ObjectType>StudentAssessmentTaskResult</ObjectType>\n      <AssessmentType>EXT</AssessmentType>\n      <Result>Achieved</Result>\n      <Date>2016-06-28</Date>\n      <CreditValue>4</CreditValue>\n    </Justification>\n    <Justification>\n      <RefId>eca0da5d-94af-4223-aaa6-7c0083006efd</RefId>\n      <LocalId>91166-v2</LocalId>\n      <Name>Demonstrate understanding of chemical reactivity</Name>\n      <ObjectType>StudentAssessmentTaskResult</ObjectType>\n      <AssessmentType>INT</AssessmentType>\n      <Result>Achieved with merit</Result>\n      <Date>2016-06-01</Date>\n      <CreditValue>3</CreditValue>\n    </Justification>\n    <Justification>\n      <RefId>12f4761d-5e97-4e12-804e-e16d882c86c7</RefId>\n      <LocalId>91167-v2</LocalId>\n      <Name>Demonstrate understanding of oxidation-reduction</Name>\n      <ObjectType>StudentAssessmentTaskResult</ObjectType>\n      <AssessmentType>EXT</AssessmentType>\n      <Result>Achieved</Result>\n      <Date>2016-06-28</Date>\n      <CreditValue>3</CreditValue>\n    </Justification>\n  </JustificationList>\n  <SubjectAreaList>\n    <SubjectArea>CHEM</SubjectArea>\n  </SubjectAreaList>\n</StudentAttainment>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "StudentAttainment"
        ],
        "summary": "Update a single StudentAttainment",
        "description": "<p>Update a particular student's achievement of a particular <a href=\"#tag/Credential\">Credential</a>, <a href=\"#tag/LearningStandard\">LearningStandard</a>, or completing a <a href=\"#tag/ProviderCourse\">ProviderCourse</a>, within the scope of the  Provider the students are enrolled in.",
        "operationId": "updateStudentAttainment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentAttainmentRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular student's achievement of a particular <a href=\"#tag/Credential\">Credential</a>, <a href=\"#tag/LearningStandard\">LearningStandard</a>, or completing a <a href=\"#tag/ProviderCourse\">ProviderCourse</a></p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAttainment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttainmentCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentattainment~1%7BstudentAttainmentRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttainmentCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentattainment~1%7BstudentAttainmentRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment~1%7BstudentAttainmentRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment~1%7BstudentAttainmentRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "GrantingOrganisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "StudentAttainment"
        ],
        "summary": "Patch a single StudentAttainment",
        "description": "<p>Update some fields of a particular student's achievement of a particular <a href=\"#tag/Credential\">Credential</a>, <a href=\"#tag/LearningStandard\">LearningStandard</a>, or completing a <a href=\"#tag/ProviderCourse\">ProviderCourse</a>, within the scope of the  Provider the students are enrolled in.",
        "operationId": "patchStudentAttainment",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentAttainmentRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular student's achievement of a particular <a href=\"#tag/Credential\">Credential</a>, <a href=\"#tag/LearningStandard\">LearningStandard</a>, or completing a <a href=\"#tag/ProviderCourse\">ProviderCourse</a></p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentAttainment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttainmentPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentattainment~1%7BstudentAttainmentRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentAttainmentPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentattainment~1%7BstudentAttainmentRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment~1%7BstudentAttainmentRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment~1%7BstudentAttainmentRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "GrantingOrganisation.RefId"
        ]
      }
    },
    "/studentpersonal/{studentPersonalRefId}/studentattainment": {
      "get": {
        "tags": [
          "StudentAttainment"
        ],
        "summary": "Retrieve one or more StudentAttainments",
        "description": "<p>Retrieve all of a particular Student's available achievements of some <a href=\"#tag/Credential\">Credential</a>, <a href=\"#tag/LearningStandard\">LearningStandard</a>, or completing a <a href=\"#tag/ProviderCourse\">ProviderCourse</a>, within the scope of the  Provider the students are enrolled in.",
        "operationId": "getStudentAttainmentsByStudent",
        "security": [
          {
            "sifDataObject": [
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamStart"
          },
          {
            "$ref": "#/components/parameters/edsbyParamEnd"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/studentPersonalRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAttainmentCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentattainment/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-byEntity": "ByStudentPersonal",
        "x-isBulk": true,
        "x-isSingle": false
      }
    },
    "/wellbeingcharacteristic": {
      "post": {
        "tags": [
          "WellbeingCharacteristic"
        ],
        "summary": "Create one or more WellbeingCharacteristics",
        "description": "<p>Bulk operation to create one or more core characteristics, each of which are integral to a student. They may be a Medical condition, special needs or a characteristic such as a known disability or any other characteristic or condition that is student specific and  impacts their learning.</p>",
        "operationId": "createWellbeingCharacteristics",
        "security": [
          {
            "sifDataObject": [
              "LSR"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on WellbeingCharacteristic",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WellbeingCharacteristicCREATEList"
              },
              "example": {
                "WellbeingCharacteristics": {
                  "WellbeingCharacteristic": [
                    {
                      "WellbeingCharacteristicRefId": "2ffb63b4-cfef-4820-8501-e7d1e54555cb",
                      "WellbeingCharacteristicLocalId": "WBGCHR-HPotter-2d",
                      "Student": {
                        "RefId": "d3e34b35-9d75-101a-8c3d-00aa001a1652"
                      },
                      "RecordingProvider": {
                        "RefId": "9651"
                      },
                      "StartDate": "2017-11-01T00:00:00+1200",
                      "EndDate": "2017-11-10T00:00:00+1200",
                      "CharacteristicNotes": "This Student has a special need.",
                      "Classification": "LSN",
                      "Category": "LSN-SOC",
                      "SubCategory": "LSN-EMO",
                      "SubSubCategory": "LSN-EXP",
                      "CaseLeadContactPerson": "John Doe"
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/WellbeingCharacteristicCREATEList"
              },
              "example": "<WellbeingCharacteristics>\n  <WellbeingCharacteristic>\n    <WellbeingCharacteristicRefId>2ffb63b4-cfef-4820-8501-e7d1e54555cb</WellbeingCharacteristicRefId>\n    <Student>\n      <RefId>d3e34b35-9d75-101a-8c3d-00aa001a1652</RefId>\n    </Student>\n    <RecordingProvider>\n      <RefId>9651</RefId>\n    </RecordingProvider>\n    <StartDate>2017-11-01</StartDate>\n    <EndDate>2017-11-10</EndDate>\n    <CharacteristicNotes>This Student has a special need.</CharacteristicNotes>\n    <Classification>LSN</Classification>\n    <Category>LSN-SOC</Category>\n    <SubCategory>LSN-EMO</SubCategory>\n    <SubSubCategory>LSN-EXP</SubSubCategory>\n    <CaseLeadContactPerson>John Doe</CaseLeadContactPerson>\n  </WellbeingCharacteristic>\n</WellbeingCharacteristics>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicErrorList"
                },
                "example": [
                  {
                    "WellbeingCharacteristic": {
                      "WellbeingCharacteristicRefId": "2ffb63b4-cfef-4820-8501-e7d1e54555cb",
                      "WellbeingCharacteristicLocalId": "WBGCHR-HPotter-2d",
                      "Student": {
                        "RefId": "d3e34b35-9d75-101a-8c3d-00aa001a1652"
                      },
                      "RecordingProvider": {
                        "RefId": "9651"
                      },
                      "StartDate": "2017-11-01T00:00:00+1200",
                      "EndDate": "2017-11-10T00:00:00+1200",
                      "CharacteristicNotes": "This Student has a special need.",
                      "Classification": "LSN",
                      "Category": "LSN-SOC",
                      "SubCategory": "LSN-EMO",
                      "SubSubCategory": "LSN-EXP",
                      "CaseLeadContactPerson": "John Doe"
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicErrorList"
                },
                "example": "<Response>\n  <WellbeingCharacteristic>\n    <WellbeingCharacteristicRefId>2ffb63b4-cfef-4820-8501-e7d1e54555cb</WellbeingCharacteristicRefId>\n    <Student>\n      <RefId>d3e34b35-9d75-101a-8c3d-00aa001a1652</RefId>\n    </Student>\n    <RecordingProvider>\n      <RefId>9651</RefId>\n    </RecordingProvider>\n    <StartDate>2017-11-01</StartDate>\n    <EndDate>2017-11-10</EndDate>\n    <CharacteristicNotes>This Student has a special need.</CharacteristicNotes>\n    <Classification>LSN</Classification>\n    <Category>LSN-SOC</Category>\n    <SubCategory>LSN-EMO</SubCategory>\n    <SubSubCategory>LSN-EXP</SubSubCategory>\n    <CaseLeadContactPerson>John Doe</CaseLeadContactPerson>\n  </WellbeingCharacteristic>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "WellbeingCharacteristicErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "RecordingProvider.RefId"
        ]
      },
      "get": {
        "tags": [
          "WellbeingCharacteristic"
        ],
        "summary": "Retrieve one or more WellbeingCharacteristics",
        "description": "<p>Bulk operation to retrieve one or more core characteristics, each of which are integral to a student. They may be a Medical condition, special needs or a characteristic such as a known disability or any other characteristic or condition that is student specific and  impacts their learning.</p>",
        "operationId": "getWellbeingCharacteristics",
        "security": [
          {
            "sifDataObject": [
              "LSR",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "WellbeingCharacteristic"
        ],
        "summary": "Update one or more WellbeingCharacteristics",
        "description": "<p>Bulk operation to update one or more core characteristics, each of which are integral to a student. They may be a Medical condition, special needs or a characteristic such as a known disability or any other characteristic or condition that is student specific and  impacts their learning.</p>",
        "operationId": "updateWellbeingCharacteristics",
        "security": [
          {
            "sifDataObject": [
              "LSR"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on WellbeingCharacteristic",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WellbeingCharacteristicCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1wellbeingcharacteristic/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/WellbeingCharacteristicCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1wellbeingcharacteristic/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "WellbeingCharacteristicErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "RecordingProvider.RefId"
        ]
      },
      "patch": {
        "tags": [
          "WellbeingCharacteristic"
        ],
        "summary": "Patch one or more WellbeingCharacteristics",
        "description": "<p>Bulk operation to update one or more fields of one or more core characteristics, each of which are integral to a student. They may be a Medical condition, special needs or a  characteristic such as a known disability or any other characteristic or condition that is student specific and impacts their learning.</p>",
        "operationId": "patchWellbeingCharacteristics",
        "security": [
          {
            "sifDataObject": [
              "LSR"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on WellbeingCharacteristic",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WellbeingCharacteristicPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1wellbeingcharacteristic/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/WellbeingCharacteristicPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1wellbeingcharacteristic/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "WellbeingCharacteristicErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "RecordingProvider.RefId"
        ]
      }
    },
    "/wellbeingcharacteristic/{wellbeingCharacteristicRefId}": {
      "get": {
        "tags": [
          "WellbeingCharacteristic"
        ],
        "summary": "Retrieve a single WellbeingCharacteristic",
        "description": "<p>Retrieve a particular core characteristic which is integral to a particular student.  It may be a Medical condition, special needs or a characteristic such as a known disability or any other characteristic or condition that is student specific and impacts their learning.</p>",
        "operationId": "getWellbeingCharacteristic",
        "security": [
          {
            "sifDataObject": [
              "LSR",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "wellbeingCharacteristicRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular WellbeingCharacteristic, which is integral to a particular student.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATE"
                },
                "example": {
                  "WellbeingCharacteristic": {
                    "WellbeingCharacteristicRefId": "2ffb63b4-cfef-4820-8501-e7d1e54555cb",
                    "WellbeingCharacteristicLocalId": "WBGCHR-HPotter-2d",
                    "Student": {
                      "RefId": "d3e34b35-9d75-101a-8c3d-00aa001a1652"
                    },
                    "RecordingProvider": {
                      "RefId": "9651"
                    },
                    "StartDate": "2017-11-01T00:00:00+1200",
                    "EndDate": "2017-11-10T00:00:00+1200",
                    "CharacteristicNotes": "This Student has a special need.",
                    "Classification": "LSN",
                    "Category": "LSN-SOC",
                    "SubCategory": "LSN-EMO",
                    "SubSubCategory": "LSN-EXP",
                    "CaseLeadContactPerson": "John Doe"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATE"
                },
                "example": "<WellbeingCharacteristic>\n  <WellbeingCharacteristicRefId>2ffb63b4-cfef-4820-8501-e7d1e54555cb</WellbeingCharacteristicRefId>\n  <Student>\n    <RefId>d3e34b35-9d75-101a-8c3d-00aa001a1652</RefId>\n  </Student>\n  <RecordingProvider>\n    <RefId>9651</RefId>\n  </RecordingProvider>\n  <StartDate>2017-11-01</StartDate>\n  <EndDate>2017-11-10</EndDate>\n  <CharacteristicNotes>This Student has a special need.</CharacteristicNotes>\n  <Classification>LSN</Classification>\n  <Category>LSN-SOC</Category>\n  <SubCategory>LSN-EMO</SubCategory>\n  <SubSubCategory>LSN-EXP</SubSubCategory>\n  <CaseLeadContactPerson>John Doe</CaseLeadContactPerson>\n</WellbeingCharacteristic>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "WellbeingCharacteristic"
        ],
        "summary": "Update a single WellbeingCharacteristic",
        "description": "<p>Update a particular core characteristic which is integral to a particular student.  It may be a Medical condition, special needs or a characteristic such as a known disability or any other characteristic or condition that is student specific and impacts their learning.</p>",
        "operationId": "updateWellbeingCharacteristic",
        "security": [
          {
            "sifDataObject": [
              "LSR"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "wellbeingCharacteristicRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular WellbeingCharacteristic, which is integral to a particular student.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on WellbeingCharacteristic",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WellbeingCharacteristicCREATE"
              },
              "example": {
                "$ref": "#/paths/~1wellbeingcharacteristic~1%7BwellbeingCharacteristicRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/WellbeingCharacteristicCREATE"
              },
              "example": {
                "$ref": "#/paths/~1wellbeingcharacteristic~1%7BwellbeingCharacteristicRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic~1%7BwellbeingCharacteristicRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic~1%7BwellbeingCharacteristicRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "RecordingProvider.RefId"
        ]
      },
      "patch": {
        "tags": [
          "WellbeingCharacteristic"
        ],
        "summary": "Patch a single WellbeingCharacteristic",
        "description": "<p>Update one or more fields of a particular core characteristic which is integral to a particular student.  It may be a Medical condition, special needs or a characteristic such as a known disability or any other characteristic or condition that is student  specific and impacts their learning.</p>",
        "operationId": "patchWellbeingCharacteristic",
        "security": [
          {
            "sifDataObject": [
              "LSR"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "wellbeingCharacteristicRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular WellbeingCharacteristic, which is integral to a particular student.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on WellbeingCharacteristic",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WellbeingCharacteristicPATCH"
              },
              "example": {
                "$ref": "#/paths/~1wellbeingcharacteristic~1%7BwellbeingCharacteristicRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/WellbeingCharacteristicPATCH"
              },
              "example": {
                "$ref": "#/paths/~1wellbeingcharacteristic~1%7BwellbeingCharacteristicRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic~1%7BwellbeingCharacteristicRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic~1%7BwellbeingCharacteristicRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "RecordingProvider.RefId"
        ]
      }
    },
    "/studentpersonal/{studentPersonalRefId}/wellbeingcharacteristic": {
      "get": {
        "tags": [
          "WellbeingCharacteristic"
        ],
        "summary": "Retrieve WellbeingCharacteristics by Student",
        "description": "<p>Bulk operation to retrieve one or more core characteristics, each of which are integral to a student. They may be a Medical condition, special needs or a characteristic such as a known disability or any other characteristic or condition that is student specific and  impacts their learning.</p>",
        "operationId": "getWellbeingCharacteristicsByStudent",
        "security": [
          {
            "sifDataObject": [
              "LSR",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/studentPersonalRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WellbeingCharacteristicCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1wellbeingcharacteristic/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-byEntity": "ByStudentPersonal"
      }
    },
    "/studentlearningsupport": {
      "post": {
        "tags": [
          "StudentLearningSupport"
        ],
        "summary": "Create one or more StudentLearningSupports",
        "description": "<p>Bulk operation to create one or more StudentLearningSupports, each of which  is meta-data and metrics pertaining to a particular student's Learning Support needs.</p>",
        "operationId": "createStudentLearningSupports",
        "security": [
          {
            "sifDataObject": [
              "LSR"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentLearningSupport",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportCREATEList"
              },
              "example": {
                "StudentLearningSupports": {
                  "StudentLearningSupport": [
                    {
                      "StudentLearningSupportRefId": "461b63b4-cfef-4820-8501-e7d1e54555cb",
                      "StudentLearningSupportLocalId": "LSR-HPotter-4d",
                      "Organisation": {
                        "RefId": "9651"
                      },
                      "Student": {
                        "RefId": "ca285746-359d-7510-1a8c-36432a901a16"
                      },
                      "LearnerStatus": "ACT",
                      "StudentConsentList": {
                        "StudentConsent": [
                          {
                            "RefId": "461423b4-cfef-4820-8501-e7d1e54555cb"
                          }
                        ]
                      },
                      "DyslexiaScreeningTool": "Y",
                      "OtherScreening": "N",
                      "AdolescentHealthScreening": "N",
                      "NonAttendance": "Y",
                      "NewToNewZealand": "N",
                      "NumberOfSchoolChanges": "Y",
                      "B4SchoolCheck": "Y",
                      "OtherFamilyContext": "N",
                      "StudentVoiceList": {
                        "StudentVoice": [
                          {
                            "RefId": "461423b4-cfef-4820-8345-e7d1e54555cb"
                          },
                          {
                            "RefId": "461423b4-bbef-4820-8345-e7d1e54555cb"
                          }
                        ]
                      },
                      "SupportNeedList": {
                        "SupportNeed": [
                          {
                            "Need": {
                              "RefId": "461423b4-bbef-4820-8345-e724e54555cb"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportCREATEList"
              },
              "example": "<StudentLearningSupports>\n  <StudentLearningSupport>\n    <StudentLearningSupportRefId>461b63b4-cfef-4820-8501-e7d1e54555cb</StudentLearningSupportRefId>\n    <Organisation>\n      <RefId>9651</RefId>\n    </Organisation>\n    <Student>\n      <RefId>ca285746-359d-7510-1a8c-36432a901a16</RefId>\n    </Student>\n    <LearnerStatus>ACT</LearnerStatus>\n    <StudentConsentList>\n      <StudentConsent>\n        <RefId>461423b4-cfef-4820-8501-e7d1e54555cb</RefId>\n      </StudentConsent>\n    </StudentConsentList>\n    <DyslexiaScreeningTool>Y</DyslexiaScreeningTool>\n    <OtherScreening>N</OtherScreening>\n    <AdolescentHealthScreening>N</AdolescentHealthScreening>\n    <NonAttendance>Y</NonAttendance>\n    <NewToNewZealand>N</NewToNewZealand>\n    <NumberOfSchoolChanges>Y</NumberOfSchoolChanges>\n    <B4SchoolCheck>Y</B4SchoolCheck>\n    <OtherFamilyContext>N</OtherFamilyContext>\n    <StudentVoiceList>\n      <StudentVoice>\n        <RefId>461423b4-cfef-4820-8345-e7d1e54555cb</RefId>\n      </StudentVoice>\n      <StudentVoice>\n        <RefId>461423b4-bbef-4820-8345-e7d1e54555cb</RefId>\n      </StudentVoice>\n    </StudentVoiceList>\n    <SupportNeedList>\n      <SupportNeed>\n        <Need>\n          <RefId>461423b4-bbef-4820-8345-e724e54555cb</RefId>\n          <Name>Literacy</Name>\n        </Need>\n        <ResponseList>\n          <Response>\n            <RefId>461423b4-bbef-4820-8345-e724e5455bbb</RefId>\n          </Response>\n        </ResponseList>\n      </SupportNeed>\n    </SupportNeedList>\n  </StudentLearningSupport>\n</StudentLearningSupports>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportErrorList"
                },
                "example": [
                  {
                    "StudentLearningSupport": {
                      "StudentLearningSupportRefId": "461b63b4-cfef-4820-8501-e7d1e54555cb",
                      "StudentLearningSupportLocalId": "LSR-HPotter-4d",
                      "Organisation": {
                        "RefId": "9651"
                      },
                      "Student": {
                        "RefId": "ca285746-359d-7510-1a8c-36432a901a16"
                      },
                      "LearnerStatus": "ACT",
                      "StudentConsentList": {
                        "StudentConsent": [
                          {
                            "RefId": "461423b4-cfef-4820-8501-e7d1e54555cb"
                          }
                        ]
                      },
                      "DyslexiaScreeningTool": "Y",
                      "OtherScreening": "N",
                      "AdolescentHealthScreening": "N",
                      "NonAttendance": "Y",
                      "NewToNewZealand": "N",
                      "NumberOfSchoolChanges": "Y",
                      "B4SchoolCheck": "Y",
                      "OtherFamilyContext": "N",
                      "StudentVoiceList": {
                        "StudentVoice": [
                          {
                            "RefId": "461423b4-cfef-4820-8345-e7d1e54555cb"
                          },
                          {
                            "RefId": "461423b4-bbef-4820-8345-e7d1e54555cb"
                          }
                        ]
                      },
                      "SupportNeedList": {
                        "SupportNeed": [
                          {
                            "Need": {
                              "RefId": "461423b4-bbef-4820-8345-e724e54555cb"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportErrorList"
                },
                "example": "<Response>\n  <StudentLearningSupport>\n    <StudentLearningSupportRefId>461b63b4-cfef-4820-8501-e7d1e54555cb</StudentLearningSupportRefId>\n    <Student>\n      <RefId>ca285746-359d-7510-1a8c-36432a901a16</RefId>\n    </Student>\n    <LearnerStatus>ACT</LearnerStatus>\n    <StudentConsentList>\n      <StudentConsent>\n        <RefId>461423b4-cfef-4820-8501-e7d1e54555cb</RefId>\n      </StudentConsent>\n    </StudentConsentList>\n    <DyslexiaScreeningTool>Y</DyslexiaScreeningTool>\n    <OtherScreening>N</OtherScreening>\n    <AdolescentHealthScreening>N</AdolescentHealthScreening>\n    <NonAttendance>Y</NonAttendance>\n    <NewToNewZealand>N</NewToNewZealand>\n    <NumberOfSchoolChanges>Y</NumberOfSchoolChanges>\n    <B4SchoolCheck>Y</B4SchoolCheck>\n    <OtherFamilyContext>N</OtherFamilyContext>\n    <StudentVoiceList>\n      <StudentVoice>\n        <RefId>461423b4-cfef-4820-8345-e7d1e54555cb</RefId>\n      </StudentVoice>\n      <StudentVoice>\n        <RefId>461423b4-bbef-4820-8345-e7d1e54555cb</RefId>\n      </StudentVoice>\n    </StudentVoiceList>\n    <SupportNeedList>\n      <SupportNeed>\n        <Need>\n          <RefId>461423b4-bbef-4820-8345-e724e54555cb</RefId>\n          <Name>Literacy</Name>\n        </Need>\n        <ResponseList>\n          <Response>\n            <RefId>461423b4-bbef-4820-8345-e724e5455bbb</RefId>\n          </Response>\n        </ResponseList>\n      </SupportNeed>\n    </SupportNeedList>\n  </StudentLearningSupport>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "StudentLearningSupportErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "get": {
        "tags": [
          "StudentLearningSupport"
        ],
        "summary": "Retrieve one or more StudentLearningSupports",
        "description": "<p>Bulk operation to retrieve one or more StudentLearningSupports, each of which  is meta-data and metrics pertaining to a particular student's Learning Support needs.</p>",
        "operationId": "getStudentLearningSupports",
        "security": [
          {
            "sifDataObject": [
              "LSR",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "StudentLearningSupport"
        ],
        "summary": "Update one or more StudentLearningSupports",
        "description": "<p>Bulk operation to update one or more StudentLearningSupports, each of which  is meta-data and metrics pertaining to a particular student's Learning Support needs.</p>",
        "operationId": "updateStudentLearningSupports",
        "security": [
          {
            "sifDataObject": [
              "LSR"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentLearningSupport",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentlearningsupport/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentlearningsupport/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentLearningSupportErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "StudentLearningSupport"
        ],
        "summary": "Patch one or more StudentLearningSupports",
        "description": "<p>Bulk operation to update one or more fields of one or more StudentLearningSupports, each of which is meta-data and metrics pertaining to a particular student's Learning  Support needs.</p>",
        "operationId": "patchStudentLearningSupports",
        "security": [
          {
            "sifDataObject": [
              "LSR"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentLearningSupport",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentlearningsupport/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportPATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentlearningsupport/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentLearningSupportErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/studentlearningsupport/{studentLearningSupportRefId}": {
      "get": {
        "tags": [
          "StudentLearningSupport"
        ],
        "summary": "Retrieve a single StudentLearningSupport",
        "description": "<p>Retrieve a particular set of meta-data and metrics pertaining to a particular student's Learning Support needs.</p>",
        "operationId": "getStudentLearningSupport",
        "security": [
          {
            "sifDataObject": [
              "LSR",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentLearningSupportRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular  set of meta-data and metrics pertaining to a particular student's Learning Support needs.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATE"
                },
                "example": {
                  "StudentLearningSupport": {
                    "StudentLearningSupportRefId": "461b63b4-cfef-4820-8501-e7d1e54555cb",
                    "StudentLearningSupportLocalId": "LSR-HPotter-4d",
                    "Organisation": {
                      "RefId": "9651"
                    },
                    "Student": {
                      "RefId": "ca285746-359d-7510-1a8c-36432a901a16"
                    },
                    "LearnerStatus": "ACT",
                    "StudentConsentList": {
                      "StudentConsent": [
                        {
                          "RefId": "461423b4-cfef-4820-8501-e7d1e54555cb"
                        }
                      ]
                    },
                    "DyslexiaScreeningTool": "Y",
                    "OtherScreening": "N",
                    "AdolescentHealthScreening": "N",
                    "NonAttendance": "Y",
                    "NewToNewZealand": "N",
                    "NumberOfSchoolChanges": "Y",
                    "B4SchoolCheck": "Y",
                    "OtherFamilyContext": "N",
                    "StudentVoiceList": {
                      "StudentVoice": [
                        {
                          "RefId": "461423b4-cfef-4820-8345-e7d1e54555cb"
                        },
                        {
                          "RefId": "461423b4-bbef-4820-8345-e7d1e54555cb"
                        }
                      ]
                    },
                    "SupportNeedList": {
                      "SupportNeed": [
                        {
                          "Need": {
                            "RefId": "461423b4-bbef-4820-8345-e724e54555cb"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATE"
                },
                "example": "<StudentLearningSupport>\n  <StudentLearningSupportRefId>461b63b4-cfef-4820-8501-e7d1e54555cb</StudentLearningSupportRefId>\n  <Organisation>\n    <RefId>9651</RefId>\n  </Organisation>\n  <Student>\n    <RefId>ca285746-359d-7510-1a8c-36432a901a16</RefId>\n  </Student>\n  <LearnerStatus>ACT</LearnerStatus>\n  <StudentConsentList>\n    <StudentConsent>\n      <RefId>461423b4-cfef-4820-8501-e7d1e54555cb</RefId>\n    </StudentConsent>\n  </StudentConsentList>\n  <DyslexiaScreeningTool>Y</DyslexiaScreeningTool>\n  <OtherScreening>N</OtherScreening>\n  <AdolescentHealthScreening>N</AdolescentHealthScreening>\n  <NonAttendance>Y</NonAttendance>\n  <NewToNewZealand>N</NewToNewZealand>\n  <NumberOfSchoolChanges>Y</NumberOfSchoolChanges>\n  <B4SchoolCheck>Y</B4SchoolCheck>\n  <OtherFamilyContext>N</OtherFamilyContext>\n  <StudentVoiceList>\n    <StudentVoice>\n      <RefId>461423b4-cfef-4820-8345-e7d1e54555cb</RefId>\n    </StudentVoice>\n    <StudentVoice>\n      <RefId>461423b4-bbef-4820-8345-e7d1e54555cb</RefId>\n    </StudentVoice>\n  </StudentVoiceList>\n  <SupportNeedList>\n    <SupportNeed>\n      <Need>\n        <RefId>461423b4-bbef-4820-8345-e724e54555cb</RefId>\n        <Name>Literacy</Name>\n      </Need>\n      <ResponseList>\n        <Response>\n          <RefId>461423b4-bbef-4820-8345-e724e5455bbb</RefId>\n        </Response>\n      </ResponseList>\n    </SupportNeed>\n  </SupportNeedList>\n</StudentLearningSupport>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "StudentLearningSupport"
        ],
        "summary": "Update a single StudentLearningSupport",
        "description": "<p>Update a particular set of meta-data and metrics pertaining to a particular student's Learning Support needs.</p>",
        "operationId": "updateStudentLearningSupport",
        "security": [
          {
            "sifDataObject": [
              "LSR"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentLearningSupportRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular  set of meta-data and metrics pertaining to a particular student's Learning Support needs.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentLearningSupport",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentlearningsupport~1%7BstudentLearningSupportRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentlearningsupport~1%7BstudentLearningSupportRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport~1%7BstudentLearningSupportRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport~1%7BstudentLearningSupportRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "StudentLearningSupport"
        ],
        "summary": "Patch a single StudentLearningSupport",
        "description": "<p>Update one or more fields of a particular set of meta-data and metrics pertaining to a particular student's Learning Support needs.</p>",
        "operationId": "patchStudentLearningSupport",
        "security": [
          {
            "sifDataObject": [
              "LSR"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentLearningSupportRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular  set of meta-data and metrics pertaining to a particular student's Learning Support needs.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentLearningSupport",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentlearningsupport~1%7BstudentLearningSupportRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportPATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentlearningsupport~1%7BstudentLearningSupportRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport~1%7BstudentLearningSupportRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport~1%7BstudentLearningSupportRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/studentpersonal/{studentPersonalRefId}/studentlearningsupport": {
      "get": {
        "tags": [
          "StudentLearningSupport"
        ],
        "summary": "Retrieve StudentLearningSupports by Student",
        "description": "<p>Retrieve all available StudentLearningSupports for a particular Student, each of which is a set of meta-data and metrics pertaining  to the particular student's Learning Support needs.</p>",
        "operationId": "getStudentLearningSupportsByStudent",
        "security": [
          {
            "sifDataObject": [
              "LSR",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/studentPersonalRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupport/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-byEntity": "ByStudentPersonal"
      }
    },
    "/studentlearningsupportresponse": {
      "post": {
        "tags": [
          "StudentLearningSupportResponse"
        ],
        "summary": "Create one or more StudentLearningSupportResponses",
        "description": "<p>Bulk operation to create one or more StudentLearningSupportResponses, each of which  is a record of the responses generated by a student's Learning Support needs.</p> <p><strong>Note:</strong> Learning support needs are recorded as <a href=\"#tag/WellbeingCharacteristic\">WellbeingCharacteristics</a></p>",
        "operationId": "createStudentLearningSupportResponses",
        "security": [
          {
            "sifDataObject": [
              "LSR"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/syncOverride"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentLearningSupportResponse",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportResponseCREATEList"
              },
              "example": {
                "StudentLearningSupportResponses": {
                  "StudentLearningSupportResponse": [
                    {
                      "StudentLearningSupportResponseRefId": "461b63b4-cfef-4820-8501-e7dbbb4555cb",
                      "StudentLearningSupportResponseLocalId": "LSRRSP-HPotter-4d",
                      "Organisation": {
                        "RefId": "9651"
                      },
                      "Student": {
                        "RefId": "ca285746-359d-7510-1a8c-36432a901a16"
                      },
                      "LearningSupportNeed": {
                        "RefId": "ca222226-359d-7510-1a8c-36432a901a16"
                      },
                      "ResponseType": "ADA",
                      "ResponseDetail": "ACU",
                      "ResponseGoals": "The student is confident in their reading ability.",
                      "TierOfResponse": "IND",
                      "InternalResponse": {
                        "ProvidedBy": "TEA",
                        "ProvidedByName": "Jane Doe",
                        "Status": "MON",
                        "FundedBy": "BOA"
                      },
                      "ReviewDate": "2020-12-31T00:00:00+1200",
                      "ReviewList": {
                        "Review": [
                          {
                            "Reviewer": {
                              "RefId": "ca2bbb26-359d-2480-1a8c-36432a901a16"
                            },
                            "ReviewDate": "2019-11-11T00:00:00+1200",
                            "ReviewComments": "The student is progressing well. Ability to identify words is increasing and is gaining confidence in trying to sound out words they do not recognise.",
                            "NextReviewDate": "2020-01-21T00:00:00+1200"
                          }
                        ]
                      },
                      "AttachmentList": {
                        "Document": [
                          {
                            "RefId": "ca2bbb26-359d-3480-1a8c-36432a901a16"
                          }
                        ]
                      },
                      "RecordAudit": {
                        "CreatedDateTime": "2019-10-28T06:30:57+1200",
                        "CreatedBy": {
                          "RefId": "ca222226-359d-2480-1a8c-36432a901a16"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportResponseCREATEList"
              },
              "example": "<StudentLearningSupportResponses>\n  <StudentLearningSupportResponse>\n    <StudentLearningSupportResponseRefId>461b63b4-cfef-4820-8501-e7dbbb4555cb</StudentLearningSupportResponseRefId>\n    <Organisation>\n      <RefId>9651</RefId>\n    </Organisation>\n    <Student>\n      <RefId>ca285746-359d-7510-1a8c-36432a901a16</RefId>\n    </Student>\n    <LearningSupportNeed>\n      <RefId>ca222226-359d-7510-1a8c-36432a901a16</RefId>\n    </LearningSupportNeed>\n    <ResponseType>ADA</ResponseType>\n    <ResponseDetail>ACU</ResponseDetail>\n    <ResponseGoals>The student is confident in their reading ability.</ResponseGoals>\n    <TierOfResponse>IND</TierOfResponse>\n    <InternalResponse>\n      <ProvidedBy>TEA</ProvidedBy>\n      <ProvidedByName>Jane Doe</ProvidedByName>\n      <Status>MON</Status>\n      <FundedBy>BOA</FundedBy>\n    </InternalResponse>\n    <ReviewDate>2020-12-31</ReviewDate>\n    <ReviewList>\n      <Review>\n        <Reviewer>\n          <RefId>ca2bbb26-359d-2480-1a8c-36432a901a16</RefId>\n        </Reviewer>\n        <ReviewDate>2019-11-11</ReviewDate>\n        <ReviewComments>The student is progressing well. Ability to identify words is increasing and is gaining confidence in trying to sound out words they do not recognise.</ReviewComments>\n        <NextReviewDate>2010-01-21</NextReviewDate>\n      </Review>\n    </ReviewList>\n    <AttachmentList>\n      <Document>\n        <RefId>ca2bbb26-359d-3480-1a8c-36432a901a16</RefId>\n      </Document>\n    </AttachmentList>\n  </StudentLearningSupportResponse>\n</StudentLearningSupportResponse>"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create successful; returns created objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects created, some creates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseErrorList"
                },
                "example": [
                  {
                    "StudentLearningSupportResponse": {
                      "StudentLearningSupportResponseRefId": "461b63b4-cfef-4820-8501-e7dbbb4555cb",
                      "StudentLearningSupportResponseLocalId": "LSRRSP-HPotter-4d",
                      "Organisation": {
                        "RefId": "9651"
                      },
                      "Student": {
                        "RefId": "ca285746-359d-7510-1a8c-36432a901a16"
                      },
                      "LearningSupportNeed": {
                        "RefId": "ca222226-359d-7510-1a8c-36432a901a16"
                      },
                      "ResponseType": "ADA",
                      "ResponseDetail": "ACU",
                      "ResponseGoals": "The student is confident in their reading ability.",
                      "TierOfResponse": "IND",
                      "InternalResponse": {
                        "ProvidedBy": "TEA",
                        "ProvidedByName": "Jane Doe",
                        "Status": "MON",
                        "FundedBy": "BOA"
                      },
                      "ReviewDate": "2020-12-31T00:00:00+1200",
                      "ReviewList": {
                        "Review": [
                          {
                            "Reviewer": {
                              "RefId": "ca2bbb26-359d-2480-1a8c-36432a901a16"
                            },
                            "ReviewDate": "2019-11-11T00:00:00+1200",
                            "ReviewComments": "The student is progressing well. Ability to identify words is increasing and is gaining confidence in trying to sound out words they do not recognise.",
                            "NextReviewDate": "2020-01-21T00:00:00+1200"
                          }
                        ]
                      },
                      "AttachmentList": {
                        "Document": [
                          {
                            "RefId": "ca2bbb26-359d-3480-1a8c-36432a901a16"
                          }
                        ]
                      },
                      "RecordAudit": {
                        "CreatedDateTime": "2019-10-28T06:30:57+1200",
                        "CreatedBy": {
                          "RefId": "ca222226-359d-2480-1a8c-36432a901a16"
                        }
                      }
                    }
                  },
                  {
                    "Error": {
                      "error": 1009,
                      "when": "2020-07-16T20:00:46.000Z",
                      "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
                      "localId": "ST-002",
                      "refId": null
                    }
                  }
                ]
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseErrorList"
                },
                "example": "<Response>\n  <StudentLearningSupportResponse>\n    <StudentLearningSupportResponseRefId>461b63b4-cfef-4820-8501-e7dbbb4555cb</StudentLearningSupportResponseRefId>\n    <Organisation>\n      <RefId>9651</RefId>\n    </Organisation>\n    <Student>\n      <RefId>ca285746-359d-7510-1a8c-36432a901a16</RefId>\n    </Student>\n    <LearningSupportNeed>\n      <RefId>ca222226-359d-7510-1a8c-36432a901a16</RefId>\n    </LearningSupportNeed>\n    <ResponseType>ADA</ResponseType>\n    <ResponseDetail>ACU</ResponseDetail>\n    <ResponseGoals>The student is confident in their reading ability.</ResponseGoals>\n    <TierOfResponse>IND</TierOfResponse>\n    <InternalResponse>\n      <ProvidedBy>TEA</ProvidedBy>\n      <ProvidedByName>Jane Doe</ProvidedByName>\n      <Status>MON</Status>\n      <FundedBy>BOA</FundedBy>\n    </InternalResponse>\n    <ReviewDate>2020-12-31</ReviewDate>\n    <ReviewList>\n      <Review>\n        <Reviewer>\n          <RefId>ca2bbb26-359d-2480-1a8c-36432a901a16</RefId>\n        </Reviewer>\n        <ReviewDate>2019-11-11</ReviewDate>\n        <ReviewComments>The student is progressing well. Ability to identify words is increasing and is gaining confidence in trying to sound out words they do not recognise.</ReviewComments>\n        <NextReviewDate>2010-01-21</NextReviewDate>\n      </Review>\n    </ReviewList>\n    <AttachmentList>\n      <Document>\n        <RefId>ca2bbb26-359d-3480-1a8c-36432a901a16</RefId>\n      </Document>\n    </AttachmentList>\n  </StudentLearningSupportResponse>\n  <Error>\n    <error>1009</error>\n    <when>2020-07-16T20:00:46.000Z</when>\n    <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n    <localId>ST-002</localId>\n    <refId/>\n  </Error>      \n</Response>"
              }
            },
            "x-overrideType": "StudentLearningSupportResponseErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "get": {
        "tags": [
          "StudentLearningSupportResponse"
        ],
        "summary": "Retrieve one or more StudentLearningSupportResponses",
        "description": "<p>Bulk operation to retrieve one or more StudentLearningSupportResponses, each of which  is a record of the responses generated by a student's Learning Support needs.</p> <p><strong>Note:</strong> Learning support needs are recorded as <a href=\"#tag/WellbeingCharacteristic\">WellbeingCharacteristics</a></p>",
        "operationId": "getStudentLearningSupportResponses",
        "security": [
          {
            "sifDataObject": [
              "LSR",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false
      },
      "put": {
        "tags": [
          "StudentLearningSupportResponse"
        ],
        "summary": "Update one or more StudentLearningSupportResponses",
        "description": "<p>Bulk operation to update one or more StudentLearningSupportResponses, each of which  is a record of the responses generated by a student's Learning Support needs.</p> <p><strong>Note:</strong> Learning support needs are recorded as <a href=\"#tag/WellbeingCharacteristic\">WellbeingCharacteristics</a></p>",
        "operationId": "updateStudentLearningSupportResponses",
        "security": [
          {
            "sifDataObject": [
              "LSR"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentLearningSupportResponse",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportResponseCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentlearningsupportresponse/post/requestBody/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportResponseCREATEList"
              },
              "example": {
                "$ref": "#/paths/~1studentlearningsupportresponse/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects updated, some updates failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentLearningSupportResponseErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "StudentLearningSupportResponse"
        ],
        "summary": "Patch one or more StudentLearningSupportResponses",
        "description": "<p>Bulk operation to update one or more fields of one or more StudentLearningSupportResponses, each of which  is a record of the responses generated by a student's Learning Support needs.</p> <p><strong>Note:</strong> Learning support needs are recorded as <a href=\"#tag/WellbeingCharacteristic\">WellbeingCharacteristics</a></p>",
        "operationId": "patchStudentLearningSupportResponses",
        "security": [
          {
            "sifDataObject": [
              "LSR"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentLearningSupportResponse",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportResponsePATCHList"
              },
              "example": {
                "StudentLearningSupportResponses": {
                  "StudentLearningSupportResponse": [
                    {
                      "StudentLearningSupportResponseRefId": "461b63b4-cfef-4820-8501-e7dbbb4555cb",
                      "StudentLearningSupportResponseLocalId": "LSRRSP-HPotter-4d",
                      "Organisation": {
                        "RefId": "9651"
                      },
                      "Student": {
                        "RefId": "ca285746-359d-7510-1a8c-36432a901a16"
                      },
                      "LearningSupportNeed": {
                        "RefId": "ca222226-359d-7510-1a8c-36432a901a16"
                      },
                      "ResponseType": "ADA",
                      "ResponseDetail": "ACU",
                      "ResponseGoals": "The student is confident in their reading ability.",
                      "TierOfResponse": "IND",
                      "InternalResponse": {
                        "ProvidedBy": "TEA",
                        "ProvidedByName": "Jane Doe",
                        "Status": "MON",
                        "FundedBy": "BOA"
                      },
                      "ReviewDate": "2020-12-31T00:00:00+1200",
                      "ReviewList": {
                        "Review": [
                          {
                            "Reviewer": {
                              "RefId": "ca2bbb26-359d-2480-1a8c-36432a901a16"
                            },
                            "ReviewDate": "2019-11-11T00:00:00+1200",
                            "ReviewComments": "The student is progressing well. Ability to identify words is increasing and is gaining confidence in trying to sound out words they do not recognise.",
                            "NextReviewDate": "2020-01-21T00:00:00+1200"
                          }
                        ]
                      },
                      "AttachmentList": {
                        "Document": [
                          {
                            "RefId": "ca2bbb26-359d-3480-1a8c-36432a901a16"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportResponsePATCHList"
              },
              "example": {
                "$ref": "#/paths/~1studentlearningsupportresponse/post/requestBody/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "description": "Some objects patched, some patches failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse/post/responses/422/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseErrorList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse/post/responses/422/content/application~1xml/example"
                }
              }
            },
            "x-overrideType": "StudentLearningSupportResponseErrorList"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/studentlearningsupportresponse/{studentLearningSupportResponseRefId}": {
      "get": {
        "tags": [
          "StudentLearningSupportResponse"
        ],
        "summary": "Retrieve a single StudentLearningSupportResponse",
        "description": "<p>Retrieve a particular response generated by a particular student's Learning Support need.</p> <p><strong>Note:</strong> Learning support needs are recorded as <a href=\"#tag/WellbeingCharacteristic\">WellbeingCharacteristics</a></p>",
        "operationId": "getStudentLearningSupportResponse",
        "security": [
          {
            "sifDataObject": [
              "LSR",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentLearningSupportResponseRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular  set of meta-data and metrics pertaining to a particular student's Learning Support needs.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATE"
                },
                "example": {
                  "StudentLearningSupportResponse": {
                    "StudentLearningSupportResponseRefId": "461b63b4-cfef-4820-8501-e7dbbb4555cb",
                    "StudentLearningSupportResponseLocalId": "LSRRSP-HPotter-4d",
                    "Organisation": {
                      "RefId": "9651"
                    },
                    "Student": {
                      "RefId": "ca285746-359d-7510-1a8c-36432a901a16"
                    },
                    "LearningSupportNeed": {
                      "RefId": "ca222226-359d-7510-1a8c-36432a901a16"
                    },
                    "ResponseType": "ADA",
                    "ResponseDetail": "ACU",
                    "ResponseGoals": "The student is confident in their reading ability.",
                    "TierOfResponse": "IND",
                    "InternalResponse": {
                      "ProvidedBy": "TEA",
                      "ProvidedByName": "Jane Doe",
                      "Status": "MON",
                      "FundedBy": "BOA"
                    },
                    "ReviewDate": "2020-12-31T00:00:00+1200",
                    "ReviewList": {
                      "Review": [
                        {
                          "Reviewer": {
                            "RefId": "ca2bbb26-359d-2480-1a8c-36432a901a16"
                          },
                          "ReviewDate": "2019-11-11T00:00:00+1200",
                          "ReviewComments": "The student is progressing well. Ability to identify words is increasing and is gaining confidence in trying to sound out words they do not recognise.",
                          "NextReviewDate": "2020-01-21T00:00:00+1200"
                        }
                      ]
                    },
                    "AttachmentList": {
                      "Document": [
                        {
                          "RefId": "ca2bbb26-359d-3480-1a8c-36432a901a16"
                        }
                      ]
                    },
                    "RecordAudit": {
                      "CreatedDateTime": "2019-10-28T06:30:57+1200",
                      "CreatedBy": {
                        "RefId": "ca222226-359d-2480-1a8c-36432a901a16"
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATE"
                },
                "example": "<StudentLearningSupportResponse>\n  <StudentLearningSupportResponseRefId>461b63b4-cfef-4820-8501-e7dbbb4555cb</StudentLearningSupportResponseRefId>\n  <Organisation>\n    <RefId>9651</RefId>\n  </Organisation>\n  <Student>\n    <RefId>ca285746-359d-7510-1a8c-36432a901a16</RefId>\n  </Student>\n  <LearningSupportNeed>\n    <RefId>ca222226-359d-7510-1a8c-36432a901a16</RefId>\n  </LearningSupportNeed>\n  <ResponseType>ADA</ResponseType>\n  <ResponseDetail>ACU</ResponseDetail>\n  <ResponseGoals>The student is confident in their reading ability.</ResponseGoals>\n  <TierOfResponse>IND</TierOfResponse>\n  <InternalResponse>\n    <ProvidedBy>TEA</ProvidedBy>\n    <ProvidedByName>Jane Doe</ProvidedByName>\n    <Status>MON</Status>\n    <FundedBy>BOA</FundedBy>\n  </InternalResponse>\n  <ReviewDate>2020-12-31</ReviewDate>\n  <ReviewList>\n    <Review>\n      <Reviewer>\n        <RefId>ca2bbb26-359d-2480-1a8c-36432a901a16</RefId>\n      </Reviewer>\n      <ReviewDate>2019-11-11</ReviewDate>\n      <ReviewComments>The student is progressing well. Ability to identify words is increasing and is gaining confidence in trying to sound out words they do not recognise.</ReviewComments>\n      <NextReviewDate>2010-01-21</NextReviewDate>\n    </Review>\n  </ReviewList>\n  <AttachmentList>\n    <Document>\n      <RefId>ca2bbb26-359d-3480-1a8c-36432a901a16</RefId>\n    </Document>\n  </AttachmentList>\n</StudentLearningSupportResponse>"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true
      },
      "put": {
        "tags": [
          "StudentLearningSupportResponse"
        ],
        "summary": "Update a single StudentLearningSupportResponse",
        "description": "<p>Update a particular response generated by a particular student's Learning Support need.</p> <p><strong>Note:</strong> Learning support needs are recorded as <a href=\"#tag/WellbeingCharacteristic\">WellbeingCharacteristics</a></p>",
        "operationId": "updateStudentLearningSupportResponse",
        "security": [
          {
            "sifDataObject": [
              "LSR"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentLearningSupportResponseRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular  set of meta-data and metrics pertaining to a particular student's Learning Support needs.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentLearningSupportResponse",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportResponseCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentlearningsupportresponse~1%7BstudentLearningSupportResponseRefId%7D/get/responses/200/content/application~1json/example"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportResponseCREATE"
              },
              "example": {
                "$ref": "#/paths/~1studentlearningsupportresponse~1%7BstudentLearningSupportResponseRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful; returns updated object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse~1%7BstudentLearningSupportResponseRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse~1%7BstudentLearningSupportResponseRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/updateError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      },
      "patch": {
        "tags": [
          "StudentLearningSupportResponse"
        ],
        "summary": "Patch a single StudentLearningSupportResponse",
        "description": "<p>Update one or more fields of a particular response generated by a particular student's Learning Support need.</p> <p><strong>Note:</strong> Learning support needs are recorded as <a href=\"#tag/WellbeingCharacteristic\">WellbeingCharacteristics</a></p>",
        "operationId": "patchStudentLearningSupportResponse",
        "security": [
          {
            "sifDataObject": [
              "LSR"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "name": "studentLearningSupportResponseRefId",
            "in": "path",
            "description": "<p>Unique identifier (GUID) that uniquely identifies the particular  set of meta-data and metrics pertaining to a particular student's Learning Support needs.</p>",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
            },
            "x-isPK": true
          }
        ],
        "requestBody": {
          "description": "CRUD operation on StudentLearningSupportResponse",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportResponsePATCH"
              },
              "example": {
                "StudentLearningSupportResponse": {
                  "StudentLearningSupportResponseRefId": "461b63b4-cfef-4820-8501-e7dbbb4555cb",
                  "StudentLearningSupportResponseLocalId": "LSRRSP-HPotter-4d",
                  "Organisation": {
                    "RefId": "9651"
                  },
                  "Student": {
                    "RefId": "ca285746-359d-7510-1a8c-36432a901a16"
                  },
                  "LearningSupportNeed": {
                    "RefId": "ca222226-359d-7510-1a8c-36432a901a16"
                  },
                  "ResponseType": "ADA",
                  "ResponseDetail": "ACU",
                  "ResponseGoals": "The student is confident in their reading ability.",
                  "TierOfResponse": "IND",
                  "InternalResponse": {
                    "ProvidedBy": "TEA",
                    "ProvidedByName": "Jane Doe",
                    "Status": "MON",
                    "FundedBy": "BOA"
                  },
                  "ReviewDate": "2020-12-31T00:00:00+1200",
                  "ReviewList": {
                    "Review": [
                      {
                        "Reviewer": {
                          "RefId": "ca2bbb26-359d-2480-1a8c-36432a901a16"
                        },
                        "ReviewDate": "2019-11-11T00:00:00+1200",
                        "ReviewComments": "The student is progressing well. Ability to identify words is increasing and is gaining confidence in trying to sound out words they do not recognise.",
                        "NextReviewDate": "2020-01-21T00:00:00+1200"
                      }
                    ]
                  },
                  "AttachmentList": {
                    "Document": [
                      {
                        "RefId": "ca2bbb26-359d-3480-1a8c-36432a901a16"
                      }
                    ]
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StudentLearningSupportResponsePATCH"
              },
              "example": {
                "$ref": "#/paths/~1studentlearningsupportresponse~1%7BstudentLearningSupportResponseRefId%7D/get/responses/200/content/application~1xml/example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch successful; returns patched object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse~1%7BstudentLearningSupportResponseRefId%7D/get/responses/200/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATE"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse~1%7BstudentLearningSupportResponseRefId%7D/get/responses/200/content/application~1xml/example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/patchError"
          }
        },
        "x-isBulk": false,
        "x-isSingle": true,
        "x-orgIdFields": [
          "Organisation.RefId"
        ]
      }
    },
    "/studentpersonal/{studentPersonalRefId}/studentlearningsupportresponse": {
      "get": {
        "tags": [
          "StudentLearningSupportResponse"
        ],
        "summary": "Retrieve StudentLearningSupportResponses by Student",
        "description": "<p>Retrieve all available StudentLearningSupportResponses for a particular Student, each of which  is a record of the responses generated by a student's Learning Support needs.</p> <p><strong>Note:</strong> Learning support needs are recorded as <a href=\"#tag/WellbeingCharacteristic\">WellbeingCharacteristics</a></p>",
        "operationId": "getStudentLearningSupportResponsesByStudent",
        "security": [
          {
            "sifDataObject": [
              "LSR",
              "SMS"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/edsbyParamFields"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPage"
          },
          {
            "$ref": "#/components/parameters/edsbyParamMax"
          },
          {
            "$ref": "#/components/parameters/edsbyParamUnwrap"
          },
          {
            "$ref": "#/components/parameters/edsbyParamHuman"
          },
          {
            "$ref": "#/components/parameters/edsbyParamSort"
          },
          {
            "$ref": "#/components/parameters/edsbyParamField"
          },
          {
            "$ref": "#/components/parameters/edsbyParamPattern"
          },
          {
            "$ref": "#/components/parameters/httpParamAccept"
          },
          {
            "$ref": "#/components/parameters/edsbyAPIClientId"
          },
          {
            "$ref": "#/components/parameters/providerRefId"
          },
          {
            "$ref": "#/components/parameters/studentPersonalRefId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse/post/requestBody/content/application~1json/example"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StudentLearningSupportResponseCREATEList"
                },
                "example": {
                  "$ref": "#/paths/~1studentlearningsupportresponse/post/requestBody/content/application~1xml/example"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/queryError"
          }
        },
        "x-isBulk": true,
        "x-isSingle": false,
        "x-byEntity": "ByStudentPersonal"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "sifDataObject": {
        "type": "oauth2",
        "description": "OAuth 2.0 authentication is applied to all SIF data objects. Scope provided in the  JWT access token will be verified against Te Rito user account role, that is separately provisioned.",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://login.microsoftonline.com/6418b52e-37db-4261-bcf7-d64c4b0a59f5/oauth2/v2.0/token",
            "scopes": {
              "FIRST": "Authorised as FIRST integration hub, able to maintain <a href=\"#tag/Organisation\">Organisation</a> and  <a href=\"#tag/OrganisationRelationship\">OrganisationRelationship</a>. SIF role # <code>2501</code>",
              "SUPS": "Authorised as Secondary User Provisioning System (SUPS) integration hub, able to maintain <a href=\"#tag/StaffPersonal\">StaffPersonal</a> and  <a href=\"#tag/StaffAssignment\">StaffAssignment</a>. SIF role # <code>2502</code>",
              "NZQA": "Authorised client able to maintain <a href=\"#tag/LearningStandard\">LearningStandard</a> and  <a href=\"#tag/Credential\">Credential</a>. SIF role # <code>2503</code>",
              "LSR": "Authorised client able to maintain <a href=\"#tag/StudentLearningSupport\">StudentLearningSupport</a>, <a href=\"#tag/StudentLearningSupportResponse\">StudentLearningSupportResponse</a> and Learning Support need flavours of <a href=\"#tag/WellbeingCharacteristic\">WellbeingCharacteristic</a>. SIF role # <code>2504</code>",
              "SMS": "Authorised as SMS Client on behalf of a particular provider (School/ECE). SIF role # <code>2505</code>",
              "DEFERRED": "Authorised to access the deferred APIs"
            }
          }
        }
      }
    },
    "parameters": {
      "syncOverride": {
        "name": "x-http-method-override",
        "in": "header",
        "description": "Rather than CREATE records, treat this request as a SYNC request.",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/postOverride"
        },
        "x-isPK": false
      },
      "providerRefIdWithOrphans": {
        "name": "X-Edsby-OrganisationRefId",
        "in": "header",
        "required": true,
        "description": "<p>The Ministry of Education Organisation Id of the Provider (or other Organisation);  used to limit the scope of the API endpoint to a particular MoE Organisation.</p> <p>Special value <strong>_Orphans</strong> limits the scope of the API endpoint to  those entities that are not currently connected to any MoE Organisation.</p>",
        "schema": {
          "type": "string",
          "pattern": "^([1-9][0-9]{0,4})|(orphans)$"
        },
        "example": "9651",
        "x-isOrgId": true,
        "x-isPK": true
      },
      "providerRefId": {
        "name": "X-Edsby-OrganisationRefId",
        "in": "header",
        "required": true,
        "description": "<p>The Ministry of Education Organisation Id of the Provider(or other Organisation); used to limit the scope of the API endpoint to a particular MoE Organisation.</p>",
        "schema": {
          "type": "string",
          "pattern": "^[1-9][0-9]{0,4}$"
        },
        "example": "9651",
        "x-isOrgId": true,
        "x-isPK": true
      },
      "staffPersonalRefId": {
        "name": "staffPersonalRefId",
        "in": "path",
        "required": true,
        "description": "System RefId of the staff member.",
        "schema": {
          "type": "string",
          "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
        },
        "example": "7b5256e7-01fe-4f5b-89e6-2e5d1e1c9a52",
        "x-isPK": true
      },
      "studentPersonalRefId": {
        "name": "studentPersonalRefId",
        "in": "path",
        "required": true,
        "description": "System RefId of the student.",
        "schema": {
          "type": "string",
          "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
        },
        "example": "979fbe68-4cfd-41c1-a98d-40e5601c7d98",
        "x-isPK": true
      },
      "teachingGroupRefId": {
        "name": "teachingGroupRefId",
        "in": "path",
        "required": true,
        "description": "<p>The GUID of the TeachingGroup</p>",
        "schema": {
          "type": "string",
          "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
        },
        "example": "a95c6a41-caa8-46a5-a78e-1cde7cf311bc",
        "x-isPK": true
      },
      "scheduleRefId": {
        "name": "scheduleRefId",
        "in": "path",
        "required": true,
        "description": "System RefId of the timetable Schedule",
        "schema": {
          "type": "string",
          "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
        },
        "example": "b43b2ae8-6b2a-42bc-802c-c4c5cf32eebf",
        "x-isPK": true
      },
      "httpParamAccept": {
        "name": "Accept",
        "in": "header",
        "description": "Standard HTTP accept header, choose between JSON and XML for response. Defaults to XML if this header is missing.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/acceptEnum"
        },
        "example": "application/json",
        "x-isPK": false
      },
      "httpParamAcceptDbg": {
        "name": "Accept",
        "in": "header",
        "description": "Standard HTTP accept header, choose between JSON and XML for response. Defaults to XML if this header is missing.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "application/json",
            "application/xml"
          ]
        },
        "example": "application/json",
        "x-isPK": false
      },
      "edsbyParamFields": {
        "name": "fields",
        "in": "query",
        "description": "Return only specified fields\t`fields=name,nid`",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "PersonInfo.Name.FamilyName,PersonInfo.Name.GivenName"
      },
      "edsbyParamPage": {
        "name": "page",
        "in": "query",
        "description": "Return nth page of results; default 0\t`page=2`; applies to any call with repeated data",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 2
      },
      "edsbyParamMax": {
        "name": "max",
        "in": "query",
        "description": "Maximum items per page, default 10,000; `max=100`; applies to any call with repeated data",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1
        },
        "example": 100
      },
      "edsbyParamUnwrap": {
        "name": "unwrap",
        "in": "query",
        "description": "Remove top level wrapper from json results in single result reponses;\t`unwrap=1`",
        "required": false,
        "schema": {
          "enum": [
            0,
            1,
            2
          ]
        },
        "example": 1
      },
      "edsbyParamHuman": {
        "name": "human",
        "in": "query",
        "description": "For code set fields, translate code to human readable form;\t`human=1`",
        "required": false,
        "schema": {
          "type": "integer",
          "enum": [
            0,
            1
          ]
        },
        "example": 1
      },
      "edsbyParamStart": {
        "name": "start",
        "in": "query",
        "description": "Include only items from start date;\t`start=2017-08-01`",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date"
        },
        "example": "2017-08-01"
      },
      "edsbyParamEnd": {
        "name": "end",
        "in": "query",
        "description": "Include only items before end date;\t`end=2017-08-31`",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date"
        },
        "example": "2018-08-31"
      },
      "edsbyParamSort": {
        "name": "sort",
        "in": "query",
        "description": "Sort results by specified field;\t`sort=FamilyName`",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "PersonInfo.Name.FamilyName,PersonInfo.Name.GivenName"
      },
      "edsbyParamField": {
        "name": "field",
        "in": "query",
        "description": "Field to filter on when used with **pattern**;\t`field=FamilyName`",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "PersonName.Name.FamilyName"
      },
      "edsbyParamPattern": {
        "name": "pattern",
        "in": "query",
        "description": "Filter results using pattern on **field**; `pattern=We*`",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "We*"
      },
      "edsbyParamObjects": {
        "name": "objects",
        "in": "query",
        "description": "CSV delimited list of data object names; limits the search to only some data objects: staffpersonal, studentpersonal",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "StudentPersonal,StaffPersonal"
      },
      "edsbyParamSrchPattern": {
        "name": "pattern",
        "in": "query",
        "description": "Select objects where search index includes the given pattern pattern; `pattern=Sco*`",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "Sco*"
      },
      "edsbyParamSrchQuery": {
        "name": "query",
        "in": "query",
        "description": "Use lucene query language to select objects;",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "PersonInfo.Name.GivenName:joel"
      },
      "edsbyAPIClientId": {
        "name": "X-Edsby-APIClientId",
        "in": "header",
        "required": true,
        "description": "<p>Identifies the client making the API call to network infrastructure allowing WAFs to conduct rate limiting, gather usage statistics, etc. without having to unpack the username, subject claim or API key from the Authorization header.</p> <p>Must be populated with the subject claim GUID from the access token in the Authorization header.</p>",
        "schema": {
          "type": "string",
          "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
        },
        "example": "7b5256e7-01fe-4f5b-89e6-2e7c3e1c9a52"
      },
      "statusIA": {
        "name": "status",
        "in": "query",
        "description": "Filter the results; based upon the value of the Status field",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/statusIA"
        },
        "example": "A"
      },
      "statusENR": {
        "name": "status",
        "in": "query",
        "description": "Filter the results; based upon the Status of the enrolment",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/statusENR"
        },
        "example": "ACT"
      }
    },
    "responses": {
      "400": {
        "description": "Bad request - Request body invalid, Content, Accept, X-Edsby-OrganisationRefId, X-Edsby-APIClientId or other required Headers missing, etc.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorBody"
            },
            "example": {
              "error": 400,
              "when": "2020-07-16T20:00:46.000Z",
              "errorstr": "Unprocessable request: Request body invalid according to JSON schema? Accept or X-Edsby-OrganisationRefId header missing?"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorised - Authorization header missing, or contents incorrect.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorBody"
            },
            "example": {
              "error": 401,
              "when": "2020-07-16T20:00:46.000Z",
              "errorstr": "Unauthorised request: Authorisation header missing, or incorrect."
            }
          }
        }
      },
      "403": {
        "description": "Forbidden - API client has successfully authenticated, but is not authorised to make this API call",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorBody"
            },
            "example": {
              "error": 401,
              "when": "2020-07-16T20:00:46.000Z",
              "errorstr": "Forbidden request: API endpoint not permitted to client"
            }
          }
        }
      },
      "404": {
        "description": "Not Found - resource in URL not found.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorBody"
            },
            "example": {
              "error": 404,
              "when": "2020-07-16T20:00:46.000Z",
              "errorstr": "Not Found: URL doesn't refer to known object"
            }
          }
        }
      },
      "queryError": {
        "description": "Failed to retrieve object(s).",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorBody"
            },
            "example": {
              "error": 1009,
              "when": "2020-07-16T20:00:46.000Z",
              "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
              "localId": "ST-002"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/errorBody"
            },
            "example": "<Error>\n  <error>1009</error>\n  <when>2020-07-16T20:00:46.000Z</when>\n  <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n  <localId>ST-002</localId>\n</Error>        "
          }
        }
      },
      "createError": {
        "description": "Failed to create object(s).",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorBody"
            },
            "example": {
              "error": 1009,
              "when": "2020-07-16T20:00:46.000Z",
              "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
              "localId": "ST-002"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/errorBody"
            },
            "example": "<Error>\n  <error>1009</error>\n  <when>2020-07-16T20:00:46.000Z</when>\n  <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n  <localId>ST-002</localId>\n</Error>        "
          }
        }
      },
      "updateError": {
        "description": "Failed to update object.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorBody"
            },
            "example": {
              "error": 1009,
              "when": "2020-07-16T20:00:46.000Z",
              "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
              "localId": "ST-002"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/errorBody"
            },
            "example": "<Error>\n  <error>1009</error>\n  <when>2020-07-16T20:00:46.000Z</when>\n  <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n  <localId>ST-002</localId>\n</Error>        "
          }
        }
      },
      "patchError": {
        "description": "Failed to patch object.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorBody"
            },
            "example": {
              "error": 1009,
              "when": "2020-07-16T20:00:46.000Z",
              "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
              "localId": "ST-002"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/errorBody"
            },
            "example": "<Error>\n  <error>1009</error>\n  <when>2020-07-16T20:00:46.000Z</when>\n  <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n  <localId>ST-002</localId>\n</Error>        "
          }
        }
      },
      "deleteError": {
        "description": "Failed to delete object.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorBody"
            },
            "example": {
              "error": 1009,
              "when": "2020-07-16T20:00:46.000Z",
              "errorstr": "Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'",
              "localId": "ST-002"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/errorBody"
            },
            "example": "<Error>\n  <error>1009</error>\n  <when>2020-07-16T20:00:46.000Z</when>\n  <errorstr>Bad field: PersonInfo-Name-FamilyName: missing required field PersonInfo-Name-FamilyName (LastName) 'None'</errorstr>\n  <localId>ST-002</localId>\n</Error>        "
          }
        }
      }
    },
    "schemas": {
      "errorBody": {
        "type": "object",
        "title": "error",
        "required": [
          "error",
          "when",
          "errorstr"
        ],
        "additionalProperties": false,
        "properties": {
          "error": {
            "type": "integer",
            "description": "Edsby defined error code"
          },
          "when": {
            "type": "string",
            "format": "date-time",
            "description": "Date and Time of when the HTTP request was processed."
          },
          "errorstr": {
            "type": "string",
            "description": "Narrative text describing the error"
          },
          "refId": {
            "type": "string",
            "description": "Data object refId of the object being created/updated"
          },
          "localId": {
            "type": "string",
            "description": "Data object localId of the object being created/updated"
          }
        }
      },
      "statusIA": {
        "type": "string",
        "description": "<p>Code set denoting the status of an entity.</p> <p>Set to Active when: StartDate => today's date and EndDate is NULL or EndDate > than today's date.</p> <p>Set to Inactive when: StartDate < today's date or EndDate =< today's date.</p> <ul>\n  <li>'A' - Active</li>\n  <li>'I' - Inactive</li>\n</ul>",
        "enum": [
          "A",
          "I"
        ]
      },
      "statusENR": {
        "type": "string",
        "description": "<p>Records the status of a potentially multi-year Provider enrolment, which goes through a different life-cycle to the single-year school enrolment.</p> <ul>\n  <li>'APP' - Application</li>\n  <li>'ACC' - Accepted</li>\n  <li>'CAN' - Cancelled</li>\n  <li>'ACT' - Active</li>\n  <li>'WIT' - Withdrawn</li>\n  <li>'PEN' - Pending</li>\n</ul>      ",
        "enum": [
          "APP",
          "ACC",
          "CAN",
          "ACT",
          "WIT",
          "PEN"
        ]
      },
      "postOverride": {
        "type": "string",
        "enum": [
          "IncrementalSync",
          "FullSync"
        ]
      },
      "acceptEnum": {
        "type": "string",
        "enum": [
          "application/json",
          "application/xml"
        ],
        "default": "application/json"
      },
      "Search": {
        "type": "object",
        "properties": {
          "Search": {
            "type": "object",
            "properties": {
              "Summary": {
                "type": "object",
                "description": "Statistical summary of the search results returned.",
                "properties": {
                  "Shown": {
                    "type": "integer",
                    "description": "Count of objects returned in this response"
                  },
                  "More": {
                    "type": "integer",
                    "description": "Count of objects yet to be returned, because of `max` page size limit"
                  }
                }
              },
              "SearchResults": {
                "type": "object",
                "description": "The data objects found",
                "properties": {
                  "Personals": {
                    "type": "object",
                    "description": "Staff &amp; Student Personal objects found",
                    "properties": {
                      "StaffPersonals": {
                        "type": "object",
                        "description": "StaffPersonal objects found",
                        "properties": {
                          "StaffPersonal": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Name": {
                                  "type": "string",
                                  "description": "Full name from the search index"
                                },
                                "Rank": {
                                  "type": "number",
                                  "description": "Degree of match to search criteria"
                                },
                                "Type": {
                                  "type": "string",
                                  "description": "Internal data type of object returned"
                                },
                                "ProviderName": {
                                  "type": "array",
                                  "description": "Array of strings, being the names of the Providers associated with the person",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "ProviderRefId": {
                                  "type": "array",
                                  "description": "Array of strings, being the ProviderRefIds of the Providers associated with the person",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "LocalId": {
                                  "type": "string",
                                  "description": "The StaffPersonalLocalId of the staff member located"
                                },
                                "RefId": {
                                  "type": "string",
                                  "description": "The StaffPersonalRefId of the staff member located"
                                },
                                "ESLPairwiseId": {
                                  "type": "string",
                                  "description": "Internal user provisioning identifier for the staff member located"
                                },
                                "PersonInfo": {
                                  "type": "object",
                                  "description": "Partial PersonInfo object",
                                  "properties": {
                                    "Name": {
                                      "type": "object",
                                      "description": "Person name, in pieces and complete",
                                      "properties": {
                                        "Title": {
                                          "type": "string"
                                        },
                                        "FamilyName": {
                                          "type": "string"
                                        },
                                        "GivenName": {
                                          "type": "string"
                                        },
                                        "MiddleName": {
                                          "type": "string"
                                        },
                                        "PreferredGivenName": {
                                          "type": "string"
                                        },
                                        "Suffix": {
                                          "type": "string"
                                        },
                                        "FullName": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "Demographics": {
                                      "type": "object",
                                      "properties": {
                                        "BirthDate": {
                                          "type": "string",
                                          "format": "date"
                                        }
                                      }
                                    },
                                    "EmailCREATEList": {
                                      "type": "object",
                                      "properties": {
                                        "Email": {
                                          "type": "object",
                                          "properties": {
                                            "Address": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "StudentPersonals": {
                        "type": "object",
                        "properties": {
                          "StudentPersonal": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Name": {
                                  "type": "string",
                                  "description": "Full name from the search index"
                                },
                                "Rank": {
                                  "type": "number",
                                  "description": "Degree of match to search criteria"
                                },
                                "Type": {
                                  "type": "string",
                                  "description": "Internal data type of object returned"
                                },
                                "ProviderName": {
                                  "type": "array",
                                  "description": "Array of strings, being the names of the Providers associated with the person",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "ProviderRefId": {
                                  "type": "array",
                                  "description": "Array of strings, being the ProviderRefIds of the Providers associated with the person",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "LocalId": {
                                  "type": "string",
                                  "description": "The StudentPersonalLocalId of the student located"
                                },
                                "RefId": {
                                  "type": "string",
                                  "description": "The StudentPersonalRefId of the student located"
                                },
                                "NationalStudentNumber": {
                                  "type": "string",
                                  "description": "The National Student Number of the student located"
                                },
                                "PersonInfo": {
                                  "type": "object",
                                  "description": "Partial PersonInfo object",
                                  "properties": {
                                    "Name": {
                                      "type": "object",
                                      "description": "Person name, in pieces and complete",
                                      "properties": {
                                        "Title": {
                                          "type": "string"
                                        },
                                        "FamilyName": {
                                          "type": "string"
                                        },
                                        "GivenName": {
                                          "type": "string"
                                        },
                                        "MiddleName": {
                                          "type": "string"
                                        },
                                        "PreferredGivenName": {
                                          "type": "string"
                                        },
                                        "Suffix": {
                                          "type": "string"
                                        },
                                        "FullName": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "Demographics": {
                                      "type": "object",
                                      "properties": {
                                        "BirthDate": {
                                          "type": "string",
                                          "format": "date"
                                        },
                                        "Gender": {
                                          "$ref": "#/components/schemas/NZCodeSetsGender"
                                        }
                                      }
                                    },
                                    "EmailCREATEList": {
                                      "type": "object",
                                      "properties": {
                                        "Email": {
                                          "type": "object",
                                          "properties": {
                                            "Address": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "BellScheduleCREATE": {
        "type": "object",
        "required": [
          "BellSchedule"
        ],
        "additionalProperties": false,
        "properties": {
          "BellSchedule": {
            "$ref": "#/components/schemas/createBellSchedule"
          }
        },
        "x-isWrapperObject": true
      },
      "CredentialCREATE": {
        "type": "object",
        "required": [
          "Credential"
        ],
        "additionalProperties": false,
        "properties": {
          "Credential": {
            "$ref": "#/components/schemas/createCredential"
          }
        },
        "x-isWrapperObject": true
      },
      "LearningStandardCREATE": {
        "type": "object",
        "required": [
          "LearningStandard"
        ],
        "additionalProperties": false,
        "properties": {
          "LearningStandard": {
            "$ref": "#/components/schemas/createLearningStandard"
          }
        },
        "x-isWrapperObject": true
      },
      "OrganisationCREATE": {
        "type": "object",
        "required": [
          "Organisation"
        ],
        "additionalProperties": false,
        "properties": {
          "Organisation": {
            "$ref": "#/components/schemas/createOrganisation"
          }
        },
        "x-isWrapperObject": true
      },
      "OrganisationRelationshipCREATE": {
        "type": "object",
        "required": [
          "OrganisationRelationship"
        ],
        "additionalProperties": false,
        "properties": {
          "OrganisationRelationship": {
            "$ref": "#/components/schemas/createOrganisationRelationship"
          }
        },
        "x-isWrapperObject": true
      },
      "ScheduleCREATE": {
        "type": "object",
        "required": [
          "Schedule"
        ],
        "additionalProperties": false,
        "properties": {
          "Schedule": {
            "$ref": "#/components/schemas/createSchedule"
          }
        },
        "x-isWrapperObject": true
      },
      "ScheduleAcademicDayCREATE": {
        "type": "object",
        "required": [
          "ScheduleAcademicDay"
        ],
        "additionalProperties": false,
        "properties": {
          "ScheduleAcademicDay": {
            "$ref": "#/components/schemas/createScheduleAcademicDay"
          }
        },
        "x-isWrapperObject": true
      },
      "ScheduleDateCREATE": {
        "type": "object",
        "required": [
          "ScheduleDate"
        ],
        "additionalProperties": false,
        "properties": {
          "ScheduleDate": {
            "$ref": "#/components/schemas/createScheduleDate"
          }
        },
        "x-isWrapperObject": true
      },
      "SchedulePeriodCREATE": {
        "type": "object",
        "required": [
          "SchedulePeriod"
        ],
        "additionalProperties": false,
        "properties": {
          "SchedulePeriod": {
            "$ref": "#/components/schemas/createSchedulePeriod"
          }
        },
        "x-isWrapperObject": true
      },
      "ScheduleTermCREATE": {
        "type": "object",
        "required": [
          "ScheduleTerm"
        ],
        "additionalProperties": false,
        "properties": {
          "ScheduleTerm": {
            "$ref": "#/components/schemas/createScheduleTerm"
          }
        },
        "x-isWrapperObject": true
      },
      "StaffAssignmentCREATE": {
        "type": "object",
        "required": [
          "StaffAssignment"
        ],
        "additionalProperties": false,
        "properties": {
          "StaffAssignment": {
            "$ref": "#/components/schemas/createStaffAssignment"
          }
        },
        "x-isWrapperObject": true
      },
      "StaffPersonalCREATE": {
        "type": "object",
        "required": [
          "StaffPersonal"
        ],
        "additionalProperties": false,
        "properties": {
          "StaffPersonal": {
            "$ref": "#/components/schemas/createStaffPersonal"
          }
        },
        "x-isWrapperObject": true
      },
      "StaffTeachingGroupAssignmentCREATE": {
        "type": "object",
        "required": [
          "StaffTeachingGroupAssignment"
        ],
        "additionalProperties": false,
        "properties": {
          "StaffTeachingGroupAssignment": {
            "$ref": "#/components/schemas/createStaffTeachingGroupAssignment"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentAssessmentTaskCREATE": {
        "type": "object",
        "required": [
          "StudentAssessmentTask"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAssessmentTask": {
            "$ref": "#/components/schemas/createStudentAssessmentTask"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentAssessmentTaskResultCREATE": {
        "type": "object",
        "required": [
          "StudentAssessmentTaskResult"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAssessmentTaskResult": {
            "$ref": "#/components/schemas/createStudentAssessmentTaskResult"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentAttainmentCREATE": {
        "type": "object",
        "required": [
          "StudentAttainment"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAttainment": {
            "$ref": "#/components/schemas/createStudentAttainment"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentAttendanceSummaryCREATE": {
        "type": "object",
        "required": [
          "StudentAttendanceSummary"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAttendanceSummary": {
            "$ref": "#/components/schemas/createStudentAttendanceSummary"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentAttendanceTimeListCREATE": {
        "type": "object",
        "required": [
          "StudentAttendanceTimeList"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAttendanceTimeList": {
            "$ref": "#/components/schemas/createStudentAttendanceTimeList"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentContactPersonalCREATE": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentContactPersonal"
        ],
        "properties": {
          "StudentContactPersonal": {
            "$ref": "#/components/schemas/createStudentContactPersonal"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentContactRelationshipCREATE": {
        "type": "object",
        "required": [
          "StudentContactRelationship"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentContactRelationship": {
            "$ref": "#/components/schemas/createStudentContactRelationship"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentLearningSupportCREATE": {
        "type": "object",
        "required": [
          "StudentLearningSupport"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentLearningSupport": {
            "$ref": "#/components/schemas/createStudentLearningSupport"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentLearningSupportResponseCREATE": {
        "type": "object",
        "required": [
          "StudentLearningSupportResponse"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentLearningSupportResponse": {
            "$ref": "#/components/schemas/createStudentLearningSupportResponse"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentPersonalCREATE": {
        "type": "object",
        "required": [
          "StudentPersonal"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentPersonal": {
            "$ref": "#/components/schemas/createStudentPersonal"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentProviderEnrolmentCREATE": {
        "type": "object",
        "required": [
          "StudentProviderEnrolment"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentProviderEnrolment": {
            "$ref": "#/components/schemas/createStudentProviderEnrolment"
          }
        },
        "x-isWrapperObject": true
      },
      "SchoolEnrolmentCREATE": {
        "type": "object",
        "required": [
          "SchoolEnrolment"
        ],
        "additionalProperties": false,
        "properties": {
          "SchoolEnrolment": {
            "$ref": "#/components/schemas/createSchoolEnrolment"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentTeachingGroupEnrolmentCREATE": {
        "type": "object",
        "required": [
          "StudentTeachingGroupEnrolment"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentTeachingGroupEnrolment": {
            "$ref": "#/components/schemas/createStudentTeachingGroupEnrolment"
          }
        },
        "x-isWrapperObject": true
      },
      "TeachingGroupCREATE": {
        "type": "object",
        "required": [
          "TeachingGroup"
        ],
        "additionalProperties": false,
        "properties": {
          "TeachingGroup": {
            "$ref": "#/components/schemas/createTeachingGroup"
          }
        },
        "x-isWrapperObject": true
      },
      "WellbeingCharacteristicCREATE": {
        "type": "object",
        "required": [
          "WellbeingCharacteristic"
        ],
        "additionalProperties": false,
        "properties": {
          "WellbeingCharacteristic": {
            "$ref": "#/components/schemas/createWellbeingCharacteristic"
          }
        },
        "x-isWrapperObject": true
      },
      "BellSchedulePATCH": {
        "type": "object",
        "required": [
          "BellSchedule"
        ],
        "additionalProperties": false,
        "properties": {
          "BellSchedule": {
            "$ref": "#/components/schemas/patchBellSchedule"
          }
        },
        "x-isWrapperObject": true
      },
      "CredentialPATCH": {
        "type": "object",
        "required": [
          "Credential"
        ],
        "additionalProperties": false,
        "properties": {
          "Credential": {
            "$ref": "#/components/schemas/patchCredential"
          }
        },
        "x-isWrapperObject": true
      },
      "LearningStandardPATCH": {
        "type": "object",
        "required": [
          "LearningStandard"
        ],
        "additionalProperties": false,
        "properties": {
          "LearningStandard": {
            "$ref": "#/components/schemas/patchLearningStandard"
          }
        },
        "x-isWrapperObject": true
      },
      "OrganisationPATCH": {
        "type": "object",
        "required": [
          "Organisation"
        ],
        "additionalProperties": false,
        "properties": {
          "Organisation": {
            "$ref": "#/components/schemas/patchOrganisation"
          }
        },
        "x-isWrapperObject": true
      },
      "OrganisationRelationshipPATCH": {
        "type": "object",
        "required": [
          "OrganisationRelationship"
        ],
        "additionalProperties": false,
        "properties": {
          "OrganisationRelationship": {
            "$ref": "#/components/schemas/patchOrganisationRelationship"
          }
        },
        "x-isWrapperObject": true
      },
      "SchedulePATCH": {
        "type": "object",
        "required": [
          "Schedule"
        ],
        "additionalProperties": false,
        "properties": {
          "Schedule": {
            "$ref": "#/components/schemas/patchSchedule"
          }
        },
        "x-isWrapperObject": true
      },
      "ScheduleAcademicDayPATCH": {
        "type": "object",
        "required": [
          "ScheduleAcademicDay"
        ],
        "additionalProperties": false,
        "properties": {
          "ScheduleAcademicDay": {
            "$ref": "#/components/schemas/patchScheduleAcademicDay"
          }
        },
        "x-isWrapperObject": true
      },
      "ScheduleDatePATCH": {
        "type": "object",
        "required": [
          "ScheduleDate"
        ],
        "additionalProperties": false,
        "properties": {
          "ScheduleDate": {
            "$ref": "#/components/schemas/patchScheduleDate"
          }
        },
        "x-isWrapperObject": true
      },
      "SchedulePeriodPATCH": {
        "type": "object",
        "required": [
          "SchedulePeriod"
        ],
        "additionalProperties": false,
        "properties": {
          "SchedulePeriod": {
            "$ref": "#/components/schemas/patchSchedulePeriod"
          }
        },
        "x-isWrapperObject": true
      },
      "ScheduleTermPATCH": {
        "type": "object",
        "required": [
          "ScheduleTerm"
        ],
        "additionalProperties": false,
        "properties": {
          "ScheduleTerm": {
            "$ref": "#/components/schemas/patchScheduleTerm"
          }
        },
        "x-isWrapperObject": true
      },
      "StaffAssignmentPATCH": {
        "type": "object",
        "required": [
          "StaffAssignment"
        ],
        "additionalProperties": false,
        "properties": {
          "StaffAssignment": {
            "$ref": "#/components/schemas/patchStaffAssignment"
          }
        },
        "x-isWrapperObject": true
      },
      "StaffPersonalPATCH": {
        "type": "object",
        "required": [
          "StaffPersonal"
        ],
        "additionalProperties": false,
        "properties": {
          "StaffPersonal": {
            "$ref": "#/components/schemas/patchStaffPersonal"
          }
        },
        "x-isWrapperObject": true
      },
      "StaffTeachingGroupAssignmentPATCH": {
        "type": "object",
        "required": [
          "StaffTeachingGroupAssignment"
        ],
        "additionalProperties": false,
        "properties": {
          "StaffTeachingGroupAssignment": {
            "$ref": "#/components/schemas/patchStaffTeachingGroupAssignment"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentAssessmentTaskPATCH": {
        "type": "object",
        "required": [
          "StudentAssessmentTask"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAssessmentTask": {
            "$ref": "#/components/schemas/patchStudentAssessmentTask"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentAssessmentTaskResultPATCH": {
        "type": "object",
        "required": [
          "StudentAssessmentTaskResult"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAssessmentTaskResult": {
            "$ref": "#/components/schemas/patchStudentAssessmentTaskResult"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentAttainmentPATCH": {
        "type": "object",
        "required": [
          "StudentAttainment"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAttainment": {
            "$ref": "#/components/schemas/patchStudentAttainment"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentAttendanceTimeListPATCH": {
        "type": "object",
        "required": [
          "StudentAttendanceTimeList"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAttendanceTimeList": {
            "$ref": "#/components/schemas/patchStudentAttendanceTimeList"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentContactPersonalPATCH": {
        "type": "object",
        "required": [
          "StudentContactPersonal"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentContactPersonal": {
            "$ref": "#/components/schemas/patchStudentContactPersonal"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentContactRelationshipPATCH": {
        "type": "object",
        "required": [
          "StudentContactRelationship"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentContactRelationship": {
            "$ref": "#/components/schemas/patchStudentContactRelationship"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentLearningSupportPATCH": {
        "type": "object",
        "required": [
          "StudentLearningSupport"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentLearningSupport": {
            "$ref": "#/components/schemas/patchStudentLearningSupport"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentLearningSupportResponsePATCH": {
        "type": "object",
        "required": [
          "StudentLearningSupportResponse"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentLearningSupportResponse": {
            "$ref": "#/components/schemas/patchStudentLearningSupportResponse"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentPersonalPATCH": {
        "type": "object",
        "required": [
          "StudentPersonal"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentPersonal": {
            "$ref": "#/components/schemas/patchStudentPersonal"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentProviderEnrolmentPATCH": {
        "type": "object",
        "required": [
          "StudentProviderEnrolment"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentProviderEnrolment": {
            "$ref": "#/components/schemas/patchStudentProviderEnrolment"
          }
        },
        "x-isWrapperObject": true
      },
      "SchoolEnrolmentPATCH": {
        "type": "object",
        "required": [
          "SchoolEnrolment"
        ],
        "additionalProperties": false,
        "properties": {
          "SchoolEnrolment": {
            "$ref": "#/components/schemas/patchSchoolEnrolment"
          }
        },
        "x-isWrapperObject": true
      },
      "StudentTeachingGroupEnrolmentPATCH": {
        "type": "object",
        "required": [
          "StudentTeachingGroupEnrolment"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentTeachingGroupEnrolment": {
            "$ref": "#/components/schemas/patchStudentTeachingGroupEnrolment"
          }
        },
        "x-isWrapperObject": true
      },
      "TeachingGroupPATCH": {
        "type": "object",
        "required": [
          "TeachingGroup"
        ],
        "additionalProperties": false,
        "properties": {
          "TeachingGroup": {
            "$ref": "#/components/schemas/patchTeachingGroup"
          }
        },
        "x-isWrapperObject": true
      },
      "WellbeingCharacteristicPATCH": {
        "type": "object",
        "required": [
          "WellbeingCharacteristic"
        ],
        "additionalProperties": false,
        "properties": {
          "WellbeingCharacteristic": {
            "$ref": "#/components/schemas/patchWellbeingCharacteristic"
          }
        },
        "x-isWrapperObject": true
      },
      "BellScheduleCREATEList": {
        "type": "object",
        "required": [
          "BellSchedules"
        ],
        "additionalProperties": false,
        "properties": {
          "BellSchedules": {
            "$ref": "#/components/schemas/createBellSchedules"
          }
        },
        "x-wrapperListObject": "BellSchedule",
        "x-wrapperListTypePrefix": "Create"
      },
      "CredentialCREATEList": {
        "type": "object",
        "required": [
          "Credentials"
        ],
        "additionalProperties": false,
        "properties": {
          "Credentials": {
            "$ref": "#/components/schemas/createCredentials"
          }
        },
        "x-wrapperListObject": "Credential",
        "x-wrapperListTypePrefix": "Create"
      },
      "LearningStandardCREATEList": {
        "type": "object",
        "required": [
          "LearningStandards"
        ],
        "additionalProperties": false,
        "properties": {
          "LearningStandards": {
            "$ref": "#/components/schemas/createLearningStandards"
          }
        },
        "x-wrapperListObject": "LearningStandard",
        "x-wrapperListTypePrefix": "Create"
      },
      "OrganisationCREATEList": {
        "type": "object",
        "required": [
          "Organisations"
        ],
        "additionalProperties": false,
        "properties": {
          "Organisations": {
            "$ref": "#/components/schemas/createOrganisations"
          }
        },
        "x-wrapperListObject": "Organisation",
        "x-wrapperListTypePrefix": "Create"
      },
      "OrganisationRelationshipCREATEList": {
        "type": "object",
        "required": [
          "OrganisationRelationships"
        ],
        "additionalProperties": false,
        "properties": {
          "OrganisationRelationships": {
            "$ref": "#/components/schemas/createOrganisationRelationships"
          }
        },
        "x-wrapperListObject": "OrganisationRelationship",
        "x-wrapperListTypePrefix": "Create"
      },
      "ScheduleCREATEList": {
        "type": "object",
        "required": [
          "Schedules"
        ],
        "additionalProperties": false,
        "properties": {
          "Schedules": {
            "$ref": "#/components/schemas/createSchedules"
          }
        },
        "x-wrapperListObject": "Schedule",
        "x-wrapperListTypePrefix": "Create"
      },
      "ScheduleAcademicDayCREATEList": {
        "type": "object",
        "required": [
          "ScheduleAcademicDays"
        ],
        "additionalProperties": false,
        "properties": {
          "ScheduleAcademicDays": {
            "$ref": "#/components/schemas/createScheduleAcademicDays"
          }
        },
        "x-wrapperListObject": "ScheduleAcademicDay",
        "x-wrapperListTypePrefix": "Create"
      },
      "ScheduleDateCREATEList": {
        "type": "object",
        "required": [
          "ScheduleDates"
        ],
        "additionalProperties": false,
        "properties": {
          "ScheduleDates": {
            "$ref": "#/components/schemas/createScheduleDates"
          }
        },
        "x-wrapperListObject": null,
        "x-wrapperListTypePrefix": "Create"
      },
      "SchedulePeriodCREATEList": {
        "type": "object",
        "required": [
          "SchedulePeriods"
        ],
        "additionalProperties": false,
        "properties": {
          "SchedulePeriods": {
            "$ref": "#/components/schemas/createSchedulePeriods"
          }
        },
        "x-wrapperListObject": "SchedulePeriod",
        "x-wrapperListTypePrefix": "Create"
      },
      "ScheduleTermCREATEList": {
        "type": "object",
        "required": [
          "ScheduleTerms"
        ],
        "additionalProperties": false,
        "properties": {
          "ScheduleTerms": {
            "$ref": "#/components/schemas/createScheduleTerms"
          }
        },
        "x-wrapperListObject": "ScheduleTerm",
        "x-wrapperListTypePrefix": "Create"
      },
      "StaffAssignmentCREATEList": {
        "type": "object",
        "required": [
          "StaffAssignments"
        ],
        "additionalProperties": false,
        "properties": {
          "StaffAssignments": {
            "$ref": "#/components/schemas/createStaffAssignments"
          }
        },
        "x-wrapperListObject": "StaffAssignment",
        "x-wrapperListTypePrefix": "Create"
      },
      "StaffPersonalCREATEList": {
        "type": "object",
        "required": [
          "StaffPersonals"
        ],
        "additionalProperties": false,
        "properties": {
          "StaffPersonals": {
            "$ref": "#/components/schemas/createStaffPersonals"
          }
        },
        "x-wrapperListObject": "StaffPersonal",
        "x-wrapperListTypePrefix": "Create"
      },
      "StaffPersonalPOSTList": {
        "type": "object",
        "required": [
          "StaffPersonals"
        ],
        "additionalProperties": false,
        "properties": {
          "StaffPersonals": {
            "$ref": "#/components/schemas/createStaffPersonalPOSTs"
          }
        },
        "x-wrapperListObject": "StaffPersonal",
        "x-wrapperListTypePrefix": "Create",
        "x-wrapperListTypeSuffix": "POST"
      },
      "StaffTeachingGroupAssignmentCREATEList": {
        "type": "object",
        "required": [
          "StaffTeachingGroupAssignments"
        ],
        "additionalProperties": false,
        "properties": {
          "StaffTeachingGroupAssignments": {
            "$ref": "#/components/schemas/createStaffTeachingGroupAssignments"
          }
        },
        "x-wrapperListObject": "StaffTeachingGroupAssignment",
        "x-wrapperListTypePrefix": "Create"
      },
      "StudentAssessmentTaskCREATEList": {
        "type": "object",
        "required": [
          "StudentAssessmentTasks"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAssessmentTasks": {
            "$ref": "#/components/schemas/createStudentAssessmentTasks"
          }
        },
        "x-wrapperListObject": "StudentAssessmentTask",
        "x-wrapperListTypePrefix": "Create"
      },
      "StudentAssessmentTaskResultCREATEList": {
        "type": "object",
        "required": [
          "StudentAssessmentTaskResults"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAssessmentTaskResults": {
            "$ref": "#/components/schemas/createStudentAssessmentTaskResults"
          }
        },
        "x-wrapperListObject": "StudentAssessmentTaskResult",
        "x-wrapperListTypePrefix": "Create"
      },
      "StudentAttainmentCREATEList": {
        "type": "object",
        "required": [
          "StudentAttainments"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAttainments": {
            "$ref": "#/components/schemas/createStudentAttainments"
          }
        },
        "x-wrapperListObject": "StudentAttainment",
        "x-wrapperListTypePrefix": "Create"
      },
      "StudentAttendanceSummaryCREATEList": {
        "type": "object",
        "required": [
          "StudentAttendanceSummarys"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAttendanceSummarys": {
            "$ref": "#/components/schemas/createStudentAttendanceSummarys"
          }
        },
        "x-wrapperListObject": "StudentAttendanceSummary",
        "x-wrapperListTypePrefix": "Create"
      },
      "StudentAttendanceTimeListCREATEList": {
        "type": "object",
        "required": [
          "StudentAttendanceTimeLists"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAttendanceTimeLists": {
            "$ref": "#/components/schemas/createStudentAttendanceTimeLists"
          }
        },
        "x-wrapperListObject": "StudentAttendanceTimeList",
        "x-wrapperListTypePrefix": "Create"
      },
      "StudentContactPersonalCREATEList": {
        "type": "object",
        "required": [
          "StudentContactPersonals"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentContactPersonals": {
            "$ref": "#/components/schemas/createStudentContactPersonals"
          }
        },
        "x-wrapperListObject": "StudentContactPersonal",
        "x-wrapperListTypePrefix": "Create"
      },
      "StudentContactRelationshipCREATEList": {
        "type": "object",
        "required": [
          "StudentContactRelationships"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentContactRelationships": {
            "$ref": "#/components/schemas/createStudentContactRelationships"
          }
        },
        "x-wrapperListObject": "StudentContactRelationship",
        "x-wrapperListTypePrefix": "Create"
      },
      "StudentLearningSupportCREATEList": {
        "type": "object",
        "required": [
          "StudentLearningSupports"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentLearningSupports": {
            "$ref": "#/components/schemas/createStudentLearningSupports"
          }
        },
        "x-wrapperListObject": "StudentLearningSupport",
        "x-wrapperListTypePrefix": "Create"
      },
      "StudentLearningSupportResponseCREATEList": {
        "type": "object",
        "required": [
          "StudentLearningSupportResponses"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentLearningSupportResponses": {
            "$ref": "#/components/schemas/createStudentLearningSupportResponses"
          }
        },
        "x-wrapperListObject": "StudentLearningSupportResponse",
        "x-wrapperListTypePrefix": "Create"
      },
      "StudentPersonalCREATEList": {
        "type": "object",
        "required": [
          "StudentPersonals"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentPersonals": {
            "$ref": "#/components/schemas/createStudentPersonals"
          }
        },
        "x-wrapperListObject": "StudentPersonal",
        "x-wrapperListTypePrefix": "Create"
      },
      "StudentPersonalPOSTList": {
        "type": "object",
        "required": [
          "StudentPersonals"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentPersonals": {
            "$ref": "#/components/schemas/createStudentPersonalPOSTs"
          }
        },
        "x-wrapperListObject": "StudentPersonal",
        "x-wrapperListTypePrefix": "Create",
        "x-wrapperListTypeSuffix": "POST"
      },
      "StudentProviderEnrolmentCREATEList": {
        "type": "object",
        "required": [
          "StudentProviderEnrolments"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentProviderEnrolments": {
            "$ref": "#/components/schemas/createStudentProviderEnrolments"
          }
        },
        "x-wrapperListObject": "StudentProviderEnrolment",
        "x-wrapperListTypePrefix": "Create"
      },
      "SchoolEnrolmentCREATEList": {
        "type": "object",
        "required": [
          "SchoolEnrolments"
        ],
        "additionalProperties": false,
        "properties": {
          "SchoolEnrolments": {
            "$ref": "#/components/schemas/createSchoolEnrolments"
          }
        },
        "x-wrapperListObject": "SchoolEnrolment",
        "x-wrapperListTypePrefix": "Create"
      },
      "StudentTeachingGroupEnrolmentCREATEList": {
        "type": "object",
        "required": [
          "StudentTeachingGroupEnrolments"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentTeachingGroupEnrolments": {
            "$ref": "#/components/schemas/createStudentTeachingGroupEnrolments"
          }
        },
        "x-wrapperListObject": "StudentTeachingGroupEnrolment",
        "x-wrapperListTypePrefix": "Create"
      },
      "TeachingGroupCREATEList": {
        "type": "object",
        "required": [
          "TeachingGroups"
        ],
        "additionalProperties": false,
        "properties": {
          "TeachingGroups": {
            "$ref": "#/components/schemas/createTeachingGroups"
          }
        },
        "x-wrapperListObject": "TeachingGroup",
        "x-wrapperListTypePrefix": "Create"
      },
      "WellbeingCharacteristicCREATEList": {
        "type": "object",
        "required": [
          "WellbeingCharacteristics"
        ],
        "additionalProperties": false,
        "properties": {
          "WellbeingCharacteristics": {
            "$ref": "#/components/schemas/createWellbeingCharacteristics"
          }
        },
        "x-wrapperListObject": "WellbeingCharacteristic",
        "x-wrapperListTypePrefix": "Create"
      },
      "BellSchedulePATCHList": {
        "type": "object",
        "required": [
          "BellSchedules"
        ],
        "additionalProperties": false,
        "properties": {
          "BellSchedules": {
            "$ref": "#/components/schemas/patchBellSchedules"
          }
        },
        "x-wrapperListObject": "BellSchedule",
        "x-wrapperListTypePrefix": "Patch"
      },
      "CredentialPATCHList": {
        "type": "object",
        "required": [
          "Credentials"
        ],
        "additionalProperties": false,
        "properties": {
          "Credentials": {
            "$ref": "#/components/schemas/patchCredentials"
          }
        },
        "x-wrapperListObject": "Credential",
        "x-wrapperListTypePrefix": "Patch"
      },
      "LearningStandardPATCHList": {
        "type": "object",
        "required": [
          "LearningStandards"
        ],
        "additionalProperties": false,
        "properties": {
          "LearningStandards": {
            "$ref": "#/components/schemas/patchLearningStandards"
          }
        },
        "x-wrapperListObject": "LearningStandard",
        "x-wrapperListTypePrefix": "Patch"
      },
      "OrganisationPATCHList": {
        "type": "object",
        "required": [
          "Organisations"
        ],
        "additionalProperties": false,
        "properties": {
          "Organisations": {
            "$ref": "#/components/schemas/patchOrganisations"
          }
        },
        "x-wrapperListObject": "Organisation",
        "x-wrapperListTypePrefix": "Patch"
      },
      "OrganisationRelationshipPATCHList": {
        "type": "object",
        "required": [
          "OrganisationRelationships"
        ],
        "additionalProperties": false,
        "properties": {
          "OrganisationRelationships": {
            "$ref": "#/components/schemas/patchOrganisationRelationships"
          }
        },
        "x-wrapperListObject": "OrganisationRelationship",
        "x-wrapperListTypePrefix": "Patch"
      },
      "SchedulePATCHList": {
        "type": "object",
        "required": [
          "Schedules"
        ],
        "additionalProperties": false,
        "properties": {
          "Schedules": {
            "$ref": "#/components/schemas/patchSchedules"
          }
        },
        "x-wrapperListObject": "Schedule",
        "x-wrapperListTypePrefix": "Patch"
      },
      "ScheduleAcademicDayPATCHList": {
        "type": "object",
        "required": [
          "ScheduleAcademicDays"
        ],
        "additionalProperties": false,
        "properties": {
          "ScheduleAcademicDays": {
            "$ref": "#/components/schemas/patchScheduleAcademicDays"
          }
        },
        "x-wrapperListObject": "ScheduleAcademicDay",
        "x-wrapperListTypePrefix": "Patch"
      },
      "ScheduleDatePATCHList": {
        "type": "object",
        "required": [
          "ScheduleDates"
        ],
        "additionalProperties": false,
        "properties": {
          "ScheduleDates": {
            "$ref": "#/components/schemas/patchScheduleDates"
          }
        },
        "x-wrapperListObject": "ScheduleDate",
        "x-wrapperListTypePrefix": "Patch"
      },
      "SchedulePeriodPATCHList": {
        "type": "object",
        "required": [
          "SchedulePeriods"
        ],
        "additionalProperties": false,
        "properties": {
          "SchedulePeriods": {
            "$ref": "#/components/schemas/patchSchedulePeriods"
          }
        },
        "x-wrapperListObject": "SchedulePeriod",
        "x-wrapperListTypePrefix": "Patch"
      },
      "ScheduleTermPATCHList": {
        "type": "object",
        "required": [
          "ScheduleTerms"
        ],
        "additionalProperties": false,
        "properties": {
          "ScheduleTerms": {
            "$ref": "#/components/schemas/patchScheduleTerms"
          }
        },
        "x-wrapperListObject": "ScheduleTerm",
        "x-wrapperListTypePrefix": "Patch"
      },
      "StaffAssignmentPATCHList": {
        "type": "object",
        "required": [
          "StaffAssignments"
        ],
        "additionalProperties": false,
        "properties": {
          "StaffAssignments": {
            "$ref": "#/components/schemas/patchStaffAssignments"
          }
        },
        "x-wrapperListObject": "StaffAssignment",
        "x-wrapperListTypePrefix": "Patch"
      },
      "StaffPersonalPATCHList": {
        "type": "object",
        "required": [
          "StaffPersonals"
        ],
        "additionalProperties": false,
        "properties": {
          "StaffPersonals": {
            "$ref": "#/components/schemas/patchStaffPersonals"
          }
        },
        "x-wrapperListObject": "StaffPersonal",
        "x-wrapperListTypePrefix": "Patch"
      },
      "StaffTeachingGroupAssignmentPATCHList": {
        "type": "object",
        "required": [
          "StaffTeachingGroupAssignments"
        ],
        "additionalProperties": false,
        "properties": {
          "StaffTeachingGroupAssignments": {
            "$ref": "#/components/schemas/patchStaffTeachingGroupAssignments"
          }
        },
        "x-wrapperListObject": "StaffTeachingGroupAssignment",
        "x-wrapperListTypePrefix": "Patch"
      },
      "StudentAssessmentTaskPATCHList": {
        "type": "object",
        "required": [
          "StudentAssessmentTasks"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAssessmentTasks": {
            "$ref": "#/components/schemas/patchStudentAssessmentTasks"
          }
        },
        "x-wrapperListObject": "StudentAssessmentTask",
        "x-wrapperListTypePrefix": "Patch"
      },
      "StudentAssessmentTaskResultPATCHList": {
        "type": "object",
        "required": [
          "StudentAssessmentTaskResults"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAssessmentTaskResults": {
            "$ref": "#/components/schemas/patchStudentAssessmentTaskResults"
          }
        },
        "x-wrapperListObject": "StudentAssessmentTaskResult",
        "x-wrapperListTypePrefix": "Patch"
      },
      "StudentAttainmentPATCHList": {
        "type": "object",
        "required": [
          "StudentAttainments"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAttainments": {
            "$ref": "#/components/schemas/patchStudentAttainments"
          }
        },
        "x-wrapperListObject": "StudentAttainment",
        "x-wrapperListTypePrefix": "Patch"
      },
      "StudentAttendanceTimeListPATCHList": {
        "type": "object",
        "required": [
          "StudentAttendanceTimeLists"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentAttendanceTimeLists": {
            "$ref": "#/components/schemas/patchStudentAttendanceTimeLists"
          }
        },
        "x-wrapperListObject": "StudentAttendanceTimeList",
        "x-wrapperListTypePrefix": "Patch"
      },
      "StudentContactPersonalPATCHList": {
        "type": "object",
        "required": [
          "StudentContactPersonals"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentContactPersonals": {
            "$ref": "#/components/schemas/patchStudentContactPersonals"
          }
        },
        "x-wrapperListObject": "StudentContactPersonal",
        "x-wrapperListTypePrefix": "Patch"
      },
      "StudentContactRelationshipPATCHList": {
        "type": "object",
        "required": [
          "StudentContactRelationships"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentContactRelationships": {
            "$ref": "#/components/schemas/patchStudentContactRelationships"
          }
        },
        "x-wrapperListObject": "StudentContactRelationship",
        "x-wrapperListTypePrefix": "Patch"
      },
      "StudentLearningSupportPATCHList": {
        "type": "object",
        "required": [
          "StudentLearningSupports"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentLearningSupports": {
            "$ref": "#/components/schemas/patchStudentLearningSupports"
          }
        },
        "x-wrapperListObject": "StudentLearningSupport",
        "x-wrapperListTypePrefix": "Patch"
      },
      "StudentLearningSupportResponsePATCHList": {
        "type": "object",
        "required": [
          "StudentLearningSupportResponses"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentLearningSupportResponses": {
            "$ref": "#/components/schemas/patchStudentLearningSupportResponses"
          }
        },
        "x-wrapperListObject": "StudentLearningSupportResponse",
        "x-wrapperListTypePrefix": "Patch"
      },
      "StudentPersonalPATCHList": {
        "type": "object",
        "required": [
          "StudentPersonals"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentPersonals": {
            "$ref": "#/components/schemas/patchStudentPersonals"
          }
        },
        "x-wrapperListObject": "StudentPersonal",
        "x-wrapperListTypePrefix": "Patch"
      },
      "StudentProviderEnrolmentPATCHList": {
        "type": "object",
        "required": [
          "StudentProviderEnrolments"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentProviderEnrolments": {
            "$ref": "#/components/schemas/patchStudentProviderEnrolments"
          }
        },
        "x-wrapperListObject": "StudentProviderEnrolment",
        "x-wrapperListTypePrefix": "Patch"
      },
      "SchoolEnrolmentPATCHList": {
        "type": "object",
        "required": [
          "SchoolEnrolments"
        ],
        "additionalProperties": false,
        "properties": {
          "SchoolEnrolments": {
            "$ref": "#/components/schemas/patchSchoolEnrolments"
          }
        },
        "x-wrapperListObject": "SchoolEnrolment",
        "x-wrapperListTypePrefix": "Patch"
      },
      "StudentTeachingGroupEnrolmentPATCHList": {
        "type": "object",
        "required": [
          "StudentTeachingGroupEnrolments"
        ],
        "additionalProperties": false,
        "properties": {
          "StudentTeachingGroupEnrolments": {
            "$ref": "#/components/schemas/patchStudentTeachingGroupEnrolments"
          }
        },
        "x-wrapperListObject": "StudentTeachingGroupEnrolment",
        "x-wrapperListTypePrefix": "Patch"
      },
      "TeachingGroupPATCHList": {
        "type": "object",
        "required": [
          "TeachingGroups"
        ],
        "additionalProperties": false,
        "properties": {
          "TeachingGroups": {
            "$ref": "#/components/schemas/patchTeachingGroups"
          }
        },
        "x-wrapperListObject": "TeachingGroup",
        "x-wrapperListTypePrefix": "Patch"
      },
      "WellbeingCharacteristicPATCHList": {
        "type": "object",
        "required": [
          "WellbeingCharacteristics"
        ],
        "additionalProperties": false,
        "properties": {
          "WellbeingCharacteristics": {
            "$ref": "#/components/schemas/patchWellbeingCharacteristics"
          }
        },
        "x-wrapperListObject": "WellbeingCharacteristic",
        "x-wrapperListTypePrefix": "Patch"
      },
      "BellScheduleErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "BellSchedule",
              "properties": {
                "BellSchedule": {
                  "$ref": "#/components/schemas/createBellSchedule"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "CredentialErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "Credential",
              "properties": {
                "Credential": {
                  "$ref": "#/components/schemas/createCredential"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "LearningStandardErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "LearningStandard",
              "properties": {
                "LearningStandard": {
                  "$ref": "#/components/schemas/createLearningStandard"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "OrganisationErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "Organisation",
              "properties": {
                "Organisation": {
                  "$ref": "#/components/schemas/createOrganisation"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "OrganisationRelationshipErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "OrganisationRelationship",
              "properties": {
                "OrganisationRelationship": {
                  "$ref": "#/components/schemas/createOrganisationRelationship"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "ScheduleErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "Schedule",
              "properties": {
                "Schedule": {
                  "$ref": "#/components/schemas/createSchedule"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "ScheduleAcademicDayErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "ScheduleAcademicDay",
              "properties": {
                "ScheduleAcademicDay": {
                  "$ref": "#/components/schemas/createScheduleAcademicDay"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "ScheduleDateErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "ScheduleDate",
              "properties": {
                "ScheduleDate": {
                  "$ref": "#/components/schemas/createScheduleDate"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "SchedulePeriodErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "SchedulePeriod",
              "properties": {
                "SchedulePeriod": {
                  "$ref": "#/components/schemas/createSchedulePeriod"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "ScheduleTermErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "ScheduleTerm",
              "properties": {
                "ScheduleTerm": {
                  "$ref": "#/components/schemas/createScheduleTerm"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StaffAssignmentErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StaffAssignment",
              "properties": {
                "StaffAssignment": {
                  "$ref": "#/components/schemas/createStaffAssignment"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StaffPersonalErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StaffPersonal",
              "properties": {
                "StaffPersonal": {
                  "$ref": "#/components/schemas/createStaffPersonal"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StaffPersonalPOSTErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StaffPersonalPOST",
              "properties": {
                "StaffPersonal": {
                  "$ref": "#/components/schemas/createStaffPersonalPOST"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StaffTeachingGroupAssignmentErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StaffTeachingGroupAssignment",
              "properties": {
                "StaffTeachingGroupAssignment": {
                  "$ref": "#/components/schemas/createStaffTeachingGroupAssignment"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StudentAssessmentTaskErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StudentAssessmentTask",
              "properties": {
                "StudentAssessmentTask": {
                  "$ref": "#/components/schemas/createStudentAssessmentTask"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StudentAssessmentTaskResultErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StudentAssessmentTaskResult",
              "properties": {
                "StudentAssessmentTaskResult": {
                  "$ref": "#/components/schemas/createStudentAssessmentTaskResult"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StudentAttainmentErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StudentAttainment",
              "properties": {
                "StudentAttainment": {
                  "$ref": "#/components/schemas/createStudentAttainment"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StudentAttendanceTimeListErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StudentAttendanceTimeList",
              "properties": {
                "StudentAttendanceTimeCREATEList": {
                  "$ref": "#/components/schemas/createStudentAttendanceTimeList"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StudentContactPersonalErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StudentContactPersonal",
              "properties": {
                "StudentContactPersonal": {
                  "$ref": "#/components/schemas/createStudentContactPersonal"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StudentContactRelationshipErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StudentContactRelationship",
              "properties": {
                "StudentContactRelationship": {
                  "$ref": "#/components/schemas/createStudentContactRelationship"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StudentLearningSupportErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StudentLearningSupport",
              "properties": {
                "StudentLearningSupport": {
                  "$ref": "#/components/schemas/createStudentLearningSupport"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StudentLearningSupportResponseErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StudentLearningSupportResponse",
              "properties": {
                "StudentLearningSupportResponse": {
                  "$ref": "#/components/schemas/createStudentLearningSupportResponse"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StudentPersonalErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StudentPersonal",
              "properties": {
                "StudentPersonal": {
                  "$ref": "#/components/schemas/createStudentPersonal"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StudentPersonalPOSTErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StudentPersonal",
              "properties": {
                "StudentPersonal": {
                  "$ref": "#/components/schemas/createStudentPersonalPOST"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StudentProviderEnrolmentErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StudentProviderEnrolment",
              "properties": {
                "StudentProviderEnrolment": {
                  "$ref": "#/components/schemas/createStudentProviderEnrolment"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "SchoolEnrolmentErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "SchoolEnrolment",
              "properties": {
                "SchoolEnrolment": {
                  "$ref": "#/components/schemas/createSchoolEnrolment"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "StudentTeachingGroupEnrolmentErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "StudentTeachingGroupEnrolment",
              "properties": {
                "StudentTeachingGroupEnrolment": {
                  "$ref": "#/components/schemas/createStudentTeachingGroupEnrolment"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "TeachingGroupErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "TeachingGroup",
              "properties": {
                "TeachingGroup": {
                  "$ref": "#/components/schemas/createTeachingGroup"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "WellbeingCharacteristicErrorList": {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "Error",
              "properties": {
                "Error": {
                  "$ref": "#/components/schemas/errorBody"
                }
              }
            },
            {
              "type": "object",
              "title": "WellbeingCharacteristic",
              "properties": {
                "WellbeingCharacteristic": {
                  "$ref": "#/components/schemas/createWellbeingCharacteristic"
                }
              }
            }
          ]
        },
        "x-generate-alias-as-model": true
      },
      "createBellSchedule": {
        "title": "BellSchedule",
        "description": "Defines bell schedules, each of which is a collection of periods within an academic day with start and end times associated. These bell schedules are assigned to calendar dates on which the school is in session using ScheduleDate in order to specify the school schedule on those dates. These bell schedules should generally only be used to define standard day types. Exception days (unless they repeat multiple times and follow a common template) are defined using ScheduleEvent and ScheduleCustomDayEvent.",
        "required": [
          "BellScheduleName",
          "Organisation",
          "Schedule",
          "SchedulePeriodList",
          "BellScheduleLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "BellScheduleRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "BellScheduleLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "BellScheduleName": {
            "type": "string",
            "description": "The name of the Bell Schedule."
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "Schedule": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "SchedulePeriodList": {
            "description": "A list of periods that make up this academic day, e.g. Period 1, Period 2 etc.",
            "type": "object",
            "required": [
              "SchedulePeriodTime"
            ],
            "additionalProperties": false,
            "properties": {
              "SchedulePeriodTime": {
                "type": "array",
                "items": {
                  "description": "The definition of a SchedulePeriod start and end time, on a particular Bell Schedule.",
                  "type": "object",
                  "required": [
                    "EndTime",
                    "Period",
                    "StartTime"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "Period": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "StartTime": {
                      "type": "string",
                      "format": "time",
                      "description": "The time the period starts."
                    },
                    "EndTime": {
                      "type": "string",
                      "format": "time",
                      "description": "The time the period ends."
                    }
                  }
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createBellSchedules": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "BellSchedule"
        ],
        "title": "BellSchedules",
        "description": "Wrapper around an array of BellSchedules",
        "properties": {
          "BellSchedule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createBellSchedule"
            },
            "description": "Defines bell schedules, each of which is a collection of periods within an academic day with start and end times associated. These bell schedules are assigned to calendar dates on which the school is in session using ScheduleDate in order to specify the school schedule on those dates. These bell schedules should generally only be used to define standard day types. Exception days (unless they repeat multiple times and follow a common template) are defined using ScheduleEvent and ScheduleCustomDayEvent."
          }
        }
      },
      "createCredential": {
        "title": "Credential",
        "description": "<p>A qualification or other award published by a national body, professional association or other interested party. The Credential recognises a set of learning that students have undertaken and successfully completed. </p>",
        "required": [
          "Title",
          "CredentialLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "CredentialRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "CredentialLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Title": {
            "type": "string",
            "description": "The name of the Credential. eg: \"NCEA Level 1\""
          },
          "VersionNo": {
            "type": "number",
            "description": "The version number of the Credential."
          },
          "Administrator": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "Description": {
            "type": "string",
            "description": "Description of the credential"
          },
          "SubjectAreaList": {
            "description": "Which standard MoE Learning / Subject Areas is this Credential part of?",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSubjectArea"
                }
              },
              "NCEASubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsNCEASubjectArea"
                }
              }
            }
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsCredentialStatus"
          },
          "PublicationDate": {
            "type": "string",
            "format": "date-time",
            "description": "This is the date that the administering organization published the Credential."
          },
          "SupercededDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the administering organization superceded (or will supercede) the Credential. May be future dated."
          },
          "DiscontinuedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the administering organization discontinued (or will discontinue) the Credential. May be future dated."
          },
          "Credits": {
            "type": "number",
            "description": "The number of course (or other qualification) credits that will be achieved by attaining this Credential."
          },
          "Level": {
            "type": "string",
            "description": "The level of the credential if applicable, eg. 1,2 or 3 for NCEA levels"
          },
          "RelatedLearningStandardList": {
            "description": "A list of related LearningStandard references",
            "type": "object",
            "required": [
              "RelatedLearningStandard"
            ],
            "additionalProperties": false,
            "properties": {
              "RelatedLearningStandard": {
                "type": "array",
                "items": {
                  "description": "A member of a list of related LearningStandard references.",
                  "type": "object",
                  "required": [
                    "Relationship"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "LocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object."
                    },
                    "Relationship": {
                      "$ref": "#/components/schemas/NZCodeSetsLearningStandardRelationshipType"
                    }
                  }
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createCredentials": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Credential"
        ],
        "title": "Credentials",
        "description": "Wrapper around an array of Credentials",
        "properties": {
          "Credential": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createCredential"
            },
            "description": "<p>A qualification or other award published by a national body, professional association or other interested party. The Credential recognises a set of learning that students have undertaken and successfully completed. </p>"
          }
        }
      },
      "createLearningStandard": {
        "title": "LearningStandard",
        "description": "<p>A curriculum standard or the like published by a national body, professional association or other interested party. The LearningStandard describes a set of learning that students are expected to undertake. </p>",
        "required": [
          "SubjectAreaList",
          "Title",
          "Number",
          "VersionNo",
          "StandardType",
          "LearningStandardLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "LearningStandardRefId": {
            "$ref": "#/components/schemas/LocalId",
            "readOnly": true
          },
          "LearningStandardLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Title": {
            "type": "string",
            "description": "The name of the LearningStandard. eg: \"Demonstrate understanding of chemical reactivity\""
          },
          "Number": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "description": "A unique number that is used to identify the learning standard. One use of this is for NZQA standard numbers which cannot be used as a unique identifier (in LocalId) on their own as they are versioned so are part of a composite key with VersionNo."
          },
          "VersionNo": {
            "type": "number",
            "description": "The version number of the LearningStandard."
          },
          "Publisher": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "StandardType": {
            "$ref": "#/components/schemas/NZCodeSetsLearningStandardType"
          },
          "LearningStandardFamily": {
            "$ref": "#/components/schemas/NZCodeSetsLearningStandardFamily"
          },
          "Description": {
            "type": "string",
            "description": "Description of the standards document."
          },
          "SubjectAreaList": {
            "description": "Which standard MoE Learning / Subject Areas is this LearningStandard part of?",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSubjectArea"
                }
              },
              "NCEASubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsNCEASubjectArea"
                }
              }
            }
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsLearningStandardStatus"
          },
          "PublicationDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the publishing organization published the standard."
          },
          "SupercededDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the publishing organization superceded (or will supercede) the LearningStandard. May be future dated."
          },
          "DiscontinuedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the publishing organization discontinued (or will discontinue) the LearningStandard. May be future dated."
          },
          "Credits": {
            "type": "number",
            "description": "The number of course (or other qualification) credits that will be achieved by passing this LearningStandard."
          },
          "Level": {
            "type": "number",
            "description": "Where the publisher is NZQA, Which NCEA Level applies to the LearningStandard?"
          },
          "AssessmentType": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentType"
          },
          "RelatedLearningStandardList": {
            "description": "A list of related LearningStandard references",
            "type": "object",
            "required": [
              "RelatedLearningStandard"
            ],
            "additionalProperties": false,
            "properties": {
              "RelatedLearningStandard": {
                "type": "array",
                "items": {
                  "description": "A member of a list of related LearningStandard references.",
                  "type": "object",
                  "required": [
                    "Relationship"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "LocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object."
                    },
                    "Relationship": {
                      "$ref": "#/components/schemas/NZCodeSetsLearningStandardRelationshipType"
                    }
                  }
                }
              }
            }
          },
          "CredentialList": {
            "description": "A list of Credentials that the learning standard contributes to attaining.",
            "type": "object",
            "required": [
              "Credential"
            ],
            "additionalProperties": false,
            "properties": {
              "Credential": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createLearningStandards": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "LearningStandard"
        ],
        "title": "LearningStandards",
        "description": "Wrapper around an array of LearningStandards",
        "properties": {
          "LearningStandard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createLearningStandard"
            },
            "description": "<p>A curriculum standard or the like published by a national body, professional association or other interested party. The LearningStandard describes a set of learning that students are expected to undertake. </p>"
          }
        }
      },
      "createOrganisation": {
        "title": "Organisation",
        "description": "Education Provider entities (ECEs, Schools & Tertiary Education Institutions), Communities (Kāhui Ako, Learning Support Clusters, etc.), and others (Teen Parent Units, Activity Centres. etc.)",
        "required": [
          "Name",
          "Type",
          "SectorRole",
          "OperationalStatus"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Address": {
            "description": "The set of postal and other addresses that the Organisation uses",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Physical": {
                "description": "The person or organisation's physical address",
                "type": "object",
                "required": [
                  "Line1"
                ],
                "additionalProperties": false,
                "properties": {
                  "Type": {
                    "$ref": "#/components/schemas/NZCodeSetsAddressType"
                  },
                  "Line1": {
                    "type": "string",
                    "description": "Address line 1."
                  },
                  "Line2": {
                    "type": "string",
                    "description": "Address line 2."
                  },
                  "Line3": {
                    "type": "string",
                    "description": "Address line 3."
                  },
                  "Line4": {
                    "type": "string",
                    "description": "Address line 4."
                  },
                  "Suburb": {
                    "type": "string",
                    "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                  },
                  "City": {
                    "type": "string",
                    "description": "The city part of the address."
                  },
                  "StateProvince": {
                    "type": "string",
                    "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                  },
                  "Country": {
                    "type": "string",
                    "description": "The country code."
                  },
                  "PostalCode": {
                    "type": "string",
                    "description": "The ZIP/postal code."
                  },
                  "GridLocation": {
                    "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                    "type": "object",
                    "required": [
                      "Latitude",
                      "Longitude"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Latitude": {
                        "type": "number",
                        "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                        "minimum": -90,
                        "maximum": 90
                      },
                      "Longitude": {
                        "type": "number",
                        "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                        "minimum": -180,
                        "maximum": 180
                      }
                    }
                  },
                  "StatisticalAreaList": {
                    "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                    "type": "object",
                    "required": [
                      "StatisticalArea"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "StatisticalArea": {
                        "type": "array",
                        "items": {
                          "description": "A particular statistical area defined by Statistics New Zealand.",
                          "type": "object",
                          "required": [
                            "Code",
                            "SpatialUnitType"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "SpatialUnitType": {
                              "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                            },
                            "Code": {
                              "type": "string",
                              "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Postal": {
                "description": "The person or organisation's postal address",
                "type": "object",
                "required": [
                  "Line1"
                ],
                "additionalProperties": false,
                "properties": {
                  "Type": {
                    "$ref": "#/components/schemas/NZCodeSetsAddressType"
                  },
                  "Line1": {
                    "type": "string",
                    "description": "Address line 1."
                  },
                  "Line2": {
                    "type": "string",
                    "description": "Address line 2."
                  },
                  "Line3": {
                    "type": "string",
                    "description": "Address line 3."
                  },
                  "Line4": {
                    "type": "string",
                    "description": "Address line 4."
                  },
                  "Suburb": {
                    "type": "string",
                    "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                  },
                  "City": {
                    "type": "string",
                    "description": "The city part of the address."
                  },
                  "StateProvince": {
                    "type": "string",
                    "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                  },
                  "Country": {
                    "type": "string",
                    "description": "The country code."
                  },
                  "PostalCode": {
                    "type": "string",
                    "description": "The ZIP/postal code."
                  },
                  "GridLocation": {
                    "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                    "type": "object",
                    "required": [
                      "Latitude",
                      "Longitude"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Latitude": {
                        "type": "number",
                        "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                        "minimum": -90,
                        "maximum": 90
                      },
                      "Longitude": {
                        "type": "number",
                        "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                        "minimum": -180,
                        "maximum": 180
                      }
                    }
                  },
                  "StatisticalAreaList": {
                    "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                    "type": "object",
                    "required": [
                      "StatisticalArea"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "StatisticalArea": {
                        "type": "array",
                        "items": {
                          "description": "A particular statistical area defined by Statistics New Zealand.",
                          "type": "object",
                          "required": [
                            "Code",
                            "SpatialUnitType"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "SpatialUnitType": {
                              "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                            },
                            "Code": {
                              "type": "string",
                              "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "CommunicationChannel": {
            "description": "A list of one or more methods of communication with the organisation",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Website": {
                "description": "The person/organisation's Website address",
                "type": "object",
                "required": [
                  "Value"
                ],
                "additionalProperties": false,
                "properties": {
                  "Notes": {
                    "type": "string",
                    "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                  },
                  "PreferenceOrderNumber": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295,
                    "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                  },
                  "Usage": {
                    "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                  },
                  "Value": {
                    "type": "string",
                    "description": "The unique value that provides access to the channel. eg: URL for a website; Facebook page addess, Twitter handle."
                  }
                }
              }
            }
          },
          "ContactList": {
            "description": "A list of one or more cotact persons related to the organisation",
            "type": "object",
            "required": [
              "Contact"
            ],
            "additionalProperties": false,
            "properties": {
              "Contact": {
                "type": "array",
                "items": {
                  "description": "A particular person's contact details",
                  "type": "object",
                  "required": [
                    "Name"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "Name": {
                      "description": "The contact's name",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Title": {
                          "type": "string",
                          "description": "A title or prefix associated with the name."
                        },
                        "FamilyName": {
                          "type": "string",
                          "description": "Also known as Last Name, although some cultures may not present a family name as the last name."
                        },
                        "GivenName": {
                          "type": "string",
                          "description": "Also known as First Name, although some cultures may not present this name as the first element in a name. May contain a composite of all given names."
                        },
                        "MiddleName": {
                          "type": "string",
                          "description": "Where more than one Given Name, these may be combined in one composite field or else populated in several elements."
                        },
                        "SecondMiddleName": {
                          "type": "string",
                          "description": "Middle names can be sent altogether in one element or if the source system has more than one middle name field, they can be spread across two elements. SecondMiddleName will either contain no values, or it will hold the person's second and subsequent middle names while MiddleName will hold the person's first middle name."
                        },
                        "FamilyNameFirst": {
                          "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                        },
                        "PreferredFamilyName": {
                          "type": "string",
                          "description": "A preferred version of the Family Name. Note:A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                        },
                        "PreferredFamilyNameFirst": {
                          "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                        },
                        "PreferredGivenName": {
                          "type": "string",
                          "description": "A preferred version of the Given Name. Note: A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                        },
                        "Suffix": {
                          "type": "string",
                          "description": "Textual suffix like PHD, JP, BSc."
                        },
                        "FullName": {
                          "type": "string",
                          "description": "A combination of all name elements as one composite text element"
                        },
                        "Type": {
                          "$ref": "#/components/schemas/NZCodeSetsNameUsageType"
                        },
                        "IsVerified": {
                          "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                        }
                      }
                    },
                    "PositionTitle": {
                      "type": "string",
                      "description": "The title the contact has within the Organisation being contacted"
                    },
                    "Role": {
                      "$ref": "#/components/schemas/NZCodeSetsOrganisationContactRole"
                    },
                    "Address": {
                      "description": "A set of Address elements.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Physical": {
                          "description": "The person or organisation's physical address",
                          "type": "object",
                          "required": [
                            "Line1"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "Type": {
                              "$ref": "#/components/schemas/NZCodeSetsAddressType"
                            },
                            "Line1": {
                              "type": "string",
                              "description": "Address line 1."
                            },
                            "Line2": {
                              "type": "string",
                              "description": "Address line 2."
                            },
                            "Line3": {
                              "type": "string",
                              "description": "Address line 3."
                            },
                            "Line4": {
                              "type": "string",
                              "description": "Address line 4."
                            },
                            "Suburb": {
                              "type": "string",
                              "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                            },
                            "City": {
                              "type": "string",
                              "description": "The city part of the address."
                            },
                            "StateProvince": {
                              "type": "string",
                              "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                            },
                            "Country": {
                              "type": "string",
                              "description": "The country code."
                            },
                            "PostalCode": {
                              "type": "string",
                              "description": "The ZIP/postal code."
                            },
                            "GridLocation": {
                              "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                              "type": "object",
                              "required": [
                                "Latitude",
                                "Longitude"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "Latitude": {
                                  "type": "number",
                                  "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                                  "minimum": -90,
                                  "maximum": 90
                                },
                                "Longitude": {
                                  "type": "number",
                                  "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                                  "minimum": -180,
                                  "maximum": 180
                                }
                              }
                            },
                            "StatisticalAreaList": {
                              "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                              "type": "object",
                              "required": [
                                "StatisticalArea"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "StatisticalArea": {
                                  "type": "array",
                                  "items": {
                                    "description": "A particular statistical area defined by Statistics New Zealand.",
                                    "type": "object",
                                    "required": [
                                      "Code",
                                      "SpatialUnitType"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                      "SpatialUnitType": {
                                        "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                      },
                                      "Code": {
                                        "type": "string",
                                        "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Postal": {
                          "description": "The person or organisation's postal address",
                          "type": "object",
                          "required": [
                            "Line1"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "Type": {
                              "$ref": "#/components/schemas/NZCodeSetsAddressType"
                            },
                            "Line1": {
                              "type": "string",
                              "description": "Address line 1."
                            },
                            "Line2": {
                              "type": "string",
                              "description": "Address line 2."
                            },
                            "Line3": {
                              "type": "string",
                              "description": "Address line 3."
                            },
                            "Line4": {
                              "type": "string",
                              "description": "Address line 4."
                            },
                            "Suburb": {
                              "type": "string",
                              "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                            },
                            "City": {
                              "type": "string",
                              "description": "The city part of the address."
                            },
                            "StateProvince": {
                              "type": "string",
                              "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                            },
                            "Country": {
                              "type": "string",
                              "description": "The country code."
                            },
                            "PostalCode": {
                              "type": "string",
                              "description": "The ZIP/postal code."
                            },
                            "GridLocation": {
                              "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                              "type": "object",
                              "required": [
                                "Latitude",
                                "Longitude"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "Latitude": {
                                  "type": "number",
                                  "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                                  "minimum": -90,
                                  "maximum": 90
                                },
                                "Longitude": {
                                  "type": "number",
                                  "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                                  "minimum": -180,
                                  "maximum": 180
                                }
                              }
                            },
                            "StatisticalAreaList": {
                              "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                              "type": "object",
                              "required": [
                                "StatisticalArea"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "StatisticalArea": {
                                  "type": "array",
                                  "items": {
                                    "description": "A particular statistical area defined by Statistics New Zealand.",
                                    "type": "object",
                                    "required": [
                                      "Code",
                                      "SpatialUnitType"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                      "SpatialUnitType": {
                                        "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                      },
                                      "Code": {
                                        "type": "string",
                                        "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Email": {
                      "description": "List of Email elements.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Personal": {
                          "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                          "type": "object",
                          "required": [
                            "Address"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "Notes": {
                              "type": "string",
                              "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                            },
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 4294967295,
                              "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                            },
                            "Usage": {
                              "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                            },
                            "SourceOrganisation": {
                              "$ref": "#/components/schemas/OrganisationObjectReference"
                            },
                            "Address": {
                              "type": "string",
                              "description": "The actual email address."
                            }
                          }
                        },
                        "Work": {
                          "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                          "type": "object",
                          "required": [
                            "Address"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "Notes": {
                              "type": "string",
                              "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                            },
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 4294967295,
                              "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                            },
                            "Usage": {
                              "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                            },
                            "SourceOrganisation": {
                              "$ref": "#/components/schemas/OrganisationObjectReference"
                            },
                            "Address": {
                              "type": "string",
                              "description": "The actual email address."
                            }
                          }
                        }
                      }
                    },
                    "Phone": {
                      "description": "List of PhoneNumber elements.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Home": {
                          "description": "A person's home number.",
                          "type": "object",
                          "required": [
                            "Number"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "Notes": {
                              "type": "string",
                              "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                            },
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 4294967295,
                              "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                            },
                            "Usage": {
                              "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                            },
                            "Number": {
                              "type": "string",
                              "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                            },
                            "Extension": {
                              "type": "string",
                              "description": "Phone number extension."
                            }
                          }
                        },
                        "Work": {
                          "description": "A person's work number.",
                          "type": "object",
                          "required": [
                            "Number"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "Notes": {
                              "type": "string",
                              "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                            },
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 4294967295,
                              "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                            },
                            "Usage": {
                              "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                            },
                            "Number": {
                              "type": "string",
                              "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                            },
                            "Extension": {
                              "type": "string",
                              "description": "Phone number extension."
                            }
                          }
                        },
                        "Mobile": {
                          "description": "A person's mobile number.",
                          "type": "object",
                          "required": [
                            "Number"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "Notes": {
                              "type": "string",
                              "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                            },
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 4294967295,
                              "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                            },
                            "Usage": {
                              "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                            },
                            "Number": {
                              "type": "string",
                              "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                            },
                            "Extension": {
                              "type": "string",
                              "description": "Phone number extension."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "EducationRegion": {
            "$ref": "#/components/schemas/NZCodeSetsEducationRegion"
          },
          "SpecialEducationDistrict": {
            "$ref": "#/components/schemas/NZCodeSetsSpecialEducationDistrict"
          },
          "Email": {
            "description": "The set of contact email addresses that the Organisation uses",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Main": {
                "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                "type": "object",
                "required": [
                  "Address"
                ],
                "additionalProperties": false,
                "properties": {
                  "Notes": {
                    "type": "string",
                    "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                  },
                  "PreferenceOrderNumber": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295,
                    "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                  },
                  "Usage": {
                    "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                  },
                  "SourceOrganisation": {
                    "$ref": "#/components/schemas/OrganisationObjectReference"
                  },
                  "Address": {
                    "type": "string",
                    "description": "The actual email address."
                  }
                }
              }
            }
          },
          "EntityClose": {
            "type": "string",
            "format": "date-time",
            "description": "Closing date of entity. Only present for closed providers."
          },
          "EntityOpen": {
            "type": "string",
            "format": "date-time",
            "description": "Opening date of entity. For proposed schools this will be the projected opening date. For open schools this may not be present."
          },
          "LocationList": {
            "description": "A list of one or more locations, from which the organisation operates or provides a service.",
            "type": "object",
            "required": [
              "Location"
            ],
            "additionalProperties": false,
            "properties": {
              "Location": {
                "type": "array",
                "items": {
                  "description": "This element contains data about a geographical location.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "Description": {
                      "type": "string",
                      "description": "A description for the Location."
                    },
                    "LocationNum": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "description": "Number identifying the individual location within the set of locations used by the Provider."
                    },
                    "Address": {
                      "description": "The physical address of the Location",
                      "type": "object",
                      "required": [
                        "Line1"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "Type": {
                          "$ref": "#/components/schemas/NZCodeSetsAddressType"
                        },
                        "Line1": {
                          "type": "string",
                          "description": "Address line 1."
                        },
                        "Line2": {
                          "type": "string",
                          "description": "Address line 2."
                        },
                        "Line3": {
                          "type": "string",
                          "description": "Address line 3."
                        },
                        "Line4": {
                          "type": "string",
                          "description": "Address line 4."
                        },
                        "Suburb": {
                          "type": "string",
                          "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                        },
                        "City": {
                          "type": "string",
                          "description": "The city part of the address."
                        },
                        "StateProvince": {
                          "type": "string",
                          "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                        },
                        "Country": {
                          "type": "string",
                          "description": "The country code."
                        },
                        "PostalCode": {
                          "type": "string",
                          "description": "The ZIP/postal code."
                        },
                        "GridLocation": {
                          "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                          "type": "object",
                          "required": [
                            "Latitude",
                            "Longitude"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "Latitude": {
                              "type": "number",
                              "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                              "minimum": -90,
                              "maximum": 90
                            },
                            "Longitude": {
                              "type": "number",
                              "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                              "minimum": -180,
                              "maximum": 180
                            }
                          }
                        },
                        "StatisticalAreaList": {
                          "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                          "type": "object",
                          "required": [
                            "StatisticalArea"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "StatisticalArea": {
                              "type": "array",
                              "items": {
                                "description": "A particular statistical area defined by Statistics New Zealand.",
                                "type": "object",
                                "required": [
                                  "Code",
                                  "SpatialUnitType"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "SpatialUnitType": {
                                    "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                  },
                                  "Code": {
                                    "type": "string",
                                    "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "GridLocation": {
                      "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                      "type": "object",
                      "required": [
                        "Latitude",
                        "Longitude"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "Latitude": {
                          "type": "number",
                          "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                          "minimum": -90,
                          "maximum": 90
                        },
                        "Longitude": {
                          "type": "number",
                          "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                          "minimum": -180,
                          "maximum": 180
                        }
                      }
                    },
                    "StatisticalAreaList": {
                      "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                      "type": "object",
                      "required": [
                        "StatisticalArea"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "StatisticalArea": {
                          "type": "array",
                          "items": {
                            "description": "A particular statistical area defined by Statistics New Zealand.",
                            "type": "object",
                            "required": [
                              "Code",
                              "SpatialUnitType"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "SpatialUnitType": {
                                "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                              },
                              "Code": {
                                "type": "string",
                                "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "Name": {
            "type": "string",
            "description": "The normal business name of the Organisation"
          },
          "Phone": {
            "description": "The set of contact phone numbers that the Organisation uses",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Main": {
                "description": "An organisation's main contact number.",
                "type": "object",
                "required": [
                  "Number"
                ],
                "additionalProperties": false,
                "properties": {
                  "Notes": {
                    "type": "string",
                    "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                  },
                  "PreferenceOrderNumber": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295,
                    "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                  },
                  "Usage": {
                    "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                  },
                  "Number": {
                    "type": "string",
                    "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                  },
                  "Extension": {
                    "type": "string",
                    "description": "Phone number extension."
                  }
                }
              }
            }
          },
          "RelatedOrganisationList": {
            "description": "A list of other organisations that are related to the Provider",
            "type": "object",
            "required": [
              "RelatedOrganisation"
            ],
            "additionalProperties": false,
            "properties": {
              "RelatedOrganisation": {
                "type": "array",
                "items": {
                  "description": "Extends ObjectReferenceType to add an extra element, OrganisationType, describing the nature of the related organisation.",
                  "type": "object",
                  "required": [
                    "RefId",
                    "Type"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/MoEOrgId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object. (optional and read-only)"
                    },
                    "LocationNum": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "description": "Number identifying the individual location within the set of locations used by the Provider."
                    },
                    "StartDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The start date of the relationship between the two organisations"
                    },
                    "EndDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The end date of the relationship between the two organisations"
                    },
                    "Type": {
                      "$ref": "#/components/schemas/NZCodeSetsOrganisationRelationshipType"
                    }
                  }
                }
              }
            },
            "readOnly": true
          },
          "OperationalStatus": {
            "$ref": "#/components/schemas/NZCodeSetsOperationalStatus"
          },
          "OperationalStatusReason": {
            "$ref": "#/components/schemas/NZCodeSetsOperationalStatusReason"
          },
          "Type": {
            "$ref": "#/components/schemas/NZCodeSetsOrganisationType"
          },
          "SectorRole": {
            "$ref": "#/components/schemas/NZCodeSetsOrganisationSectorRole"
          },
          "ProviderSMS": {
            "$ref": "#/components/schemas/NZCodeSetsSchoolManagementSystem"
          },
          "TeRitoConfig": {
            "description": "Provides iinformation specific to Te Rito, e.g. which functionality in Te Rito an organisation (school, ECE etc.) is utilising.",
            "type": "object",
            "required": [
              "DataAnalysisDashboardsInd",
              "StandardisedLearningSupportRegisterInd",
              "VirtualLearningEnvironmentInd"
            ],
            "additionalProperties": false,
            "properties": {
              "DataAnalysisDashboardsInd": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "StandardisedLearningSupportRegisterInd": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "VirtualLearningEnvironmentInd": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              }
            }
          },
          "IsLicencedECEServiceProvider": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "IsPlaygroupServiceProvider": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "ECEServiceProviderOwnershipType": {
            "$ref": "#/components/schemas/NZCodeSetsECEServiceProviderOwnershipType"
          },
          "OrganisationRefId": {
            "$ref": "#/components/schemas/MoEOrgId"
          },
          "OrganisationLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Authority": {
            "$ref": "#/components/schemas/NZCodeSetsProviderAuthority"
          },
          "SchoolService": {
            "description": "Only present if the Provider is a provider of school education services. Contains properties that are school-specific.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CoEdStatus": {
                "$ref": "#/components/schemas/NZCodeSetsSchoolCoEdStatus"
              },
              "Decile": {
                "type": "integer",
                "description": "A description of the socio-economic position of a school's student community according to the MoE decile rating system.",
                "minimum": 1,
                "maximum": 10
              },
              "NewEntrantPolicyList": {
                "description": "A list of recognised policy choices adopted by the School.",
                "type": "object",
                "required": [
                  "EnactedPolicy"
                ],
                "additionalProperties": false,
                "properties": {
                  "EnactedPolicy": {
                    "type": "array",
                    "items": {
                      "description": "A descriptor for a particular enacted policy that has been adopted by a school.",
                      "type": "object",
                      "required": [
                        "Policy"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "EffectiveFrom": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date from which the school adopted the policy. If not populated then this is the current/original policy of the school."
                        },
                        "EffectiveTo": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date after which the school has no longer adopted the policy. If not populated then the school has no planned date to end the policy."
                        },
                        "Policy": {
                          "$ref": "#/components/schemas/NZCodeSetsEnactedPolicy"
                        }
                      }
                    }
                  }
                }
              },
              "AllowManualProvisioning": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "SchoolClassificationList": {
                "description": "A list of School Classification descriptors that further describe the nature of a school",
                "type": "object",
                "required": [
                  "Classification"
                ],
                "additionalProperties": false,
                "properties": {
                  "Classification": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NZCodeSetsSchoolClassification"
                    }
                  }
                }
              },
              "SchoolYearList": {
                "description": "A list of SchoolYear elements describing the genders of students accepted for enrolment at each year level.",
                "type": "object",
                "required": [
                  "SchoolYear"
                ],
                "additionalProperties": false,
                "properties": {
                  "SchoolYear": {
                    "type": "array",
                    "items": {
                      "description": "A descriptor for a particular Year Level offered by the school, including detail of the gender of students that are accepted for enrolment in this year level.",
                      "type": "object",
                      "required": [
                        "FIRSTSchoolYearGenderId",
                        "Gender",
                        "YearLevel"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "YearLevel": {
                          "type": "integer",
                          "description": "Which year level are we describing?",
                          "minimum": 1,
                          "maximum": 13
                        },
                        "FIRSTSchoolYearGenderId": {
                          "type": "integer",
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "description": "This is the unique identifier for the combination of School Year, Gender and Boarding received from FIRST. There may be multiple sets of School Year, Gender and boarding for a school, each with their own identifier. A record must be created for each set."
                        },
                        "Gender": {
                          "$ref": "#/components/schemas/NZCodeSetsSchoolingGender"
                        },
                        "Boarding": {
                          "$ref": "#/components/schemas/NZCodeSetsSchoolBoardingType"
                        }
                      }
                    }
                  }
                }
              },
              "TechnologyCentreName": {
                "type": "string",
                "description": "The name of the Technology Centre that is run as part of the School; Eg: Marlborough Technology Centre is run as part of Bohally Intermediate School."
              }
            }
          },
          "ECEService": {
            "description": "Only present if the Provider is a provider of early childhood education services. Contains properties that are ECE specific.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Type": {
                "$ref": "#/components/schemas/NZCodeSetsECEServiceType"
              },
              "PrimaryLanguage": {
                "$ref": "#/components/schemas/NZCodeSetsLanguage"
              },
              "PrimaryLanguageOther": {
                "type": "string",
                "description": "Additional information about a language when one of the 'Other' language codes sets is selected."
              }
            }
          },
          "TertiaryService": {
            "description": "Only present if the Provider is a provider of tertiary education services. Contains properties that are Tertiary Education specific. A placeholder for future expansion",
            "type": "object",
            "required": [
              "Type"
            ],
            "additionalProperties": false,
            "properties": {
              "Type": {
                "type": "string",
                "description": "Code denoting the kind of Tertiary service. eg: University, Wananga, etc."
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          },
          "LastSyncDateTime": {
            "description": "Date & Time the last EdsbyLink data sync batch was processed",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "LastSIFDateTime": {
            "description": "Date & Time the last SIF API transaction was processed",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "createOrganisations": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Organisation"
        ],
        "title": "Organisations",
        "description": "Wrapper around an array of Organisations",
        "properties": {
          "Organisation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createOrganisation"
            },
            "description": "Education Provider entities (ECEs, Schools & Tertiary Education Institutions), Communities (Kāhui Ako, Learning Support Clusters, etc.), and others (Teen Parent Units, Activity Centres. etc.)"
          }
        }
      },
      "createOrganisationRelationship": {
        "title": "OrganisationRelationship",
        "description": "<p>Records a recognised relationship between two education Organisations. The two organisations are referred to as the Source Organisation and the Related Organisation. </p> <p>RelationshipType records the nature of the relationship between the two organisations, and gives guidance on which is the Source Organisation and which is the Related Organisation. </p>",
        "required": [
          "EffectiveDate",
          "RelatedOrganisation",
          "RelationshipType",
          "SourceOrganisation",
          "Status",
          "SourceOrganisationRole",
          "RelatedOrganisationRole",
          "OrganisationRelationshipLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "OrganisationRelationshipRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "OrganisationRelationshipLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsOrganisationRelationshipStatus"
          },
          "RelationshipType": {
            "$ref": "#/components/schemas/NZCodeSetsOrganisationRelationshipType"
          },
          "SourceOrganisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "SourceOrganisationRole": {
            "$ref": "#/components/schemas/NZCodeSetsSourceOrganisationRole"
          },
          "SourceOrganisationAgreementDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the source Organisation in the relationship registered their agreement to the relationship. nil value if the source Organisation is yet to register their agreement ot the relationship."
          },
          "RelatedOrganisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "RelatedOrganisationRole": {
            "$ref": "#/components/schemas/NZCodeSetsRelatedOrganisationRole"
          },
          "RelatedOrganisationAgreementDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the related Organisation in the relationship registered their agreement to the relationship. nil value if the related Organisation is yet to register their agreement ot the relationship."
          },
          "EffectiveDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date from which the organisation relationship is active."
          },
          "ExpirationDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date after which the organisation relationship is no longer active."
          },
          "YearLevelList": {
            "description": "A list of YearLevels, denoting the year levels of the learners being hosted or sent from the client or contributing organisation",
            "type": "object",
            "required": [
              "YearLevel"
            ],
            "additionalProperties": false,
            "properties": {
              "YearLevel": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "SubjectAreaList": {
            "description": "A list of Subject or Learning Areas, denoting the curriculum subjects or learning areas that the learners being sent by the Source Organisation are taught at the Related Organisation.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSubjectArea"
                }
              },
              "NCEASubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsNCEASubjectArea"
                }
              }
            }
          },
          "Description": {
            "type": "string",
            "description": "Free text description providing more detail about the organisation relationship."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createOrganisationRelationships": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "OrganisationRelationship"
        ],
        "title": "OrganisationRelationships",
        "description": "Wrapper around an array of OrganisationRelationships",
        "properties": {
          "OrganisationRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createOrganisationRelationship"
            },
            "description": "<p>Records a recognised relationship between two education Organisations. The two organisations are referred to as the Source Organisation and the Related Organisation. </p> <p>RelationshipType records the nature of the relationship between the two organisations, and gives guidance on which is the Source Organisation and which is the Related Organisation. </p>"
          }
        }
      },
      "createSchedule": {
        "title": "Schedule",
        "description": "<p>A rotation of ScheduleAcademicDays that a Provider has in place to manage their timetable.</p>",
        "required": [
          "Organisation",
          "ScheduleName",
          "StartDate",
          "ScheduleLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ScheduleRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "ScheduleLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "ScheduleName": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "The start date of the schedule."
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "description": "The end date of the schedule."
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "AcademicDayList": {
            "description": "A list of the academic days within this schedule.",
            "type": "object",
            "required": [
              "AcademicDay"
            ],
            "additionalProperties": false,
            "properties": {
              "AcademicDay": {
                "type": "array",
                "items": {
                  "description": "An academic day that is part of this schedule",
                  "type": "object",
                  "required": [
                    "PeriodList"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "LocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object."
                    },
                    "BellSchedule": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "PeriodList": {
                      "description": "A list of the periods that make up this academic day, e.g. Period 1, Period 2 etc.",
                      "type": "object",
                      "required": [
                        "Period"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "Period": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ObjectReference"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createSchedules": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Schedule"
        ],
        "title": "Schedules",
        "description": "Wrapper around an array of Schedules",
        "properties": {
          "Schedule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createSchedule"
            },
            "description": "<p>A rotation of ScheduleAcademicDays that a Provider has in place to manage their timetable.</p>"
          }
        }
      },
      "createScheduleAcademicDay": {
        "title": "ScheduleAcademicDay",
        "description": "An academic day that makes up all or part of a schedule for a provider. An academic day represents a structured day that reoccurs consistently e.g. Day A has five periods that occurs Mon-Wed and Day B has four periods and occurs Thurs-Fri.",
        "required": [
          "AcademicDayName",
          "Organisation",
          "PeriodList",
          "Schedule",
          "ScheduleAcademicDayLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ScheduleAcademicDayRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "ScheduleAcademicDayLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "AcademicDayName": {
            "type": "string",
            "description": "The name of the Academic Day."
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "Schedule": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "BellSchedule": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "PeriodList": {
            "description": "A list of periods that make up this academic day, e.g. Period 1, Period 2 etc.",
            "type": "object",
            "required": [
              "Period"
            ],
            "additionalProperties": false,
            "properties": {
              "Period": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createScheduleAcademicDays": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ScheduleAcademicDay"
        ],
        "title": "ScheduleAcademicDays",
        "description": "Wrapper around an array of ScheduleAcademicDays",
        "properties": {
          "ScheduleAcademicDay": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createScheduleAcademicDay"
            },
            "description": "An academic day that makes up all or part of a schedule for a provider. An academic day represents a structured day that reoccurs consistently e.g. Day A has five periods that occurs Mon-Wed and Day B has four periods and occurs Thurs-Fri."
          }
        }
      },
      "createScheduleDate": {
        "title": "ScheduleDate",
        "description": "Provides information about the schedule that is being followed on a specific calendar date at a particular Provider, e.g. Academic Day A from the Term 1 Schedule using the Periods and their start and end times defined in Bell Schedule Day A.",
        "required": [
          "AcademicDay",
          "CalendarDate",
          "Organisation",
          "Schedule",
          "ScheduleDateLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ScheduleDateRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "ScheduleDateLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "CalendarDate": {
            "type": "string",
            "format": "date-time",
            "description": "The actual date the school is in session."
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "Term": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "Schedule": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "AcademicDay": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "BellSchedule": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "TeachingGroupEventList": {
            "description": "List of generic object references to the set of TeachingGroupEvents that take place on this calendar date.",
            "type": "object",
            "required": [
              "Event"
            ],
            "additionalProperties": false,
            "properties": {
              "Event": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "SchedulePeriodList": {
            "description": "A list of the periods that took place on this scheduled date and their start and end times.",
            "type": "object",
            "required": [
              "SchedulePeriodTime"
            ],
            "additionalProperties": false,
            "properties": {
              "SchedulePeriodTime": {
                "type": "array",
                "items": {
                  "description": "The definition of a SchedulePeriod start and end time, on a particular Bell Schedule.",
                  "type": "object",
                  "required": [
                    "EndTime",
                    "Period",
                    "StartTime"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "Period": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "StartTime": {
                      "type": "string",
                      "format": "time",
                      "description": "The time the period starts."
                    },
                    "EndTime": {
                      "type": "string",
                      "format": "time",
                      "description": "The time the period ends."
                    }
                  }
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createScheduleDates": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ScheduleDate"
        ],
        "title": "ScheduleDates",
        "description": "Wrapper around an array of ScheduleDates",
        "properties": {
          "ScheduleDate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createScheduleDate"
            },
            "description": "Provides information about the schedule that is being followed on a specific calendar date at a particular Provider, e.g. Academic Day A from the Term 1 Schedule using the Periods and their start and end times defined in Bell Schedule Day A."
          }
        }
      },
      "createSchedulePeriod": {
        "title": "SchedulePeriod",
        "description": "Defines the periods that take place within one or more academic days. Periods are assigned to particular days in the Schedule in SchduleAcademicDay.PeriodList",
        "required": [
          "Organisation",
          "PeriodName",
          "Schedule",
          "SchedulePeriodLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "SchedulePeriodRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "SchedulePeriodLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "PeriodName": {
            "type": "string",
            "description": "The name of the schedule period."
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "Schedule": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createSchedulePeriods": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "SchedulePeriod"
        ],
        "title": "SchedulePeriods",
        "description": "Wrapper around an array of SchedulePeriods",
        "properties": {
          "SchedulePeriod": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createSchedulePeriod"
            },
            "description": "Defines the periods that take place within one or more academic days. Periods are assigned to particular days in the Schedule in SchduleAcademicDay.PeriodList"
          }
        }
      },
      "createScheduleTerm": {
        "title": "ScheduleTerm",
        "description": "<p>Provides information about school terms, tertiary terms etc., either at a national, or provider level, within a school year. If the term is being supplied at a national level, no provider information will be linked.</p>",
        "required": [
          "EndDate",
          "SchoolYear",
          "StartDate",
          "TermName",
          "ScheduleTermLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ScheduleTermRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "ScheduleTermLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "TermName": {
            "type": "string",
            "description": "The name of the schedule term."
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "SchoolYear": {
            "type": "integer",
            "minimum": 1,
            "maximum": 9999,
            "description": "The school year the Term is part of."
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "The start date of the term"
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "description": "The end date of the term"
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createScheduleTerms": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ScheduleTerm"
        ],
        "title": "ScheduleTerms",
        "description": "Wrapper around an array of ScheduleTerms",
        "properties": {
          "ScheduleTerm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createScheduleTerm"
            },
            "description": "<p>Provides information about school terms, tertiary terms etc., either at a national, or provider level, within a school year. If the term is being supplied at a national level, no provider information will be linked.</p>"
          }
        }
      },
      "createStaffAssignment": {
        "title": "StaffAssignment",
        "description": "<p>Records assignment of a Staff member to a particular role at a Provider or other EducationOrganisation. A staff member can have multiple concurrent roles at Schools (via Provider data object) and Kāhui Ako (via the EducationOrganisation data object); each role would be a separate StaffAssignment record.</p> <p>Role assignments can be restricted to categories of Students with the StaffSubjectList and YearLevelList. This allows for assignment to roles with particular responsibility for general cohorts of students, such as \"Head of Department (Maths)\" or \"Year 8 Student Dean\".</p> <p>While assignment to student contact roles such as Subject Teacher, Homeroom Teacher, Whānau Teacher or House Master is made with this data object; Details of the particular group of specific students the staff member is responsible for are made via the TeachingGroup data object.</p>",
        "required": [
          "AssignedLocation",
          "StaffAssignmentStatus",
          "StaffMember",
          "StaffRole",
          "StartDate",
          "StaffAssignmentLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StaffAssignmentRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StaffAssignmentLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "StaffAssignmentStatus": {
            "$ref": "#/components/schemas/NZCodeSetsStaffAssignmentStatus",
            "readOnly": true
          },
          "StaffMember": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "AssignedLocation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "EmployingOrAccommodatingProvider": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "Description": {
            "type": "string",
            "description": "Short description of the staff member's assignment to the provider."
          },
          "StaffRole": {
            "$ref": "#/components/schemas/NZCodeSetsStaffRole"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "This is the date from which the staff assignment is valid (inclusive)."
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "description": "This is the date through which the staff assignment is valid (inclusive). This can be NULL when the staff member's assignment to a particular role is open-ended."
          },
          "StaffSubjectList": {
            "description": "The set of SubjectArea/LearningAreas the that the staff member is responsible for. e.g. \"Head of Dept (Maths)\" includes students learning any flavour of Mathematics.",
            "type": "object",
            "required": [
              "StaffSubject"
            ],
            "additionalProperties": false,
            "properties": {
              "StaffSubject": {
                "type": "array",
                "items": {
                  "description": "This element contains Staff subjects they are eligible to teach together with the teaching preference.",
                  "type": "object",
                  "required": [
                    "Code"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "PreferenceNumber": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "description": "Priority of Subject to Teach."
                    },
                    "Code": {
                      "$ref": "#/components/schemas/NZCodeSetsSubjectArea"
                    },
                    "YearLevels": {
                      "description": "Staff assignment to this particular subject area / learning area applies only for students enrolled in a particular set of year levels. e.g. \"Asst. Head of Dept (Maths, Jnr)\" could ony be responsible for Students in year levels 9 & 10, who are learning Mathematics.",
                      "type": "object",
                      "required": [
                        "YearLevel"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "YearLevel": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "YearLevels": {
            "description": "The set of student Year Levels that the staff member is responsible for. e.g. \"Junior Student Dean\" could have responsibility for all students in year levels 9 & 10.",
            "type": "object",
            "required": [
              "YearLevel"
            ],
            "additionalProperties": false,
            "properties": {
              "YearLevel": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createStaffAssignments": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StaffAssignment"
        ],
        "title": "StaffAssignments",
        "description": "Wrapper around an array of StaffAssignments",
        "properties": {
          "StaffAssignment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStaffAssignment"
            },
            "description": "<p>Records assignment of a Staff member to a particular role at a Provider or other EducationOrganisation. A staff member can have multiple concurrent roles at Schools (via Provider data object) and Kāhui Ako (via the EducationOrganisation data object); each role would be a separate StaffAssignment record.</p> <p>Role assignments can be restricted to categories of Students with the StaffSubjectList and YearLevelList. This allows for assignment to roles with particular responsibility for general cohorts of students, such as \"Head of Department (Maths)\" or \"Year 8 Student Dean\".</p> <p>While assignment to student contact roles such as Subject Teacher, Homeroom Teacher, Whānau Teacher or House Master is made with this data object; Details of the particular group of specific students the staff member is responsible for are made via the TeachingGroup data object.</p>"
          }
        }
      },
      "createStaffPersonal": {
        "title": "StaffPersonal",
        "description": "<p>All the personal contact and demographic information relating to a staff member, who might be a teacher or other employee of a Provider.</p> <p>Non personal information relating to the staff member's relationship with Providers is stored in the StaffAssignment data object.</p>",
        "required": [
          "StaffPersonalLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StaffPersonalRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StaffPersonalLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "ESLPairwiseId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "SchoolSMSUserId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "PersonInfo": {
            "description": "Personal Information",
            "type": "object",
            "required": [
              "Name",
              "Demographics"
            ],
            "additionalProperties": false,
            "properties": {
              "Name": {
                "description": "A name used by the person",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Title": {
                    "type": "string",
                    "description": "A title or prefix associated with the name."
                  },
                  "FamilyName": {
                    "type": "string",
                    "description": "Also known as Last Name, although some cultures may not present a family name as the last name."
                  },
                  "GivenName": {
                    "type": "string",
                    "description": "Also known as First Name, although some cultures may not present this name as the first element in a name. May contain a composite of all given names."
                  },
                  "MiddleName": {
                    "type": "string",
                    "description": "Where more than one Given Name, these may be combined in one composite field or else populated in several elements."
                  },
                  "SecondMiddleName": {
                    "type": "string",
                    "description": "Middle names can be sent altogether in one element or if the source system has more than one middle name field, they can be spread across two elements. SecondMiddleName will either contain no values, or it will hold the person's second and subsequent middle names while MiddleName will hold the person's first middle name."
                  },
                  "FamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredFamilyName": {
                    "type": "string",
                    "description": "A preferred version of the Family Name. Note:A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "PreferredFamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredGivenName": {
                    "type": "string",
                    "description": "A preferred version of the Given Name. Note: A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "Suffix": {
                    "type": "string",
                    "description": "Textual suffix like PHD, JP, BSc."
                  },
                  "FullName": {
                    "type": "string",
                    "description": "A combination of all name elements as one composite text element"
                  },
                  "Type": {
                    "$ref": "#/components/schemas/NZCodeSetsNameUsageType"
                  },
                  "IsVerified": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  }
                },
                "required": [
                  "FamilyName",
                  "GivenName"
                ]
              },
              "Demographics": {
                "description": "Details of the person’s demographic properties",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "BirthDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The person's date of birth."
                  }
                },
                "required": [
                  "BirthDate"
                ]
              },
              "Email": {
                "description": "The person's e-mail address(es) - one or more emails.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Personal": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "required": [
                      "Address"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  },
                  "Work": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "required": [
                      "Address"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  }
                }
              },
              "PersonPhoto": {
                "$ref": "#/components/schemas/ObjectReference"
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          },
          "StaffAssignment": {
            "type": "object",
            "description": "<p>Partial <a href=\"#tag/StaffAssignment\">StaffAssignment</a> object, denoting initial role, at the given Organisation for the StaffPersonal upon creation.</p>",
            "required": [
              "StaffRole",
              "StartDate",
              "StaffAssignmentLocalId"
            ],
            "additionalProperties": false,
            "properties": {
              "StaffAssignmentRefId": {
                "$ref": "#/components/schemas/RefId"
              },
              "StaffAssignmentLocalId": {
                "$ref": "#/components/schemas/LocalId"
              },
              "StaffRole": {
                "$ref": "#/components/schemas/NZCodeSetsStaffRole"
              },
              "StartDate": {
                "type": "string",
                "format": "date-time",
                "x-displayAs": "date",
                "description": "<p>This is the date from which the staff assignment is valid (inclusive).</p>"
              },
              "EndDate": {
                "type": "string",
                "format": "date-time",
                "x-displayAs": "date",
                "description": "This is the date through which the staff assignment is valid (inclusive). This can be NULL when the staff member's assignment to a particular role is open-ended.</p>"
              }
            }
          }
        }
      },
      "createStaffPersonals": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StaffPersonal"
        ],
        "title": "StaffPersonals",
        "description": "Wrapper around an array of StaffPersonals",
        "properties": {
          "StaffPersonal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStaffPersonal"
            },
            "description": "<p>All the personal contact and demographic information relating to a staff member, who might be a teacher or other employee of a Provider.</p> <p>Non personal information relating to the staff member's relationship with Providers is stored in the StaffAssignment data object.</p>"
          }
        }
      },
      "createStaffTeachingGroupAssignment": {
        "title": "StaffTeachingGroupAssignment",
        "description": "<p>Records assignment of a Staff member to a particular role with a particular TeachingGroup at a Provider</p>",
        "required": [
          "Organisation",
          "Role",
          "StaffMember",
          "StartDate",
          "Status",
          "TeachingGroup",
          "StaffTeachingGroupAssignmentLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StaffTeachingGroupAssignmentRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StaffTeachingGroupAssignmentLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsStaffTeachingGroupAssignmentStatus",
            "readOnly": true
          },
          "StaffMember": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "TeachingGroup": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "Role": {
            "$ref": "#/components/schemas/NZCodeSetsStaffTeachingGroupRole"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "This is the date from which the staff assignment is valid (inclusive)."
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "description": "This is the date through which the staff assignment is valid (inclusive). This can be NULL when the staff member's assignment to a particular role is open-ended."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createStaffTeachingGroupAssignments": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StaffTeachingGroupAssignment"
        ],
        "title": "StaffTeachingGroupAssignments",
        "description": "Wrapper around an array of StaffTeachingGroupAssignments",
        "properties": {
          "StaffTeachingGroupAssignment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStaffTeachingGroupAssignment"
            },
            "description": "<p>Records assignment of a Staff member to a particular role with a particular TeachingGroup at a Provider</p>"
          }
        }
      },
      "createStudentAssessmentTask": {
        "title": "StudentAssessmentTask",
        "description": "<p>Record of a student's attempt at a particular assessment task.</p>",
        "required": [
          "AssessmentTask",
          "OrganisationInvolvedList",
          "Student",
          "AssessmentAttempt",
          "Status",
          "StudentAssessmentTaskLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentAssessmentTaskRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentAssessmentTaskLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "AssessmentTask": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "StudentAssessmentTaskRegistration": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "OrganisationInvolvedList": {
            "description": "A list of the Providers/Organisations involved and their role, e.g. assessing provider, assessment provider, assessment location provider.",
            "type": "object",
            "required": [
              "OrganisationInvolved"
            ],
            "additionalProperties": false,
            "properties": {
              "OrganisationInvolved": {
                "type": "array",
                "items": {
                  "description": "The provider and Location with the assessment task and the role they play, e.g. assessing provider, assessment location provider, assessment provider, registering provider.",
                  "type": "object",
                  "required": [
                    "OrganisationRole",
                    "RefId"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/MoEOrgId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object. (optional and read-only)"
                    },
                    "LocationNum": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "description": "Number identifying the individual location within the set of locations used by the Provider."
                    },
                    "OrganisationRole": {
                      "$ref": "#/components/schemas/NZCodeSetsAssessmentProviderRole"
                    }
                  }
                }
              }
            }
          },
          "StaffInvolvedList": {
            "description": "A list of the staff involved and their role in relation to the assessment task, e.g. the staff members that supervise the undertaking of the assessment task by the student.",
            "type": "object",
            "required": [
              "StaffInvolved"
            ],
            "additionalProperties": false,
            "properties": {
              "StaffInvolved": {
                "type": "array",
                "items": {
                  "description": "The staff member involved with the assessment task and their role, e.g. created the assessment task, moderator, marker.",
                  "type": "object",
                  "required": [
                    "StaffRole"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "LocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object."
                    },
                    "StaffRole": {
                      "$ref": "#/components/schemas/NZCodeSetsAssessmentStaffRole"
                    }
                  }
                }
              }
            }
          },
          "DateTimeAssessmentScheduled": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the student is scheduled to be assessed against the assessment task."
          },
          "DateTimeAssessed": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the student was assessed against the assessment task."
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentStatus"
          },
          "NCEAStatusDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date the current NCEA status was set."
          },
          "AssessmentAttempt": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "description": "The attempt number the student is making to pass this assessment, e.g. is it their first, second attempt."
          },
          "SpecialAssessmentConditionList": {
            "description": "The list of the special assessment conditions that the student is entitled to have when sitting this assessment task.",
            "type": "object",
            "required": [
              "SpecialAssessmentCondition"
            ],
            "additionalProperties": false,
            "properties": {
              "SpecialAssessmentCondition": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSpecialAssessmentCondition"
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createStudentAssessmentTasks": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentAssessmentTask"
        ],
        "title": "StudentAssessmentTasks",
        "description": "Wrapper around an array of StudentAssessmentTasks",
        "properties": {
          "StudentAssessmentTask": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStudentAssessmentTask"
            },
            "description": "<p>Record of a student's attempt at a particular assessment task.</p>"
          }
        }
      },
      "createStudentAssessmentTaskResult": {
        "title": "StudentAssessmentTaskResult",
        "description": "<p>Records the result achieved by a single student at a particular assessment task.</p>",
        "required": [
          "AssessmentMethodology",
          "OrganisationInvolvedList",
          "ResultScoreList",
          "Student",
          "StudentAssessmentTaskResultLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentAssessmentTaskResultRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentAssessmentTaskResultLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "AssessmentTask": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "StudentAssessmentTask": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "AssessmentType": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentType"
          },
          "AssessmentMethodology": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentMethodology"
          },
          "OrganisationInvolvedList": {
            "description": "A list of the providers involved and their role, e.g. assessing provider, assessment provider, assessment location provider, registering provider.",
            "type": "object",
            "required": [
              "OrganisationInvolved"
            ],
            "additionalProperties": false,
            "properties": {
              "OrganisationInvolved": {
                "type": "array",
                "items": {
                  "description": "The provider and Location with the assessment task and the role they play, e.g. assessing provider, assessment location provider, assessment provider, registering provider.",
                  "type": "object",
                  "required": [
                    "OrganisationRole",
                    "RefId"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/MoEOrgId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object. (optional and read-only)"
                    },
                    "LocationNum": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "description": "Number identifying the individual location within the set of locations used by the Provider."
                    },
                    "OrganisationRole": {
                      "$ref": "#/components/schemas/NZCodeSetsAssessmentProviderRole"
                    }
                  }
                }
              }
            }
          },
          "StaffInvolvedList": {
            "description": "A list of the staff involved and their role in relation to the assessment task, e.g. the moderator, the marker.",
            "type": "object",
            "required": [
              "StaffInvolved"
            ],
            "additionalProperties": false,
            "properties": {
              "StaffInvolved": {
                "type": "array",
                "items": {
                  "description": "The staff member involved with the assessment task and their role, e.g. created the assessment task, moderator, marker.",
                  "type": "object",
                  "required": [
                    "StaffRole"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "LocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object."
                    },
                    "StaffRole": {
                      "$ref": "#/components/schemas/NZCodeSetsAssessmentStaffRole"
                    }
                  }
                }
              }
            }
          },
          "ProviderCourse": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "LearningStandardList": {
            "description": "A list of references to the LearningStandards the assessment task result is related to.",
            "type": "object",
            "required": [
              "LearningStandardRefId"
            ],
            "additionalProperties": false,
            "properties": {
              "LearningStandardRefId": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LocalId"
                }
              }
            }
          },
          "SubjectAreaList": {
            "description": "A list of the subject areas that the assessment pertains to.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSubjectArea"
                }
              },
              "NCEASubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsNCEASubjectArea"
                }
              }
            }
          },
          "AssessedAtYearLevel": {
            "type": "integer",
            "description": "Year Level of the Assessment Task the student is being assessed against. May only contain the values 1 through to 13 inclusive.",
            "minimum": 1,
            "maximum": 13
          },
          "Curriculum": {
            "$ref": "#/components/schemas/NZCodeSetsCurriculum"
          },
          "AssessmentToolUsed": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentTool"
          },
          "AssessmentToolTest": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentToolTest"
          },
          "Timeframe": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentTimeframe"
          },
          "AssessmentAttempt": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "description": "The attempt number the student is making to pass this assessment, e.g. is it their first, second attempt."
          },
          "EvaluationType": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentEvaluationType"
          },
          "StandardType": {
            "$ref": "#/components/schemas/NZCodeSetsLearningStandardType"
          },
          "DateMarked": {
            "type": "string",
            "format": "date-time",
            "description": "Date the assessment task was marked."
          },
          "DateTimeAssessed": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the student was assessed against the assessment task."
          },
          "DateStudentNotified": {
            "type": "string",
            "format": "date-time",
            "description": "The date the student was notified of their final mark for the assessment task."
          },
          "Published": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "PublishedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the assessment task result was first published in a report."
          },
          "Iteration": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "description": "The iteration of this result for the assessment, e.g. some tasks require multiple assessments before being achieved."
          },
          "CreditsAchieved": {
            "type": "number",
            "description": "The number of credits the student achieved."
          },
          "ResultScoreList": {
            "description": "A list of the assessment result scores that the student received for this assessment task.",
            "type": "object",
            "required": [
              "ResultScore"
            ],
            "additionalProperties": false,
            "properties": {
              "ResultScore": {
                "type": "array",
                "items": {
                  "description": "An individual result score for the assessment task.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ScoreType": {
                      "$ref": "#/components/schemas/NZCodeSetsScoreType"
                    },
                    "Competency": {
                      "type": "string",
                      "description": "String describing a particular competency that is being reported in the assessment."
                    },
                    "ScoreMetric": {
                      "$ref": "#/components/schemas/NZCodeSetsScoreMetric"
                    },
                    "ScoreValue": {
                      "type": "string",
                      "description": "The score the student received for assessment task against that metric. If the result score is for an NZQA or International Baccalaureate then the ScoreResultCode using the enumeration NZCodeSetsAssessmentResultType must be used instead."
                    },
                    "ScoreMax": {
                      "type": "number",
                      "description": "The maximum value possible for the score."
                    },
                    "ItemNumber": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "description": "The Item within an NZQA Assessment Task that the score is for. When a marker marks an external assessment (a paper for a standard in an examination, for example) they provide a score of 0-8 for each item (question) in the paper. Typically a paper will have 3 items for a total score of 24. However there can be more items than this. The individual item scores, and the total are then sent back to NZQA’s eQA system from the marking application."
                    }
                  }
                }
              }
            }
          },
          "Weight": {
            "type": "number",
            "description": "Weight placed upon this result"
          },
          "EffortComment": {
            "type": "string",
            "description": "Free text comment about the effort the student made for the assessment."
          },
          "OtherComment": {
            "type": "string",
            "description": "Free text comments providing additional information for the students assessment result."
          },
          "DocumentList": {
            "description": "List which describes the meta-data for, and the Location of any associated documents.",
            "type": "object",
            "required": [
              "Document"
            ],
            "additionalProperties": false,
            "properties": {
              "Document": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createStudentAssessmentTaskResults": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentAssessmentTaskResult"
        ],
        "title": "StudentAssessmentTaskResults",
        "description": "Wrapper around an array of StudentAssessmentTaskResults",
        "properties": {
          "StudentAssessmentTaskResult": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStudentAssessmentTaskResult"
            },
            "description": "<p>Records the result achieved by a single student at a particular assessment task.</p>"
          }
        }
      },
      "createStudentAttainment": {
        "title": "StudentAttainment",
        "description": "<p>Records a student gaining an Attainment e.g. NCEA Qualification, Learning Standard etc.</p>",
        "required": [
          "Attainment",
          "GrantingOrganisation",
          "Student",
          "StudentAttainmentLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentAttainmentRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentAttainmentLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "GrantingOrganisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "Attainment": {
            "$ref": "#/components/schemas/NamedObjectReference"
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "AuthorisingStaffMember": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "DateAttained": {
            "type": "string",
            "format": "date-time",
            "description": "The date the student achieved the attainment."
          },
          "YearAttained": {
            "type": "integer",
            "minimum": 1,
            "maximum": 9999,
            "description": "The year the student achieved the attainment."
          },
          "JustificationList": {
            "description": "A list of references identifying the assessment task results that justify the student achieving this attainment.",
            "type": "object",
            "required": [
              "Justification"
            ],
            "additionalProperties": false,
            "properties": {
              "Justification": {
                "type": "array",
                "items": {
                  "description": "Details of an assessment task result or other student attainment that justifies the student achieving this attainment.",
                  "type": "object",
                  "required": [
                    "Date",
                    "ObjectType",
                    "Result"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "LocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object."
                    },
                    "ObjectType": {
                      "$ref": "#/components/schemas/NZCodeSetsReferrableDataObjects"
                    },
                    "AssessmentType": {
                      "$ref": "#/components/schemas/NZCodeSetsAssessmentType"
                    },
                    "Result": {
                      "type": "string",
                      "description": "The final result of the assessment task that justifies the attainment."
                    },
                    "Date": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date the justifying assessment task was achieved."
                    },
                    "CreditValue": {
                      "type": "number",
                      "description": "The number of credits the justifying assessment task contributes towards this attainment."
                    }
                  }
                }
              }
            }
          },
          "SubjectAreaList": {
            "description": "Code denoting the Learning or Subject Area the assessment task is for.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSubjectArea"
                }
              },
              "NCEASubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsNCEASubjectArea"
                }
              }
            }
          },
          "EndorsementLevel": {
            "$ref": "#/components/schemas/NZCodeSetsNCEAEndorsementLevel"
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createStudentAttainments": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentAttainment"
        ],
        "title": "StudentAttainments",
        "description": "Wrapper around an array of StudentAttainments",
        "properties": {
          "StudentAttainment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStudentAttainment"
            },
            "description": "<p>Records a student gaining an Attainment e.g. NCEA Qualification, Learning Standard etc.</p>"
          }
        }
      },
      "createStudentAttendanceSummary": {
        "title": "StudentAttendanceSummary",
        "description": "<p>Provides a summary of a student's daily attendance and membership information for a given provider during the time period between the StartDate and EndDate, inclusive. There will be multiple instances of this object for a student in a school over the course of a school year. This summary may be generated by aggregating more granular attendance records, in which case all fields will be read-only; and RefId element may not be applicable.</p>",
        "required": [
          "EndDate",
          "Organisation",
          "SchoolCalendarYear",
          "StartDate",
          "Student"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentAttendanceSummaryRefId": {
            "$ref": "#/components/schemas/RefId"
          },
          "StudentAttendanceSummaryLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "SchoolCalendarYear": {
            "type": "integer",
            "minimum": 1,
            "maximum": 9999,
            "description": "School year for which the information is applicable."
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "Starting date of this attendance reporting period."
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "description": "Ending date of this attendance reporting period."
          },
          "StartDay": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295,
            "description": "Number of the school day represented in StartDate."
          },
          "EndDay": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295,
            "description": "Number of the school day represented in EndDate."
          },
          "FTE": {
            "type": "number",
            "description": "Full time equivalent numeric value of the student's course load during this attendance period, expressed in decimal form, where 1.00 represents a full time enrollment.",
            "minimum": 0,
            "maximum": 1
          },
          "AttendancePercentageHalfDays": {
            "type": "number",
            "description": "The percentage of half days the student was present when school was in session between the StartDate and EndDate, inclusive. Number of Sessions Present / Total Number of possible sessions = Percentage, e.g. 294/319 = 92.2%."
          },
          "AttendanceUnjustifiedHalfDays": {
            "type": "number",
            "description": "The percentage of half days the student had unjustified absences when school was in session between the StartDate and EndDate, inclusive."
          },
          "HalfDaysYearPresent": {
            "type": "number",
            "description": "The number of half days the student was present when school was in session between the StartDate and EndDate, inclusive."
          },
          "HalfDaysYearAbsent": {
            "type": "number",
            "description": "The number of half days the student was absent when school was in session between the StartDate and EndDate, inclusive."
          },
          "HalfDaysYearJustified": {
            "type": "number",
            "description": "The number of half days the student was absent that were justified when school was in session between the StartDate and EndDate, inclusive."
          },
          "HalfDaysYearTotal": {
            "type": "number",
            "description": "The total number of half days."
          },
          "HalfDaysYearIntermittantUnjustified": {
            "type": "number",
            "description": "The number of days the student was absent from school for an unjustifiable reason when school was in session between the StartDate and EndDate, inclusive, and weren't absence for the complete half-day."
          },
          "HalfDaysYearPercentagePresent": {
            "type": "number",
            "description": "The percentage of half days the student was present when school was in session between the StartDate and EndDate, inclusive."
          },
          "HalfDaysYearUnjustified": {
            "type": "number",
            "description": "The number of days the student was absent from school for an unjustifiable reason when school was in session between the StartDate and EndDate, inclusive."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createStudentAttendanceSummarys": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentAttendanceSummary"
        ],
        "title": "StudentAttendanceSummarys",
        "description": "Wrapper around an array of StudentAttendanceSummarys",
        "properties": {
          "StudentAttendanceSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStudentAttendanceSummary"
            },
            "description": "<p>Provides a summary of a student's daily attendance and membership information for a given provider during the time period between the StartDate and EndDate, inclusive. There will be multiple instances of this object for a student in a school over the course of a school year. This summary may be generated by aggregating more granular attendance records, in which case all fields will be read-only; and RefId element may not be applicable.</p>"
          }
        }
      },
      "createStudentAttendanceTimeList": {
        "title": "StudentAttendanceTimeList",
        "description": "<p>This object provides more detail about the attendance spans for a single student during the day: it provides more detailed information than the single TimeIn and TimeOut elements in StudentDailyAttendance.</p>",
        "required": [
          "AttendanceTimeList",
          "Organisation",
          "Student"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "AttendanceTimeList": {
            "description": "Breakdown of times that the student was recorded as being present or absent from school or class.",
            "type": "object",
            "required": [
              "AttendanceTime"
            ],
            "additionalProperties": false,
            "properties": {
              "AttendanceTime": {
                "type": "array",
                "items": {
                  "description": "Time span that the student entered or returned to school",
                  "type": "object",
                  "required": [
                    "AttendanceDate",
                    "AttendanceType",
                    "Code"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "AttendanceTimeRefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "AttendanceTimeLocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "TeachingGroup": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "AttendanceType": {
                      "$ref": "#/components/schemas/NZCodeSetsAttendanceType"
                    },
                    "AttendanceCodeGroup": {
                      "$ref": "#/components/schemas/NZCodeSetsAttendanceCodeGroup"
                    },
                    "Code": {
                      "$ref": "#/components/schemas/NZCodeSetsAttendanceCode"
                    },
                    "AttendanceDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date the attendance is being record for."
                    },
                    "SchedulePeriod": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "StartTime": {
                      "type": "string",
                      "format": "time",
                      "description": "The Start Time of the students attendance for the provided Attendance Date. Mandatory for attendance records with a type of 'Ad Hoc'."
                    },
                    "EndTime": {
                      "type": "string",
                      "format": "time",
                      "description": "The End Time of the students attendance for the provided Attendance Date. Mandatory for attendance records with a type of 'Ad Hoc'."
                    },
                    "SubmissionDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date the students attendance for this date and time/period was submitted."
                    },
                    "Note": {
                      "type": "string",
                      "description": "Free text note about the students attendance for the provided date and time/period."
                    },
                    "RecordAudit": {
                      "$ref": "#/components/schemas/RecordAudit",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "createStudentAttendanceTimeLists": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentAttendanceTimeList"
        ],
        "title": "StudentAttendanceTimeLists",
        "description": "Wrapper around an array of StudentAttendanceTimeLists",
        "properties": {
          "StudentAttendanceTimeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStudentAttendanceTimeList"
            },
            "description": "<p>This object provides more detail about the attendance spans for a single student during the day: it provides more detailed information than the single TimeIn and TimeOut elements in StudentDailyAttendance.</p>"
          }
        }
      },
      "createStudentContactPersonal": {
        "title": "StudentContactPersonal",
        "description": "Information about a Student's whānau member.",
        "required": [
          "PersonInfo",
          "StudentContactPersonalLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentContactPersonalRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentContactPersonalLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "PersonInfo": {
            "description": "Personal Information collected about the StudentContact, when that contact is a member of the Student's whānau.",
            "type": "object",
            "required": [
              "Name"
            ],
            "additionalProperties": false,
            "properties": {
              "Name": {
                "description": "A name used by the person",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Title": {
                    "type": "string",
                    "description": "A title or prefix associated with the name."
                  },
                  "FamilyName": {
                    "type": "string",
                    "description": "Also known as Last Name, although some cultures may not present a family name as the last name."
                  },
                  "GivenName": {
                    "type": "string",
                    "description": "Also known as First Name, although some cultures may not present this name as the first element in a name. May contain a composite of all given names."
                  },
                  "MiddleName": {
                    "type": "string",
                    "description": "Where more than one Given Name, these may be combined in one composite field or else populated in several elements."
                  },
                  "SecondMiddleName": {
                    "type": "string",
                    "description": "Middle names can be sent altogether in one element or if the source system has more than one middle name field, they can be spread across two elements. SecondMiddleName will either contain no values, or it will hold the person's second and subsequent middle names while MiddleName will hold the person's first middle name."
                  },
                  "FamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredFamilyName": {
                    "type": "string",
                    "description": "A preferred version of the Family Name. Note:A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "PreferredFamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredGivenName": {
                    "type": "string",
                    "description": "A preferred version of the Given Name. Note: A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "Suffix": {
                    "type": "string",
                    "description": "Textual suffix like PHD, JP, BSc."
                  },
                  "FullName": {
                    "type": "string",
                    "description": "A combination of all name elements as one composite text element"
                  },
                  "Type": {
                    "$ref": "#/components/schemas/NZCodeSetsNameUsageType"
                  },
                  "IsVerified": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  }
                }
              },
              "Address": {
                "description": "The person's address(es) - one or more addresses.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Physical": {
                    "description": "The person or organisation's physical address",
                    "type": "object",
                    "required": [
                      "Line1"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Type": {
                        "$ref": "#/components/schemas/NZCodeSetsAddressType"
                      },
                      "Line1": {
                        "type": "string",
                        "description": "Address line 1."
                      },
                      "Line2": {
                        "type": "string",
                        "description": "Address line 2."
                      },
                      "Line3": {
                        "type": "string",
                        "description": "Address line 3."
                      },
                      "Line4": {
                        "type": "string",
                        "description": "Address line 4."
                      },
                      "Suburb": {
                        "type": "string",
                        "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                      },
                      "City": {
                        "type": "string",
                        "description": "The city part of the address."
                      },
                      "StateProvince": {
                        "type": "string",
                        "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                      },
                      "Country": {
                        "type": "string",
                        "description": "The country code."
                      },
                      "PostalCode": {
                        "type": "string",
                        "description": "The ZIP/postal code."
                      },
                      "GridLocation": {
                        "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                        "type": "object",
                        "required": [
                          "Latitude",
                          "Longitude"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "Latitude": {
                            "type": "number",
                            "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                            "minimum": -90,
                            "maximum": 90
                          },
                          "Longitude": {
                            "type": "number",
                            "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                            "minimum": -180,
                            "maximum": 180
                          }
                        }
                      },
                      "StatisticalAreaList": {
                        "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                        "type": "object",
                        "required": [
                          "StatisticalArea"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "StatisticalArea": {
                            "type": "array",
                            "items": {
                              "description": "A particular statistical area defined by Statistics New Zealand.",
                              "type": "object",
                              "required": [
                                "Code",
                                "SpatialUnitType"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "SpatialUnitType": {
                                  "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                },
                                "Code": {
                                  "type": "string",
                                  "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Postal": {
                    "description": "The person or organisation's postal address",
                    "type": "object",
                    "required": [
                      "Line1"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Type": {
                        "$ref": "#/components/schemas/NZCodeSetsAddressType"
                      },
                      "Line1": {
                        "type": "string",
                        "description": "Address line 1."
                      },
                      "Line2": {
                        "type": "string",
                        "description": "Address line 2."
                      },
                      "Line3": {
                        "type": "string",
                        "description": "Address line 3."
                      },
                      "Line4": {
                        "type": "string",
                        "description": "Address line 4."
                      },
                      "Suburb": {
                        "type": "string",
                        "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                      },
                      "City": {
                        "type": "string",
                        "description": "The city part of the address."
                      },
                      "StateProvince": {
                        "type": "string",
                        "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                      },
                      "Country": {
                        "type": "string",
                        "description": "The country code."
                      },
                      "PostalCode": {
                        "type": "string",
                        "description": "The ZIP/postal code."
                      },
                      "GridLocation": {
                        "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                        "type": "object",
                        "required": [
                          "Latitude",
                          "Longitude"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "Latitude": {
                            "type": "number",
                            "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                            "minimum": -90,
                            "maximum": 90
                          },
                          "Longitude": {
                            "type": "number",
                            "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                            "minimum": -180,
                            "maximum": 180
                          }
                        }
                      },
                      "StatisticalAreaList": {
                        "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                        "type": "object",
                        "required": [
                          "StatisticalArea"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "StatisticalArea": {
                            "type": "array",
                            "items": {
                              "description": "A particular statistical area defined by Statistics New Zealand.",
                              "type": "object",
                              "required": [
                                "Code",
                                "SpatialUnitType"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "SpatialUnitType": {
                                  "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                },
                                "Code": {
                                  "type": "string",
                                  "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Email": {
                "description": "The person's e-mail address(es) - one or more emails.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Personal": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "required": [
                      "Address"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  },
                  "Work": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "required": [
                      "Address"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  }
                }
              },
              "Phone": {
                "description": "The person's phone number(s) - one or more phone numbers.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Home": {
                    "description": "A person's home number.",
                    "type": "object",
                    "required": [
                      "Number"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "Number": {
                        "type": "string",
                        "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                      },
                      "Extension": {
                        "type": "string",
                        "description": "Phone number extension."
                      }
                    }
                  },
                  "Work": {
                    "description": "A person's work number.",
                    "type": "object",
                    "required": [
                      "Number"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "Number": {
                        "type": "string",
                        "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                      },
                      "Extension": {
                        "type": "string",
                        "description": "Phone number extension."
                      }
                    }
                  },
                  "Mobile": {
                    "description": "A person's mobile number.",
                    "type": "object",
                    "required": [
                      "Number"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "Number": {
                        "type": "string",
                        "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                      },
                      "Extension": {
                        "type": "string",
                        "description": "Phone number extension."
                      }
                    }
                  }
                }
              },
              "PersonPhoto": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "MedicalNeedList": {
                "description": "A list of a persons known medical needs.",
                "type": "object",
                "required": [
                  "MedicalNeed"
                ],
                "additionalProperties": false,
                "properties": {
                  "MedicalNeed": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ObjectReference"
                    }
                  }
                }
              }
            }
          },
          "HealthcareServiceInfo": {
            "description": "Information about the StudentContact, when that contact is a healthcare service. Details about the actual healthcare pratitioner are kept in the PersonInfo fields.",
            "type": "object",
            "required": [
              "OrganisationName",
              "OrganisationPhoneNum",
              "Type"
            ],
            "additionalProperties": false,
            "properties": {
              "OrganisationName": {
                "type": "string",
                "description": "The name of the healthcare service, eg: 'Martinborough Health Centre'"
              },
              "OrganisationPhoneNum": {
                "type": "string",
                "description": "The name phone number of the healthcare service"
              },
              "Notes": {
                "type": "string",
                "description": "Who at the healthservice is the Student's regular e.g. 'Dr Phillips'"
              },
              "Type": {
                "$ref": "#/components/schemas/NZCodeSetsHealthcareServiceType"
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createStudentContactPersonals": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentContactPersonal"
        ],
        "title": "StudentContactPersonals",
        "description": "Wrapper around an array of StudentContactPersonals",
        "properties": {
          "StudentContactPersonal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStudentContactPersonal"
            },
            "description": "Information about a Student's whānau member."
          }
        }
      },
      "createStudentContactRelationship": {
        "title": "StudentContactRelationship",
        "description": "<p>A relationship between a person who is part of a Student's whānau and that Student. Relationship properties include the relationship type and roles played by the student contact in respect of the student.</p> <p>Individual details about the student and student contact are provided in other data objects - StudentPersonal and StudentContactPersonal respectively.</p>",
        "required": [
          "Organisation",
          "Relationship",
          "StartDate",
          "Status",
          "Student",
          "StudentContact",
          "StudentContactRelationshipLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentContactRelationshipRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentContactRelationshipLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsStudentContactRelationshipStatus",
            "readOnly": true
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the relationship between the student and contact was recorded."
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the relationship between the student and contact was removed."
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "StudentContact": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "Relationship": {
            "description": "Defines the relationship of the contact to the student.",
            "type": "object",
            "required": [
              "Code"
            ],
            "additionalProperties": false,
            "properties": {
              "Code": {
                "$ref": "#/components/schemas/NZCodeSetsRelationshipToStudent"
              },
              "OtherTypeDescription": {
                "type": "string",
                "description": "A free text description of relationship type, where Relationship To Student Type is set to ‘Other’, eg ‘Au-pair’, ‘Neighbour’"
              }
            }
          },
          "LanguageUsed": {
            "$ref": "#/components/schemas/NZCodeSetsLanguage"
          },
          "HouseholdList": {
            "description": "A list of one or more household identifiers indicating the households associated with this relationship.",
            "type": "object",
            "required": [
              "HouseholdId"
            ],
            "additionalProperties": false,
            "properties": {
              "HouseholdId": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LocalId"
                }
              }
            }
          },
          "ContactFlags": {
            "description": "Contains characteristics of the contact person's role with the Student. At least one of the flags must be populated with a 'Yes' value.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ParentLegalGuardian": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "LivesWith": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "AccessToRecords": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "ReceivesAssessmentReport": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "EmergencyContact": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "CivilEmergencyContact": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "CivilDefenceEmergencyContact": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "DisciplinaryContact": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "AttendanceContact": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "PrimaryCareProvider": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "FeesBilling": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "FeesAccess": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "FamilyMail": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "CourtOrder": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "HealthContact": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              }
            }
          },
          "ContactSequence": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295,
            "description": "Number indicating the order in which the student contact should be contacted."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createStudentContactRelationships": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentContactRelationship"
        ],
        "title": "StudentContactRelationships",
        "description": "Wrapper around an array of StudentContactRelationships",
        "properties": {
          "StudentContactRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStudentContactRelationship"
            },
            "description": "<p>A relationship between a person who is part of a Student's whānau and that Student. Relationship properties include the relationship type and roles played by the student contact in respect of the student.</p> <p>Individual details about the student and student contact are provided in other data objects - StudentPersonal and StudentContactPersonal respectively.</p>"
          }
        }
      },
      "createStudentLearningSupport": {
        "title": "StudentLearningSupport",
        "description": "<p>Provides information about a student's learning support.</p>",
        "required": [
          "LearnerStatus",
          "Organisation",
          "Student",
          "StudentConsentList",
          "StudentLearningSupportLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentLearningSupportRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentLearningSupportLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "LearnerStatus": {
            "$ref": "#/components/schemas/NZCodeSetsLearningSupportLearnerStatus"
          },
          "LearnerArchivedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the learner's learning support status was changed from Active to Archived."
          },
          "StudentConsentList": {
            "description": "A list of the consents the student has provided / not provided in regards to learning support, e.g. Cluster Sharing COnsent, Recieve Service Consent.",
            "type": "object",
            "required": [
              "StudentConsent"
            ],
            "additionalProperties": false,
            "properties": {
              "StudentConsent": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "DyslexiaScreeningTool": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "OtherScreening": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "OtherScreeningDetail": {
            "type": "string",
            "description": "Free text describing any other type of screening the student has undergone. Mandatory if 'OtherScreening' = 'Y'."
          },
          "AdolescentHealthScreening": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "NonAttendance": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "NewToNewZealand": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "NumberOfSchoolChanges": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "B4SchoolCheck": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "OtherFamilyContext": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "OtherFamilyContextDetail": {
            "type": "string",
            "description": "Additional free text detail about any family context that pertains to the student and their needs. Mandatory if OtherStudentContext = 'Y'."
          },
          "StudentVoiceList": {
            "description": "A list of the student's or their whānau's voice about their learning support in regards to the student 's interests, goals, and voice (comments, opinions).",
            "type": "object",
            "required": [
              "StudentVoice"
            ],
            "additionalProperties": false,
            "properties": {
              "StudentVoice": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "SupportNeedList": {
            "description": "A list of learning support needs that have been identified for the student.",
            "type": "object",
            "required": [
              "SupportNeed"
            ],
            "additionalProperties": false,
            "properties": {
              "SupportNeed": {
                "type": "array",
                "items": {
                  "description": "A learning support need that has been identified for the student.",
                  "type": "object",
                  "required": [
                    "Need"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "Need": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "ResponseList": {
                      "description": "A list of responses made about a learning support need.",
                      "type": "object",
                      "required": [
                        "Response"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "Response": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ObjectReference"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "LearnerInterests": {
            "type": "string",
            "description": "Free text that describes the interests a learner has that pertains to this wellbeing Characteristic."
          },
          "LearnerWhanauGoal": {
            "type": "string",
            "description": "Free text describing any goals the student wants to achieve, or any goals their whānau want them to achieve that pertain to this wellbeing characteristic."
          },
          "LearnerWhanauVoice": {
            "type": "string",
            "description": "Free text capturing the learners and/or their whānaus opinions and point of view in regards to this wellbeing characteristic."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createStudentLearningSupports": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentLearningSupport"
        ],
        "title": "StudentLearningSupports",
        "description": "Wrapper around an array of StudentLearningSupports",
        "properties": {
          "StudentLearningSupport": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStudentLearningSupport"
            },
            "description": "<p>Provides information about a student's learning support.</p>"
          }
        }
      },
      "createStudentLearningSupportResponse": {
        "title": "StudentLearningSupportResponse",
        "description": "<p>Provides information about a response provided for a students learning support need.</p>",
        "required": [
          "LearningSupportNeed",
          "Organisation",
          "RecordAudit",
          "ResponseType",
          "ReviewDate",
          "Student",
          "StudentLearningSupportResponseLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentLearningSupportResponseRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentLearningSupportResponseLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "LearningSupportNeed": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "ResponseType": {
            "$ref": "#/components/schemas/NZCodeSetsLearningSupportResponseType"
          },
          "ResponseDetail": {
            "$ref": "#/components/schemas/NZCodeSetsLearningSupportResponseDetail"
          },
          "ReviewDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the response is due to be reviewed."
          },
          "ResponseGoals": {
            "type": "string",
            "description": "The goals of the response in relation to the student's learning support need."
          },
          "ResponseNote": {
            "type": "string",
            "description": "Free text notes about the response."
          },
          "NoteList": {
            "description": "A list of notes that have been written about the learning support response.",
            "type": "object",
            "required": [
              "Note"
            ],
            "additionalProperties": false,
            "properties": {
              "Note": {
                "type": "array",
                "items": {
                  "description": "A free text note about the associated subject matter.",
                  "type": "object",
                  "required": [
                    "CreatedBy",
                    "CreatedDateTime",
                    "Note"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "Note": {
                      "type": "string",
                      "description": "Free text note."
                    },
                    "CreatedDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the note was created."
                    },
                    "LastUpdatedDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the note was last updated."
                    },
                    "CreatedBy": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "LastUpdatedBy": {
                      "$ref": "#/components/schemas/ObjectReference"
                    }
                  }
                }
              }
            }
          },
          "ResponseDesc": {
            "type": "string",
            "description": "Free text description about the response type and detail. Mandatory when a response detail of 'Other' is selected."
          },
          "TierOfResponse": {
            "$ref": "#/components/schemas/NZCodeSetsLearningSupportResponseTier"
          },
          "ExternalResponse": {
            "description": "Additional information for an external response.",
            "type": "object",
            "required": [
              "Provider",
              "Status"
            ],
            "additionalProperties": false,
            "properties": {
              "Provider": {
                "$ref": "#/components/schemas/NZCodeSetsLearningSupportExternalProvider"
              },
              "ProviderDetail": {
                "type": "string",
                "description": "Additional information about a provider."
              },
              "Status": {
                "$ref": "#/components/schemas/NZCodeSetsLearningSupportExtResponseStatus"
              },
              "MOESpecialistService": {
                "$ref": "#/components/schemas/NZCodeSetsMoESpecialistService"
              },
              "FundedBy": {
                "$ref": "#/components/schemas/NZCodeSetsLearningSupportExternalFunder"
              },
              "FundedByDetail": {
                "type": "string",
                "description": "Additional detail about a funder."
              },
              "RequestMadeDate": {
                "type": "string",
                "format": "date-time",
                "description": "The date the request about funding was made."
              },
              "FundingStatus": {
                "$ref": "#/components/schemas/NZCodeSetsLearningSupportFundingStatus"
              },
              "FundingDeclinedReason": {
                "type": "string",
                "description": "The reason funding was declined."
              }
            }
          },
          "InternalResponse": {
            "description": "Additional information for an internal response.",
            "type": "object",
            "required": [
              "FundedBy",
              "ProvidedBy",
              "Status"
            ],
            "additionalProperties": false,
            "properties": {
              "ProvidedBy": {
                "$ref": "#/components/schemas/NZCodeSetsLearningSupportInternalProvider"
              },
              "ProvidedByName": {
                "type": "string",
                "description": "The name of the person providing the response. Mandatory to be provided when the ProvidedBy = 'Teacher'."
              },
              "Status": {
                "$ref": "#/components/schemas/NZCodeSetsLearningSupportIntResponseStatus"
              },
              "FundedBy": {
                "$ref": "#/components/schemas/NZCodeSetsLearningSupportInternalFunder"
              }
            }
          },
          "ReviewList": {
            "description": "A list of the reviews made about the response.",
            "type": "object",
            "required": [
              "Review"
            ],
            "additionalProperties": false,
            "properties": {
              "Review": {
                "type": "array",
                "items": {
                  "description": "A review of a support need response.",
                  "type": "object",
                  "required": [
                    "ReviewComments",
                    "ReviewDate",
                    "Reviewer"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "Reviewer": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "ReviewDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date of the review."
                    },
                    "ReviewComments": {
                      "type": "string",
                      "description": "Free text comment about the review."
                    },
                    "NextReviewDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date of the next review."
                    },
                    "AttachmentList": {
                      "description": "A list of attachments related to a learning support need response review.",
                      "type": "object",
                      "required": [
                        "Document"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "Document": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ObjectReference"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "AttachmentList": {
            "description": "A list of attachments associated to the learning support need response.",
            "type": "object",
            "required": [
              "Document"
            ],
            "additionalProperties": false,
            "properties": {
              "Document": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "CompletionDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the response was completed."
          },
          "Outcome": {
            "$ref": "#/components/schemas/NZCodeSetsLearningSupportResponseOutcome"
          },
          "OutcomeComment": {
            "type": "string",
            "description": "Free text comment about the outcome of the response made for the students learning support need."
          },
          "ClosureStatus": {
            "$ref": "#/components/schemas/NZCodeSetsLearningSupportResponseClosureStatus"
          },
          "ClosureStatusDetail": {
            "type": "string",
            "description": "Additional detail about the responses closure status."
          },
          "CompletionNote": {
            "type": "string",
            "description": "Free text notes about the completion of the response to the students learning support need."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createStudentLearningSupportResponses": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentLearningSupportResponse"
        ],
        "title": "StudentLearningSupportResponses",
        "description": "Wrapper around an array of StudentLearningSupportResponses",
        "properties": {
          "StudentLearningSupportResponse": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStudentLearningSupportResponse"
            },
            "description": "<p>Provides information about a response provided for a students learning support need.</p>"
          }
        }
      },
      "createStudentPersonal": {
        "title": "StudentPersonal",
        "description": "Contains all the personal information related to the student.",
        "required": [
          "NationalStudentNumber",
          "PersonInfo",
          "StudentPersonalLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentPersonalRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentPersonalLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "NationalStudentNumber": {
            "description": "The unique identifier allocated to every student in New Zealand, also known as the NSN.",
            "type": "string",
            "pattern": "^[0-9]{1,10}$"
          },
          "NZQAStudentId": {
            "type": "string",
            "description": "NZQA's unique identifier for a student who has been registered for assessments to be conducted against the NZQA framework to achieve unit/achievement standards and national qualifications."
          },
          "FirstNZSchoolingDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date a student first ever started schooling in New Zealand. This field is used to establish most students’ Funding Year Level."
          },
          "EarlyChildhoodEducation": {
            "description": "The type of early childhood education the student received before enrolling in their first school.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Type": {
                "$ref": "#/components/schemas/NZCodeSetsEarlyChildhoodEducationType"
              },
              "HoursAttended": {
                "type": "integer",
                "minimum": -2147483648,
                "maximum": 2147483647,
                "description": "The total number of hours of early childhood education attended, prior to enrolling in their first school."
              }
            }
          },
          "PersonInfo": {
            "description": "Personal Information",
            "type": "object",
            "required": [
              "Name",
              "Demographics"
            ],
            "additionalProperties": false,
            "properties": {
              "Name": {
                "description": "A name used by the person",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Title": {
                    "type": "string",
                    "description": "A title or prefix associated with the name."
                  },
                  "FamilyName": {
                    "type": "string",
                    "description": "Also known as Last Name, although some cultures may not present a family name as the last name."
                  },
                  "GivenName": {
                    "type": "string",
                    "description": "Also known as First Name, although some cultures may not present this name as the first element in a name. May contain a composite of all given names."
                  },
                  "MiddleName": {
                    "type": "string",
                    "description": "Where more than one Given Name, these may be combined in one composite field or else populated in several elements."
                  },
                  "SecondMiddleName": {
                    "type": "string",
                    "description": "Middle names can be sent altogether in one element or if the source system has more than one middle name field, they can be spread across two elements. SecondMiddleName will either contain no values, or it will hold the person's second and subsequent middle names while MiddleName will hold the person's first middle name."
                  },
                  "FamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredFamilyName": {
                    "type": "string",
                    "description": "A preferred version of the Family Name. Note:A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "PreferredFamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredGivenName": {
                    "type": "string",
                    "description": "A preferred version of the Given Name. Note: A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "Suffix": {
                    "type": "string",
                    "description": "Textual suffix like PHD, JP, BSc."
                  },
                  "FullName": {
                    "type": "string",
                    "description": "A combination of all name elements as one composite text element"
                  },
                  "Type": {
                    "$ref": "#/components/schemas/NZCodeSetsNameUsageType"
                  },
                  "IsVerified": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  }
                },
                "required": [
                  "FamilyName",
                  "GivenName"
                ]
              },
              "OtherNameList": {
                "description": "Previous, alternate or other names or aliases associated with the person.",
                "type": "object",
                "required": [
                  "Name"
                ],
                "additionalProperties": false,
                "properties": {
                  "Name": {
                    "type": "array",
                    "items": {
                      "description": "Extension of BaseNameType including name verification data",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Title": {
                          "type": "string",
                          "description": "A title or prefix associated with the name."
                        },
                        "FamilyName": {
                          "type": "string",
                          "description": "Also known as Last Name, although some cultures may not present a family name as the last name."
                        },
                        "GivenName": {
                          "type": "string",
                          "description": "Also known as First Name, although some cultures may not present this name as the first element in a name. May contain a composite of all given names."
                        },
                        "MiddleName": {
                          "type": "string",
                          "description": "Where more than one Given Name, these may be combined in one composite field or else populated in several elements."
                        },
                        "SecondMiddleName": {
                          "type": "string",
                          "description": "Middle names can be sent altogether in one element or if the source system has more than one middle name field, they can be spread across two elements. SecondMiddleName will either contain no values, or it will hold the person's second and subsequent middle names while MiddleName will hold the person's first middle name."
                        },
                        "FamilyNameFirst": {
                          "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                        },
                        "PreferredFamilyName": {
                          "type": "string",
                          "description": "A preferred version of the Family Name. Note:A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                        },
                        "PreferredFamilyNameFirst": {
                          "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                        },
                        "PreferredGivenName": {
                          "type": "string",
                          "description": "A preferred version of the Given Name. Note: A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                        },
                        "Suffix": {
                          "type": "string",
                          "description": "Textual suffix like PHD, JP, BSc."
                        },
                        "FullName": {
                          "type": "string",
                          "description": "A combination of all name elements as one composite text element"
                        },
                        "Type": {
                          "$ref": "#/components/schemas/NZCodeSetsNameUsageType"
                        },
                        "IsVerified": {
                          "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                        },
                        "Verification": {
                          "description": "The verification event that verified the person's name.",
                          "type": "object",
                          "required": [
                            "IsConfirmed",
                            "Source"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "Source": {
                              "$ref": "#/components/schemas/NZCodeSetsVerificationSource"
                            },
                            "DocumentSerialNumber": {
                              "type": "string",
                              "description": "The serial number on the document that was used to verify the name or birthdate."
                            },
                            "DocumentExpiryDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The expiry date on the document that was used to verify the name or birthdate."
                            },
                            "IsConfirmed": {
                              "type": "boolean",
                              "description": "If true then verification has been confirmed by MoE."
                            },
                            "Timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date & time that the VerificationEvent took place."
                            },
                            "Provider": {
                              "$ref": "#/components/schemas/ObjectReference"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Demographics": {
                "description": "Details of the person’s demographic properties",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "BirthDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The person's date of birth."
                  },
                  "Gender": {
                    "$ref": "#/components/schemas/NZCodeSetsGender"
                  },
                  "LanguageList": {
                    "description": "List of languages an individual uses to communicate.",
                    "type": "object",
                    "required": [
                      "Language"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Language": {
                        "type": "array",
                        "items": {
                          "description": "A language that an individual uses to communicate.",
                          "type": "object",
                          "required": [
                            "Code"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "Code": {
                              "$ref": "#/components/schemas/NZCodeSetsLanguage"
                            },
                            "Usage": {
                              "$ref": "#/components/schemas/NZCodeSetsLanguageUsage"
                            },
                            "Dialect": {
                              "type": "string",
                              "description": "Specific dialect of a person's language."
                            },
                            "ProficiencyList": {
                              "description": "A list of the person's proficiency in the language in regards to speaking, reading and writing.",
                              "type": "object",
                              "required": [
                                "Proficiency"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "Proficiency": {
                                  "type": "array",
                                  "items": {
                                    "description": "The person's proficiency in the language in regards to speaking, reading and writing.",
                                    "type": "object",
                                    "required": [
                                      "Level",
                                      "Type"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                      "Level": {
                                        "$ref": "#/components/schemas/NZCodeSetsLanguageProficiencyLevel"
                                      },
                                      "Type": {
                                        "$ref": "#/components/schemas/NZCodeSetsLanguageProficiencyType"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "EthnicityList": {
                    "description": "One or more ethnic groups with which the person identifies.",
                    "type": "object",
                    "required": [
                      "Ethnicity"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Ethnicity": {
                        "type": "array",
                        "items": {
                          "description": "An ethnic group with which the person identifies, and if there is more than one, their order of preference.",
                          "type": "object",
                          "required": [
                            "Code"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": -2147483648,
                              "maximum": 2147483647,
                              "description": "The order of preference for the person's ethnicity."
                            },
                            "Code": {
                              "$ref": "#/components/schemas/NZCodeSetsEthnicity"
                            }
                          }
                        }
                      }
                    }
                  },
                  "IwiAffiliationList": {
                    "description": "A list of one or more iwi with which the person has an affiliation.",
                    "type": "object",
                    "required": [
                      "Iwi"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Iwi": {
                        "type": "array",
                        "items": {
                          "description": "An iwi the person is affiliated to.",
                          "type": "object",
                          "required": [
                            "Code"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "Code": {
                              "$ref": "#/components/schemas/NZCodeSetsIwi"
                            },
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": -2147483648,
                              "maximum": 2147483647,
                              "description": "Indicates the persons preferred Iwi. The order of preference for the person's Iwi. '1' is their first preference. If left NULL means no preference is set and defers to any Iwi with a preference of '1'."
                            },
                            "HapuAffiliationList": {
                              "description": "A list of one or more affiliations of a person with a Hapū within an Iwi.",
                              "type": "object",
                              "required": [
                                "Hapu"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "Hapu": {
                                  "type": "array",
                                  "items": {
                                    "description": "An hapu the person is affiliated to.",
                                    "type": "object",
                                    "required": [
                                      "HapuName"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                      "HapuName": {
                                        "type": "string",
                                        "description": "The name of a Hapū that the person is affiliated with."
                                      },
                                      "PreferenceOrderNumber": {
                                        "type": "integer",
                                        "minimum": -2147483648,
                                        "maximum": 2147483647,
                                        "description": "Indicates the persons preferred Hapu. The order of preference for the person's Hapu. '1' is their first preference. If left NULL means no preference is set and defers to any Hapu with a preference of '1'."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "BirthDate",
                  "EthnicityList",
                  "Gender"
                ]
              },
              "Address": {
                "description": "The person's address(es) - one or more addresses.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Physical": {
                    "description": "The person or organisation's physical address",
                    "type": "object",
                    "required": [
                      "Line1"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Type": {
                        "$ref": "#/components/schemas/NZCodeSetsAddressType"
                      },
                      "Line1": {
                        "type": "string",
                        "description": "Address line 1."
                      },
                      "Line2": {
                        "type": "string",
                        "description": "Address line 2."
                      },
                      "Line3": {
                        "type": "string",
                        "description": "Address line 3."
                      },
                      "Line4": {
                        "type": "string",
                        "description": "Address line 4."
                      },
                      "Suburb": {
                        "type": "string",
                        "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                      },
                      "City": {
                        "type": "string",
                        "description": "The city part of the address."
                      },
                      "StateProvince": {
                        "type": "string",
                        "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                      },
                      "Country": {
                        "type": "string",
                        "description": "The country code."
                      },
                      "PostalCode": {
                        "type": "string",
                        "description": "The ZIP/postal code."
                      },
                      "GridLocation": {
                        "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                        "type": "object",
                        "required": [
                          "Latitude",
                          "Longitude"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "Latitude": {
                            "type": "number",
                            "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                            "minimum": -90,
                            "maximum": 90
                          },
                          "Longitude": {
                            "type": "number",
                            "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                            "minimum": -180,
                            "maximum": 180
                          }
                        }
                      },
                      "StatisticalAreaList": {
                        "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                        "type": "object",
                        "required": [
                          "StatisticalArea"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "StatisticalArea": {
                            "type": "array",
                            "items": {
                              "description": "A particular statistical area defined by Statistics New Zealand.",
                              "type": "object",
                              "required": [
                                "Code",
                                "SpatialUnitType"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "SpatialUnitType": {
                                  "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                },
                                "Code": {
                                  "type": "string",
                                  "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Postal": {
                    "description": "The person or organisation's postal address",
                    "type": "object",
                    "required": [
                      "Line1"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Type": {
                        "$ref": "#/components/schemas/NZCodeSetsAddressType"
                      },
                      "Line1": {
                        "type": "string",
                        "description": "Address line 1."
                      },
                      "Line2": {
                        "type": "string",
                        "description": "Address line 2."
                      },
                      "Line3": {
                        "type": "string",
                        "description": "Address line 3."
                      },
                      "Line4": {
                        "type": "string",
                        "description": "Address line 4."
                      },
                      "Suburb": {
                        "type": "string",
                        "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                      },
                      "City": {
                        "type": "string",
                        "description": "The city part of the address."
                      },
                      "StateProvince": {
                        "type": "string",
                        "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                      },
                      "Country": {
                        "type": "string",
                        "description": "The country code."
                      },
                      "PostalCode": {
                        "type": "string",
                        "description": "The ZIP/postal code."
                      },
                      "GridLocation": {
                        "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                        "type": "object",
                        "required": [
                          "Latitude",
                          "Longitude"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "Latitude": {
                            "type": "number",
                            "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                            "minimum": -90,
                            "maximum": 90
                          },
                          "Longitude": {
                            "type": "number",
                            "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                            "minimum": -180,
                            "maximum": 180
                          }
                        }
                      },
                      "StatisticalAreaList": {
                        "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                        "type": "object",
                        "required": [
                          "StatisticalArea"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "StatisticalArea": {
                            "type": "array",
                            "items": {
                              "description": "A particular statistical area defined by Statistics New Zealand.",
                              "type": "object",
                              "required": [
                                "Code",
                                "SpatialUnitType"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "SpatialUnitType": {
                                  "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                },
                                "Code": {
                                  "type": "string",
                                  "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Email": {
                "description": "The person's e-mail address(es) - one or more emails.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Personal": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "required": [
                      "Address"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  },
                  "Work": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "required": [
                      "Address"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  }
                }
              },
              "Phone": {
                "description": "The person's phone number(s) - one or more phone numbers.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Home": {
                    "description": "A person's home number.",
                    "type": "object",
                    "required": [
                      "Number"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "Number": {
                        "type": "string",
                        "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                      },
                      "Extension": {
                        "type": "string",
                        "description": "Phone number extension."
                      }
                    }
                  },
                  "Work": {
                    "description": "A person's work number.",
                    "type": "object",
                    "required": [
                      "Number"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "Number": {
                        "type": "string",
                        "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                      },
                      "Extension": {
                        "type": "string",
                        "description": "Phone number extension."
                      }
                    }
                  },
                  "Mobile": {
                    "description": "A person's mobile number.",
                    "type": "object",
                    "required": [
                      "Number"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "Number": {
                        "type": "string",
                        "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                      },
                      "Extension": {
                        "type": "string",
                        "description": "Phone number extension."
                      }
                    }
                  }
                }
              },
              "PersonPhoto": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "MedicalNeedList": {
                "description": "A list of a persons known medical needs.",
                "type": "object",
                "required": [
                  "MedicalNeed"
                ],
                "additionalProperties": false,
                "properties": {
                  "MedicalNeed": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ObjectReference"
                    }
                  }
                }
              }
            }
          },
          "BiographicChangeReason": {
            "$ref": "#/components/schemas/NZCodeSetsBiographicChangeReason"
          },
          "CustodyNote": {
            "type": "string",
            "description": "Notes about a students care and custody status."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          },
          "CaregiverList": {
            "description": "<p>Student caregiver details de-normalised from StudentContactPersonal for sLSR on non-SMS integrated schools.</p>",
            "type": "object",
            "required": [
              "Caregiver"
            ],
            "additionalProperties": false,
            "properties": {
              "Caregiver": {
                "description": "<p>Individual caregiver details, de-normalised from StudentContactPersonal for sLSR on non-SMS integrated schools.</p>",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "RelationshipToStudentType"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "EmailAddress": {
                      "type": "string",
                      "description": "Caregiver's email address"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "Caregiver's first name"
                    },
                    "LastName": {
                      "type": "string",
                      "description": "Caregiver's last name"
                    },
                    "PhoneNumber": {
                      "type": "string",
                      "description": "Caregiver's phone number"
                    },
                    "RelationshipToStudentType": {
                      "$ref": "#/components/schemas/NZCodeSetsRelationshipToStudent"
                    }
                  }
                }
              }
            },
            "readOnly": true
          },
          "StudentProviderEnrolment": {
            "type": "object",
            "description": "<p>Partial <a href=\"#tag/StudentProviderEnrolment\">StudentProviderEnrolment</a> object, denoting enrolment info required for the StudentPersonal upon creation</p>",
            "required": [
              "EntryDate",
              "StudentProviderEnrolmentLocalId"
            ],
            "additionalProperties": false,
            "properties": {
              "StudentProviderEnrolmentRefId": {
                "$ref": "#/components/schemas/RefId"
              },
              "StudentProviderEnrolmentLocalId": {
                "$ref": "#/components/schemas/LocalId"
              },
              "EntryDate": {
                "type": "string",
                "format": "date-time",
                "x-displayAs": "date",
                "description": "<p>The date from when this enrolment is ACTIVE. The date of the student’s first attendance at the provider. If future dated, then the intended first attendance date of the enrolment.</p>"
              },
              "ExitDate": {
                "type": "string",
                "format": "date-time",
                "x-displayAs": "date",
                "description": "<p>The date of a student’s last attendance at the provider.</p>"
              },
              "ECEEnrolment": {
                "type": "object",
                "required": [
                  "ECEYearLevel"
                ],
                "additionalProperties": false,
                "properties": {
                  "ECEYearLevel": {
                    "$ref": "#/components/schemas/NZCodeSetsECEYearLevel"
                  }
                }
              },
              "SchoolEnrolment": {
                "type": "object",
                "required": [
                  "YearLevel",
                  "FundingYearLevel"
                ],
                "additionalProperties": false,
                "properties": {
                  "YearLevel": {
                    "type": "integer",
                    "description": "<p>Represents the year level at which the student is considered to be predominantly taught. For example – Year 10, Year 11. Can only contain the values 1 through to 13 inclusive.</p>",
                    "minimum": 1,
                    "maximum": 13
                  },
                  "FundingYearLevel": {
                    "type": "integer",
                    "description": "<p>Indicates the number of years for which funding has been provided by MoE. Must only contain values from 0 through to 15 inclusive.</p>",
                    "minimum": 0,
                    "maximum": 15
                  }
                }
              }
            }
          }
        }
      },
      "createStudentPersonals": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentPersonal"
        ],
        "title": "StudentPersonals",
        "description": "Wrapper around an array of StudentPersonals",
        "properties": {
          "StudentPersonal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStudentPersonal"
            },
            "description": "Contains all the personal information related to the student."
          }
        }
      },
      "createStudentProviderEnrolment": {
        "title": "StudentProviderEnrolment",
        "description": "<p>A student's association with an education provider for the purpose of receiving educational servics.</p> <p>Provider enrolments span multiple years with the ProviderEnrolment containing one or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>",
        "required": [
          "EntryDate",
          "Provider",
          "Student",
          "StudentId",
          "Status",
          "StudentProviderEnrolmentLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentProviderEnrolmentRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentProviderEnrolmentLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "Provider": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "StudentId": {
            "type": "string",
            "description": "A unique identifier assigned to a Student for a period of enrolment by a provider."
          },
          "EntryDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date from when this enrolment is ACTIVE. The date of the student’s first attendance at the provider. If future dated, then the intended first attendance date of the enrolment."
          },
          "ExitDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of a student’s last attendance at the provider."
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsProviderEnrolmentStatus",
            "readOnly": true
          },
          "Exit": {
            "description": "Details of the reasons, and interventions leading up to the student's enrolment being terminated.",
            "type": "object",
            "required": [
              "Reason"
            ],
            "additionalProperties": false,
            "properties": {
              "Reason": {
                "$ref": "#/components/schemas/NZCodeSetsEnrolmentExitType"
              },
              "PostSchoolActivity": {
                "$ref": "#/components/schemas/NZCodeSetsPostSchoolActivity"
              },
              "InterventionList": {
                "description": "A list of references to Wellbeing Event, Response & Appeal data objects, that record the process of terminating a students enrolment.",
                "type": "object",
                "required": [
                  "Intervention"
                ],
                "additionalProperties": false,
                "properties": {
                  "Intervention": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ObjectReference"
                    }
                  }
                }
              },
              "PotentialDestinationSchoolList": {
                "description": "List of potential destination schools for the departing student.",
                "type": "object",
                "required": [
                  "School"
                ],
                "additionalProperties": false,
                "properties": {
                  "School": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/OrganisationObjectReference"
                    }
                  }
                }
              }
            }
          },
          "ECEEducationHistoryList": {
            "description": "The list of the types of early childhood education the parent told a primary school that the student received and the hours per week and/or day the student attended.",
            "type": "object",
            "required": [
              "ECEType"
            ],
            "additionalProperties": false,
            "properties": {
              "ECEType": {
                "type": "array",
                "items": {
                  "description": "History of a type of early childhood education the student received and the hours per week and/or day the student attended.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "Type": {
                      "$ref": "#/components/schemas/NZCodeSetsEarlyChildhoodEducationType"
                    },
                    "HoursPerDayAttended": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "description": "The number of hours per day the student attended this ECE Type."
                    },
                    "HoursPerWeekAttended": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "description": "The number of hours per week the student attended this ECE Type."
                    }
                  }
                }
              }
            }
          },
          "EarlyChildhoodEnrolment": {
            "description": "Properties of an enrolment in an early childhood service (WiP).",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ECEYearLevel": {
                "$ref": "#/components/schemas/NZCodeSetsECEYearLevel"
              },
              "Curriculum": {
                "$ref": "#/components/schemas/NZCodeSetsCurriculum"
              }
            }
          },
          "SchoolEnrolmentList": {
            "description": "Properties of an enrolment in a school",
            "type": "object",
            "required": [
              "SchoolEnrolment"
            ],
            "additionalProperties": false,
            "properties": {
              "SchoolEnrolment": {
                "type": "array",
                "items": {
                  "description": "Defines information related to a student's enrolment at a school education Provider for a particular academic year (or part thereof)",
                  "type": "object",
                  "required": [
                    "Curriculum",
                    "MembershipType"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "SchoolEnrolmentRefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "SchoolEnrolmentLocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "SchoolCalendarYear": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 9999,
                      "description": "School year for which this enrolment is applicable, expressed as the four-digit year in which the school year ends (eg 2018)."
                    },
                    "StartDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date the student started at the school."
                    },
                    "MembershipType": {
                      "$ref": "#/components/schemas/NZCodeSetsSchoolEnrolmentType"
                    },
                    "YearLevel": {
                      "type": "integer",
                      "description": "Represents the year level at which the student is considered to be predominantly taught. For example – Year 10, Year 11. Can only contain the values 1 through to 13 inclusive.",
                      "minimum": 1,
                      "maximum": 13
                    },
                    "FTE": {
                      "type": "number",
                      "description": "Full-time equivalent numeric value of the student's course load during this enrollment, expressed in decimal form, where 1.00 represents a full-time enrolment.",
                      "minimum": 0,
                      "maximum": 1
                    },
                    "FundingType": {
                      "$ref": "#/components/schemas/NZCodeSetsStudentFundingType"
                    },
                    "FundingYearLevel": {
                      "type": "integer",
                      "description": "Indicates the number of years for which funding has been provided by MoE. Must only contain values from 0 through to 15 inclusive.",
                      "minimum": 0,
                      "maximum": 15
                    },
                    "Curriculum": {
                      "$ref": "#/components/schemas/NZCodeSetsCurriculum"
                    },
                    "LanguageOfInstructionList": {
                      "description": "How much instruction has the student received in which languages?",
                      "type": "object",
                      "required": [
                        "Language"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "Language": {
                          "type": "array",
                          "items": {
                            "description": "The number of hours per week the Learner is taught in a specific language during the enrolment.",
                            "type": "object",
                            "required": [
                              "Code",
                              "Level"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "Code": {
                                "$ref": "#/components/schemas/NZCodeSetsLanguage"
                              },
                              "Level": {
                                "$ref": "#/components/schemas/NZCodeSetsLanguageInstructionLevel"
                              }
                            }
                          }
                        }
                      }
                    },
                    "TimeInImmersion": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "description": "The number of years the student has been in Te Reo Māori immersion education."
                    },
                    "Section9Agreement": {
                      "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                    },
                    "OngoingResourceScheme": {
                      "$ref": "#/components/schemas/NZCodeSetsOngoingResourceScheme"
                    },
                    "CoEnrolment": {
                      "description": "Describes the student's enrolment with their base school in the case where this enrolment is not a base school enrolment.",
                      "type": "object",
                      "required": [
                        "OtherProvider"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "OtherProvider": {
                          "$ref": "#/components/schemas/ObjectReference"
                        },
                        "CoEnrolmentType": {
                          "$ref": "#/components/schemas/NZCodeSetsCoEnrolmentType"
                        },
                        "BehaviouralKeyIssuesNote": {
                          "type": "string",
                          "description": "Free text note of key behavioural issues, made by the client school in relation to the student."
                        },
                        "ClientSchoolConfidentialNote": {
                          "type": "string",
                          "description": "Free text confidential note made by the client school in relation to the student."
                        },
                        "GuardianConfidentialNote": {
                          "type": "string",
                          "description": "Free text confidential note made by the parents/caregivers of the student."
                        }
                      }
                    },
                    "StudentConsentList": {
                      "description": "A list of student consent information.",
                      "type": "object",
                      "required": [
                        "StudentConsent"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "StudentConsent": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ObjectReference"
                          }
                        }
                      }
                    },
                    "PreEnrolmentCancellation": {
                      "description": "Details of why the school pre-enrolment was cancelled.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "NotifiedDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date the Student was notified of the cancellation of the pre-enrolment."
                        },
                        "CancellationMethod": {
                          "$ref": "#/components/schemas/NZCodeSetsPreEnrolmentExitType"
                        },
                        "CancellationReason": {
                          "$ref": "#/components/schemas/NZCodeSetsPreEnrolmentCancellationReason"
                        },
                        "CancellationReasonOtherDesc": {
                          "type": "string",
                          "description": "Free text reason the pre-enrolment was cancelled if the cancellation reason of other was selected."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          },
          "ClassTeacherList": {
            "description": "<p>Student's class and teacher details, de-normalised from TeachingGroupEnrolment for sLSR on non-SMS integrated schools.</p>",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "ClassTeacher"
            ],
            "properties": {
              "ClassTeacher": {
                "description": "<p>Individual class and teacher details, de-normalised from TeachingGroupEnrolment for sLSR on non-SMS integrated schools.</p>",
                "type": "object",
                "required": [
                  "ClassRoom"
                ],
                "additionalProperties": false,
                "properties": {
                  "ClassRoom": {
                    "type": "string",
                    "description": ""
                  },
                  "TeacherList": {
                    "type": "object",
                    "description": "<p>List of teachers in a single classroom</p>",
                    "required": [
                      "Teacher"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Teacher": {
                        "description": "<p>Details of a single teacher in the classroom</p>",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "FirstName": {
                              "type": "string",
                              "description": "Teacher's first or given"
                            },
                            "LastName": {
                              "type": "string",
                              "description": "Teacher's last or family name"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "readOnly": true
          }
        }
      },
      "createStudentProviderEnrolments": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentProviderEnrolment"
        ],
        "title": "StudentProviderEnrolments",
        "description": "Wrapper around an array of StudentProviderEnrolments",
        "properties": {
          "StudentProviderEnrolment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStudentProviderEnrolment"
            },
            "description": "<p>A student's association with an education provider for the purpose of receiving educational servics.</p> <p>Provider enrolments span multiple years with the ProviderEnrolment containing one or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>"
          }
        }
      },
      "createStudentTeachingGroupEnrolment": {
        "title": "StudentTeachingGroupEnrolment",
        "description": "<p>Records a student's arrival to and departure from a TeachingGroup.</p>",
        "required": [
          "Organisation",
          "StartDate",
          "Status",
          "Student",
          "TeachingGroup",
          "StudentTeachingGroupEnrolmentLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentTeachingGroupEnrolmentRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentTeachingGroupEnrolmentLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsStudentTeachingGroupEnrolmentStatus",
            "readOnly": true
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "TeachingGroup": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the Student's enrolment in the teaching group starts."
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of a student’s enrolment in the teaching group ends."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createStudentTeachingGroupEnrolments": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentTeachingGroupEnrolment"
        ],
        "title": "StudentTeachingGroupEnrolments",
        "description": "Wrapper around an array of StudentTeachingGroupEnrolments",
        "properties": {
          "StudentTeachingGroupEnrolment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStudentTeachingGroupEnrolment"
            },
            "description": "<p>Records a student's arrival to and departure from a TeachingGroup.</p>"
          }
        }
      },
      "createTeachingGroup": {
        "title": "TeachingGroup",
        "description": "<p>Identifies a particular class or other group of students. Such groups can have multiple staff assigned in a variety of roles, may be assigned students from multiple year levels and may be taught multiple courses. </p>",
        "required": [
          "Organisation",
          "ShortName",
          "TeachingGroupLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "TeachingGroupRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "TeachingGroupLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "ShortName": {
            "type": "string",
            "description": "Short free format label that describes the group."
          },
          "LongName": {
            "type": "string",
            "description": "Longer description if required."
          },
          "GroupType": {
            "$ref": "#/components/schemas/NZCodeSetsTeachingGroupType"
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "TeachingOrganisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "ScheduleTerm": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "StudentList": {
            "description": "List of Students in this Teaching Group",
            "type": "object",
            "required": [
              "Student"
            ],
            "additionalProperties": false,
            "properties": {
              "Student": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StudentObjectReference"
                }
              }
            },
            "readOnly": true
          },
          "TeacherList": {
            "description": "A List of staff associated with the group – may or may not include the teacher timetabled in the schedule.",
            "type": "object",
            "required": [
              "StaffMember"
            ],
            "additionalProperties": false,
            "properties": {
              "StaffMember": {
                "type": "array",
                "items": {
                  "description": "The individual staff member as a member of the StaffList and their role.",
                  "type": "object",
                  "required": [
                    "Role"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "LocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object."
                    },
                    "Role": {
                      "$ref": "#/components/schemas/NZCodeSetsStaffRole"
                    }
                  }
                }
              }
            },
            "readOnly": true
          },
          "CourseList": {
            "description": "List of generic references denoting the Courses the TeachingGroup is being taught.",
            "type": "object",
            "required": [
              "Course"
            ],
            "additionalProperties": false,
            "properties": {
              "Course": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "SubjectAreaList": {
            "description": "List of codes denoting the Learning or Subject Areas of the Course the TeachingGroup is being taught.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSubjectArea"
                }
              },
              "NCEASubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsNCEASubjectArea"
                }
              }
            }
          },
          "YearLevelList": {
            "description": "For Subject Class teaching groups: the list of codes denoting the Year Levels of the Course the TeachingGroup is being taught. For Roll Class teaching groups, the Year Levels of the students in the roll class group.",
            "type": "object",
            "required": [
              "YearLevel"
            ],
            "additionalProperties": false,
            "properties": {
              "YearLevel": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "createTeachingGroups": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "TeachingGroup"
        ],
        "title": "TeachingGroups",
        "description": "Wrapper around an array of TeachingGroups",
        "properties": {
          "TeachingGroup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createTeachingGroup"
            },
            "description": "<p>Identifies a particular class or other group of students. Such groups can have multiple staff assigned in a variety of roles, may be assigned students from multiple year levels and may be taught multiple courses. </p>"
          }
        }
      },
      "createWellbeingCharacteristic": {
        "title": "WellbeingCharacteristic",
        "description": "<p>Core Wellbeing Characteristic that is integral to the Student. This may be a Medical condition, special needs or a characteristic such as a known disability or any other characteristic or condition that is student specific and impacts their learning.</p>",
        "required": [
          "CaseLeadContactPerson",
          "Category",
          "Classification",
          "RecordingProvider",
          "Student",
          "WellbeingCharacteristicLocalId"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "WellbeingCharacteristicRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "WellbeingCharacteristicLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "RecordingProvider": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "Starting Date for this Characteristic to be noted."
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "description": "End date for this Characteristic to be noted, if there is one."
          },
          "ReviewDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date at which this information should be reviewed."
          },
          "CharacteristicNotes": {
            "type": "string",
            "description": "Text relating to the particular WellbeingCharacteristic."
          },
          "NoteList": {
            "description": "A list of notes that have been written about the wellbeing characteristic.",
            "type": "object",
            "required": [
              "Note"
            ],
            "additionalProperties": false,
            "properties": {
              "Note": {
                "type": "array",
                "items": {
                  "description": "A free text note about the associated subject matter.",
                  "type": "object",
                  "required": [
                    "CreatedBy",
                    "CreatedDateTime",
                    "Note"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "Note": {
                      "type": "string",
                      "description": "Free text note."
                    },
                    "CreatedDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the note was created."
                    },
                    "LastUpdatedDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the note was last updated."
                    },
                    "CreatedBy": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "LastUpdatedBy": {
                      "$ref": "#/components/schemas/ObjectReference"
                    }
                  }
                }
              }
            }
          },
          "Classification": {
            "$ref": "#/components/schemas/NZCodeSetsWellbeingCharacteristicClass"
          },
          "Category": {
            "$ref": "#/components/schemas/NZCodeSetsWellbeingCharacteristicCategory"
          },
          "SubCategory": {
            "$ref": "#/components/schemas/NZCodeSetsWellbeingCharacteristicSubCategory"
          },
          "SubSubCategory": {
            "$ref": "#/components/schemas/NZCodeSetsWellbeingCharacteristicSubSubCategory"
          },
          "SubCategoryDetail": {
            "type": "string",
            "description": "Additional detail about a sub category."
          },
          "CharacteristicPriority": {
            "$ref": "#/components/schemas/NZCodeSetsWellbeingCharacteristicPriority"
          },
          "CaseLead": {
            "$ref": "#/components/schemas/NZCodeSetsLearningSupportCaseLead"
          },
          "CaseLeadOtherDesc": {
            "type": "string",
            "description": "Free text describing the Case Lead Agency when a Case Lead of 'Other' is selected."
          },
          "CaseLeadContactPerson": {
            "type": "string",
            "description": "The name of the contact person for the Case Lead Agency."
          },
          "DailyManagement": {
            "type": "string"
          },
          "EmergencyManagement": {
            "type": "string"
          },
          "EmergencyResponsePlan": {
            "type": "string"
          },
          "Trigger": {
            "type": "string"
          },
          "ConfidentialFlag": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "Alert": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "MedicationList": {
            "description": "A list of the medications required for this Wellbeing Characteristic.",
            "type": "object",
            "required": [
              "Medication"
            ],
            "additionalProperties": false,
            "properties": {
              "Medication": {
                "type": "array",
                "items": {
                  "description": "The medication, dosage and frequency, required by the student to manage the Wellbeing Characteristic.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "MedicationName": {
                      "type": "string",
                      "description": "Name of medication required for the student."
                    },
                    "Dosage": {
                      "type": "string",
                      "description": "Dosage and strength of medication required for the student."
                    },
                    "Frequency": {
                      "type": "string",
                      "description": "Frequency of Administration."
                    },
                    "AdministrationInformation": {
                      "type": "string",
                      "description": "Information about how the medication is to be administered."
                    },
                    "Method": {
                      "type": "string",
                      "description": "Method of administration."
                    },
                    "MedicationConsentList": {
                      "description": "A list consents that have been provided for administration of a medicine to a student.",
                      "type": "object",
                      "required": [
                        "MedicationConsent"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "MedicationConsent": {
                          "type": "array",
                          "items": {
                            "description": "Contains information about when, by whom, and who consent was given to for the administration of a medicine to a student.",
                            "type": "object",
                            "required": [
                              "ConsentedBy",
                              "StartDate"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "StartDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date from which the student or student caretaker consented to the medicine being administered to the student by a particular individual."
                              },
                              "EndDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date the consent for administration of the medicine ends or is revoked."
                              },
                              "ConsentedBy": {
                                "$ref": "#/components/schemas/ObjectReference"
                              },
                              "ProviderApplicableTo": {
                                "$ref": "#/components/schemas/ObjectReference"
                              },
                              "AdministeredBy": {
                                "$ref": "#/components/schemas/ObjectReference"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "DocumentList": {
            "description": "Describes the Location of any associated documents kept in relation to this Characteristic.",
            "type": "object",
            "required": [
              "Document"
            ],
            "additionalProperties": false,
            "properties": {
              "Document": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "WellbeingEventList": {
            "description": "A list of any Wellbeing Events that have arisen as a result of this Characteristic.",
            "type": "object",
            "required": [
              "WellbeingEvent"
            ],
            "additionalProperties": false,
            "properties": {
              "WellbeingEvent": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "WellbeingAlertList": {
            "description": "A list of any Wellbeing Alerts that have arison as a result of this Chracteristic.",
            "type": "object",
            "required": [
              "WellbeingAlert"
            ],
            "additionalProperties": false,
            "properties": {
              "WellbeingAlert": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "SpecialAssessmentConditionList": {
            "description": "A list of the special assessment conditions that a student is entitled to have when sitting an assessment.",
            "type": "object",
            "required": [
              "SpecialAssessmentCondition"
            ],
            "additionalProperties": false,
            "properties": {
              "SpecialAssessmentCondition": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSpecialAssessmentCondition"
                }
              }
            }
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsWellbeingCharacteristicStatus"
          },
          "MedicalCharacteristicDesc": {
            "type": "string",
            "description": "Free text providing additional information about a medical need of a student. Especially when a medical need of 'Other' is selected."
          },
          "OfficialDiagnosis": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "OfficialDiagnosisList": {
            "description": "A list of official diagnoses that pertains to this wellbeing characteristic. At least one diagnosis is required if OfficialDiagnosis = 'Y'.",
            "type": "object",
            "required": [
              "OfficialDiagnosis"
            ],
            "additionalProperties": false,
            "properties": {
              "OfficialDiagnosis": {
                "type": "array",
                "items": {
                  "description": "An official diagnosis that pertains to this Wellbeing Characteristic.",
                  "type": "object",
                  "required": [
                    "DiagnosisType"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "DiagnosisType": {
                      "$ref": "#/components/schemas/NZCodeSetsOfficialDiagnosisType"
                    },
                    "DiagnosisSubType": {
                      "$ref": "#/components/schemas/NZCodeSetsOfficialDiagnosisSubType"
                    },
                    "OfficialDiagnosisDetail": {
                      "type": "string",
                      "description": "Providers additional free text information about an official diagnosis. Mandatory when the Official Diagnosis Type selected is ‘Physical Impairments’, or ‘Medical Conditions’. Mandatory when the Official Diagnosis Sub-Type selected is ‘Other neurodevelopmental disorders/developmental anomalies’, Other mental health disorders’, or ‘Other sensory impairment’."
                    },
                    "DocumentList": {
                      "description": "A list of documents that conatin information that pertain to this official diagnosis.",
                      "type": "object",
                      "required": [
                        "Document"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "Document": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ObjectReference"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "StudentVoiceList": {
            "description": "A list of the student's or their whānau's voice about their wellbeing characteristic in regards to the student 's interests, goals, and voice (comments, opinions).",
            "type": "object",
            "required": [
              "StudentVoice"
            ],
            "additionalProperties": false,
            "properties": {
              "StudentVoice": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          },
          "LearnerInterests": {
            "type": "string",
            "description": "Free text that describes the interests a learner has that pertains to this wellbeing Characteristic."
          },
          "LearnerWhanauGoal": {
            "type": "string",
            "description": "Free text describing any goals the student wants to achieve, or any goals their whānau want them to achieve that pertain to this wellbeing characteristic."
          },
          "LearnerWhanauVoice": {
            "type": "string",
            "description": "Free text capturing the learners and/or their whānaus opinions and point of view in regards to this wellbeing characteristic."
          }
        }
      },
      "createWellbeingCharacteristics": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "WellbeingCharacteristic"
        ],
        "title": "WellbeingCharacteristics",
        "description": "Wrapper around an array of WellbeingCharacteristics",
        "properties": {
          "WellbeingCharacteristic": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createWellbeingCharacteristic"
            },
            "description": "<p>Core Wellbeing Characteristic that is integral to the Student. This may be a Medical condition, special needs or a characteristic such as a known disability or any other characteristic or condition that is student specific and impacts their learning.</p>"
          }
        }
      },
      "createSchoolEnrolment": {
        "title": "SchoolEnrolment",
        "description": "Defines information related to a student's enrolment at a school education Provider for a particular academic year (or part thereof)",
        "type": "object",
        "required": [
          "Curriculum",
          "MembershipType",
          "FundingType",
          "FundingYearLevel",
          "YearLevel",
          "StudentProviderEnrolment"
        ],
        "additionalProperties": false,
        "properties": {
          "SchoolEnrolmentRefId": {
            "$ref": "#/components/schemas/RefId"
          },
          "SchoolEnrolmentLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "SchoolCalendarYear": {
            "type": "integer",
            "minimum": 1,
            "maximum": 9999,
            "description": "School year for which this enrolment is applicable, expressed as the four-digit year in which the school year ends (eg 2018)."
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the student started at the school."
          },
          "MembershipType": {
            "$ref": "#/components/schemas/NZCodeSetsSchoolEnrolmentType"
          },
          "YearLevel": {
            "type": "integer",
            "description": "Represents the year level at which the student is considered to be predominantly taught. For example – Year 10, Year 11. Can only contain the values 1 through to 13 inclusive.",
            "minimum": 1,
            "maximum": 13
          },
          "FTE": {
            "type": "number",
            "description": "Full-time equivalent numeric value of the student's course load during this enrollment, expressed in decimal form, where 1.00 represents a full-time enrolment.",
            "minimum": 0,
            "maximum": 1
          },
          "FundingType": {
            "$ref": "#/components/schemas/NZCodeSetsStudentFundingType"
          },
          "FundingYearLevel": {
            "type": "integer",
            "description": "Indicates the number of years for which funding has been provided by MoE. Must only contain values from 0 through to 15 inclusive.",
            "minimum": 0,
            "maximum": 15
          },
          "Curriculum": {
            "$ref": "#/components/schemas/NZCodeSetsCurriculum"
          },
          "LanguageOfInstructionList": {
            "description": "How much instruction has the student received in which languages?",
            "type": "object",
            "required": [
              "Language"
            ],
            "additionalProperties": false,
            "properties": {
              "Language": {
                "type": "array",
                "items": {
                  "description": "The number of hours per week the Learner is taught in a specific language during the enrolment.",
                  "type": "object",
                  "required": [
                    "Code",
                    "Level"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "Code": {
                      "$ref": "#/components/schemas/NZCodeSetsLanguage"
                    },
                    "Level": {
                      "$ref": "#/components/schemas/NZCodeSetsLanguageInstructionLevel"
                    }
                  }
                }
              }
            }
          },
          "TimeInImmersion": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295,
            "description": "The number of years the student has been in Te Reo Māori immersion education."
          },
          "Section9Agreement": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "OngoingResourceScheme": {
            "$ref": "#/components/schemas/NZCodeSetsOngoingResourceScheme"
          },
          "CoEnrolment": {
            "description": "Describes the student's enrolment with their base school in the case where this enrolment is not a base school enrolment.",
            "type": "object",
            "required": [
              "OtherProvider"
            ],
            "additionalProperties": false,
            "properties": {
              "OtherProvider": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "CoEnrolmentType": {
                "$ref": "#/components/schemas/NZCodeSetsCoEnrolmentType"
              },
              "BehaviouralKeyIssuesNote": {
                "type": "string",
                "description": "Free text note of key behavioural issues, made by the client school in relation to the student."
              },
              "ClientSchoolConfidentialNote": {
                "type": "string",
                "description": "Free text confidential note made by the client school in relation to the student."
              },
              "GuardianConfidentialNote": {
                "type": "string",
                "description": "Free text confidential note made by the parents/caregivers of the student."
              }
            }
          },
          "StudentConsentList": {
            "description": "A list of student consent information.",
            "type": "object",
            "required": [
              "StudentConsent"
            ],
            "additionalProperties": false,
            "properties": {
              "StudentConsent": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "PreEnrolmentCancellation": {
            "description": "Details of why the school pre-enrolment was cancelled.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "NotifiedDate": {
                "type": "string",
                "format": "date-time",
                "description": "The date the Student was notified of the cancellation of the pre-enrolment."
              },
              "CancellationMethod": {
                "$ref": "#/components/schemas/NZCodeSetsPreEnrolmentExitType"
              },
              "CancellationReason": {
                "$ref": "#/components/schemas/NZCodeSetsPreEnrolmentCancellationReason"
              },
              "CancellationReasonOtherDesc": {
                "type": "string",
                "description": "Free text reason the pre-enrolment was cancelled if the cancellation reason of other was selected."
              }
            }
          },
          "StudentProviderEnrolment": {
            "$ref": "#/components/schemas/ObjectReference"
          }
        }
      },
      "createSchoolEnrolments": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "SchoolEnrolment"
        ],
        "title": "SchoolEnrolments",
        "description": "Wrapper around an array of SchoolEnrolments",
        "properties": {
          "SchoolEnrolment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createSchoolEnrolment"
            },
            "description": "Defines information related to a student's enrolment at a school education Provider for a particular academic year (or part thereof)"
          }
        }
      },
      "createStaffPersonalPOST": {
        "title": "StaffPersonal",
        "description": "<p>All the personal contact and demographic information relating to a staff member, who might be a teacher or other employee of a Provider.</p> <p>Non personal information relating to the staff member's relationship with Providers is stored in the StaffAssignment data object.</p>",
        "required": [
          "StaffPersonalLocalId",
          "StaffAssignment"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StaffPersonalRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StaffPersonalLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "ESLPairwiseId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "SchoolSMSUserId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "PersonInfo": {
            "description": "Personal Information",
            "type": "object",
            "required": [
              "Name",
              "Demographics"
            ],
            "additionalProperties": false,
            "properties": {
              "Name": {
                "description": "A name used by the person",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Title": {
                    "type": "string",
                    "description": "A title or prefix associated with the name."
                  },
                  "FamilyName": {
                    "type": "string",
                    "description": "Also known as Last Name, although some cultures may not present a family name as the last name."
                  },
                  "GivenName": {
                    "type": "string",
                    "description": "Also known as First Name, although some cultures may not present this name as the first element in a name. May contain a composite of all given names."
                  },
                  "MiddleName": {
                    "type": "string",
                    "description": "Where more than one Given Name, these may be combined in one composite field or else populated in several elements."
                  },
                  "SecondMiddleName": {
                    "type": "string",
                    "description": "Middle names can be sent altogether in one element or if the source system has more than one middle name field, they can be spread across two elements. SecondMiddleName will either contain no values, or it will hold the person's second and subsequent middle names while MiddleName will hold the person's first middle name."
                  },
                  "FamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredFamilyName": {
                    "type": "string",
                    "description": "A preferred version of the Family Name. Note:A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "PreferredFamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredGivenName": {
                    "type": "string",
                    "description": "A preferred version of the Given Name. Note: A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "Suffix": {
                    "type": "string",
                    "description": "Textual suffix like PHD, JP, BSc."
                  },
                  "FullName": {
                    "type": "string",
                    "description": "A combination of all name elements as one composite text element"
                  },
                  "Type": {
                    "$ref": "#/components/schemas/NZCodeSetsNameUsageType"
                  },
                  "IsVerified": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  }
                },
                "required": [
                  "FamilyName",
                  "GivenName"
                ]
              },
              "Demographics": {
                "description": "Details of the person’s demographic properties",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "BirthDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The person's date of birth."
                  }
                },
                "required": [
                  "BirthDate"
                ]
              },
              "Email": {
                "description": "The person's e-mail address(es) - one or more emails.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Personal": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "required": [
                      "Address"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  },
                  "Work": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "required": [
                      "Address"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  }
                }
              },
              "PersonPhoto": {
                "$ref": "#/components/schemas/ObjectReference"
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          },
          "StaffAssignment": {
            "type": "object",
            "description": "<p>Partial <a href=\"#tag/StaffAssignment\">StaffAssignment</a> object, denoting initial role, at the given Organisation for the StaffPersonal upon creation.</p>",
            "required": [
              "StaffRole",
              "StartDate",
              "StaffAssignmentLocalId"
            ],
            "additionalProperties": false,
            "properties": {
              "StaffAssignmentRefId": {
                "$ref": "#/components/schemas/RefId"
              },
              "StaffAssignmentLocalId": {
                "$ref": "#/components/schemas/LocalId"
              },
              "StaffRole": {
                "$ref": "#/components/schemas/NZCodeSetsStaffRole"
              },
              "StartDate": {
                "type": "string",
                "format": "date-time",
                "x-displayAs": "date",
                "description": "<p>This is the date from which the staff assignment is valid (inclusive).</p>"
              },
              "EndDate": {
                "type": "string",
                "format": "date-time",
                "x-displayAs": "date",
                "description": "This is the date through which the staff assignment is valid (inclusive). This can be NULL when the staff member's assignment to a particular role is open-ended.</p>"
              }
            }
          }
        }
      },
      "createStaffPersonalPOSTs": {
        "type": "object",
        "additionalProperties": false,
        "title": "StaffPersonalPOSTs",
        "description": "Wrapper around an array of StaffPersonalPOSTs",
        "properties": {
          "StaffPersonal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStaffPersonalPOST"
            },
            "description": "POST extended edition of StaffPersonal"
          }
        }
      },
      "createStudentPersonalPOST": {
        "title": "StudentPersonal",
        "description": "Contains all the personal information related to the student.",
        "required": [
          "NationalStudentNumber",
          "PersonInfo",
          "StudentPersonalLocalId",
          "StudentProviderEnrolment"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentPersonalRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentPersonalLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "NationalStudentNumber": {
            "description": "The unique identifier allocated to every student in New Zealand, also known as the NSN.",
            "type": "string",
            "pattern": "^[0-9]{1,10}$"
          },
          "NZQAStudentId": {
            "type": "string",
            "description": "NZQA's unique identifier for a student who has been registered for assessments to be conducted against the NZQA framework to achieve unit/achievement standards and national qualifications."
          },
          "FirstNZSchoolingDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date a student first ever started schooling in New Zealand. This field is used to establish most students’ Funding Year Level."
          },
          "EarlyChildhoodEducation": {
            "description": "The type of early childhood education the student received before enrolling in their first school.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Type": {
                "$ref": "#/components/schemas/NZCodeSetsEarlyChildhoodEducationType"
              },
              "HoursAttended": {
                "type": "integer",
                "minimum": -2147483648,
                "maximum": 2147483647,
                "description": "The total number of hours of early childhood education attended, prior to enrolling in their first school."
              }
            }
          },
          "PersonInfo": {
            "description": "Personal Information",
            "type": "object",
            "required": [
              "Name",
              "Demographics"
            ],
            "additionalProperties": false,
            "properties": {
              "Name": {
                "description": "A name used by the person",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Title": {
                    "type": "string",
                    "description": "A title or prefix associated with the name."
                  },
                  "FamilyName": {
                    "type": "string",
                    "description": "Also known as Last Name, although some cultures may not present a family name as the last name."
                  },
                  "GivenName": {
                    "type": "string",
                    "description": "Also known as First Name, although some cultures may not present this name as the first element in a name. May contain a composite of all given names."
                  },
                  "MiddleName": {
                    "type": "string",
                    "description": "Where more than one Given Name, these may be combined in one composite field or else populated in several elements."
                  },
                  "SecondMiddleName": {
                    "type": "string",
                    "description": "Middle names can be sent altogether in one element or if the source system has more than one middle name field, they can be spread across two elements. SecondMiddleName will either contain no values, or it will hold the person's second and subsequent middle names while MiddleName will hold the person's first middle name."
                  },
                  "FamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredFamilyName": {
                    "type": "string",
                    "description": "A preferred version of the Family Name. Note:A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "PreferredFamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredGivenName": {
                    "type": "string",
                    "description": "A preferred version of the Given Name. Note: A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "Suffix": {
                    "type": "string",
                    "description": "Textual suffix like PHD, JP, BSc."
                  },
                  "FullName": {
                    "type": "string",
                    "description": "A combination of all name elements as one composite text element"
                  },
                  "Type": {
                    "$ref": "#/components/schemas/NZCodeSetsNameUsageType"
                  },
                  "IsVerified": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  }
                },
                "required": [
                  "FamilyName",
                  "GivenName"
                ]
              },
              "OtherNameList": {
                "description": "Previous, alternate or other names or aliases associated with the person.",
                "type": "object",
                "required": [
                  "Name"
                ],
                "additionalProperties": false,
                "properties": {
                  "Name": {
                    "type": "array",
                    "items": {
                      "description": "Extension of BaseNameType including name verification data",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Title": {
                          "type": "string",
                          "description": "A title or prefix associated with the name."
                        },
                        "FamilyName": {
                          "type": "string",
                          "description": "Also known as Last Name, although some cultures may not present a family name as the last name."
                        },
                        "GivenName": {
                          "type": "string",
                          "description": "Also known as First Name, although some cultures may not present this name as the first element in a name. May contain a composite of all given names."
                        },
                        "MiddleName": {
                          "type": "string",
                          "description": "Where more than one Given Name, these may be combined in one composite field or else populated in several elements."
                        },
                        "SecondMiddleName": {
                          "type": "string",
                          "description": "Middle names can be sent altogether in one element or if the source system has more than one middle name field, they can be spread across two elements. SecondMiddleName will either contain no values, or it will hold the person's second and subsequent middle names while MiddleName will hold the person's first middle name."
                        },
                        "FamilyNameFirst": {
                          "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                        },
                        "PreferredFamilyName": {
                          "type": "string",
                          "description": "A preferred version of the Family Name. Note:A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                        },
                        "PreferredFamilyNameFirst": {
                          "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                        },
                        "PreferredGivenName": {
                          "type": "string",
                          "description": "A preferred version of the Given Name. Note: A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                        },
                        "Suffix": {
                          "type": "string",
                          "description": "Textual suffix like PHD, JP, BSc."
                        },
                        "FullName": {
                          "type": "string",
                          "description": "A combination of all name elements as one composite text element"
                        },
                        "Type": {
                          "$ref": "#/components/schemas/NZCodeSetsNameUsageType"
                        },
                        "IsVerified": {
                          "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                        },
                        "Verification": {
                          "description": "The verification event that verified the person's name.",
                          "type": "object",
                          "required": [
                            "IsConfirmed",
                            "Source"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "Source": {
                              "$ref": "#/components/schemas/NZCodeSetsVerificationSource"
                            },
                            "DocumentSerialNumber": {
                              "type": "string",
                              "description": "The serial number on the document that was used to verify the name or birthdate."
                            },
                            "DocumentExpiryDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The expiry date on the document that was used to verify the name or birthdate."
                            },
                            "IsConfirmed": {
                              "type": "boolean",
                              "description": "If true then verification has been confirmed by MoE."
                            },
                            "Timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date & time that the VerificationEvent took place."
                            },
                            "Provider": {
                              "$ref": "#/components/schemas/ObjectReference"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Demographics": {
                "description": "Details of the person’s demographic properties",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "BirthDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The person's date of birth."
                  },
                  "Gender": {
                    "$ref": "#/components/schemas/NZCodeSetsGender"
                  },
                  "LanguageList": {
                    "description": "List of languages an individual uses to communicate.",
                    "type": "object",
                    "required": [
                      "Language"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Language": {
                        "type": "array",
                        "items": {
                          "description": "A language that an individual uses to communicate.",
                          "type": "object",
                          "required": [
                            "Code"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "Code": {
                              "$ref": "#/components/schemas/NZCodeSetsLanguage"
                            },
                            "Usage": {
                              "$ref": "#/components/schemas/NZCodeSetsLanguageUsage"
                            },
                            "Dialect": {
                              "type": "string",
                              "description": "Specific dialect of a person's language."
                            },
                            "ProficiencyList": {
                              "description": "A list of the person's proficiency in the language in regards to speaking, reading and writing.",
                              "type": "object",
                              "required": [
                                "Proficiency"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "Proficiency": {
                                  "type": "array",
                                  "items": {
                                    "description": "The person's proficiency in the language in regards to speaking, reading and writing.",
                                    "type": "object",
                                    "required": [
                                      "Level",
                                      "Type"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                      "Level": {
                                        "$ref": "#/components/schemas/NZCodeSetsLanguageProficiencyLevel"
                                      },
                                      "Type": {
                                        "$ref": "#/components/schemas/NZCodeSetsLanguageProficiencyType"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "EthnicityList": {
                    "description": "One or more ethnic groups with which the person identifies.",
                    "type": "object",
                    "required": [
                      "Ethnicity"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Ethnicity": {
                        "type": "array",
                        "items": {
                          "description": "An ethnic group with which the person identifies, and if there is more than one, their order of preference.",
                          "type": "object",
                          "required": [
                            "Code"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": -2147483648,
                              "maximum": 2147483647,
                              "description": "The order of preference for the person's ethnicity."
                            },
                            "Code": {
                              "$ref": "#/components/schemas/NZCodeSetsEthnicity"
                            }
                          }
                        }
                      }
                    }
                  },
                  "IwiAffiliationList": {
                    "description": "A list of one or more iwi with which the person has an affiliation.",
                    "type": "object",
                    "required": [
                      "Iwi"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Iwi": {
                        "type": "array",
                        "items": {
                          "description": "An iwi the person is affiliated to.",
                          "type": "object",
                          "required": [
                            "Code"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "Code": {
                              "$ref": "#/components/schemas/NZCodeSetsIwi"
                            },
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": -2147483648,
                              "maximum": 2147483647,
                              "description": "Indicates the persons preferred Iwi. The order of preference for the person's Iwi. '1' is their first preference. If left NULL means no preference is set and defers to any Iwi with a preference of '1'."
                            },
                            "HapuAffiliationList": {
                              "description": "A list of one or more affiliations of a person with a Hapū within an Iwi.",
                              "type": "object",
                              "required": [
                                "Hapu"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "Hapu": {
                                  "type": "array",
                                  "items": {
                                    "description": "An hapu the person is affiliated to.",
                                    "type": "object",
                                    "required": [
                                      "HapuName"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                      "HapuName": {
                                        "type": "string",
                                        "description": "The name of a Hapū that the person is affiliated with."
                                      },
                                      "PreferenceOrderNumber": {
                                        "type": "integer",
                                        "minimum": -2147483648,
                                        "maximum": 2147483647,
                                        "description": "Indicates the persons preferred Hapu. The order of preference for the person's Hapu. '1' is their first preference. If left NULL means no preference is set and defers to any Hapu with a preference of '1'."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "BirthDate",
                  "EthnicityList",
                  "Gender"
                ]
              },
              "Address": {
                "description": "The person's address(es) - one or more addresses.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Physical": {
                    "description": "The person or organisation's physical address",
                    "type": "object",
                    "required": [
                      "Line1"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Type": {
                        "$ref": "#/components/schemas/NZCodeSetsAddressType"
                      },
                      "Line1": {
                        "type": "string",
                        "description": "Address line 1."
                      },
                      "Line2": {
                        "type": "string",
                        "description": "Address line 2."
                      },
                      "Line3": {
                        "type": "string",
                        "description": "Address line 3."
                      },
                      "Line4": {
                        "type": "string",
                        "description": "Address line 4."
                      },
                      "Suburb": {
                        "type": "string",
                        "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                      },
                      "City": {
                        "type": "string",
                        "description": "The city part of the address."
                      },
                      "StateProvince": {
                        "type": "string",
                        "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                      },
                      "Country": {
                        "type": "string",
                        "description": "The country code."
                      },
                      "PostalCode": {
                        "type": "string",
                        "description": "The ZIP/postal code."
                      },
                      "GridLocation": {
                        "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                        "type": "object",
                        "required": [
                          "Latitude",
                          "Longitude"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "Latitude": {
                            "type": "number",
                            "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                            "minimum": -90,
                            "maximum": 90
                          },
                          "Longitude": {
                            "type": "number",
                            "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                            "minimum": -180,
                            "maximum": 180
                          }
                        }
                      },
                      "StatisticalAreaList": {
                        "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                        "type": "object",
                        "required": [
                          "StatisticalArea"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "StatisticalArea": {
                            "type": "array",
                            "items": {
                              "description": "A particular statistical area defined by Statistics New Zealand.",
                              "type": "object",
                              "required": [
                                "Code",
                                "SpatialUnitType"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "SpatialUnitType": {
                                  "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                },
                                "Code": {
                                  "type": "string",
                                  "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Postal": {
                    "description": "The person or organisation's postal address",
                    "type": "object",
                    "required": [
                      "Line1"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Type": {
                        "$ref": "#/components/schemas/NZCodeSetsAddressType"
                      },
                      "Line1": {
                        "type": "string",
                        "description": "Address line 1."
                      },
                      "Line2": {
                        "type": "string",
                        "description": "Address line 2."
                      },
                      "Line3": {
                        "type": "string",
                        "description": "Address line 3."
                      },
                      "Line4": {
                        "type": "string",
                        "description": "Address line 4."
                      },
                      "Suburb": {
                        "type": "string",
                        "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                      },
                      "City": {
                        "type": "string",
                        "description": "The city part of the address."
                      },
                      "StateProvince": {
                        "type": "string",
                        "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                      },
                      "Country": {
                        "type": "string",
                        "description": "The country code."
                      },
                      "PostalCode": {
                        "type": "string",
                        "description": "The ZIP/postal code."
                      },
                      "GridLocation": {
                        "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                        "type": "object",
                        "required": [
                          "Latitude",
                          "Longitude"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "Latitude": {
                            "type": "number",
                            "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                            "minimum": -90,
                            "maximum": 90
                          },
                          "Longitude": {
                            "type": "number",
                            "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                            "minimum": -180,
                            "maximum": 180
                          }
                        }
                      },
                      "StatisticalAreaList": {
                        "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                        "type": "object",
                        "required": [
                          "StatisticalArea"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "StatisticalArea": {
                            "type": "array",
                            "items": {
                              "description": "A particular statistical area defined by Statistics New Zealand.",
                              "type": "object",
                              "required": [
                                "Code",
                                "SpatialUnitType"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "SpatialUnitType": {
                                  "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                },
                                "Code": {
                                  "type": "string",
                                  "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Email": {
                "description": "The person's e-mail address(es) - one or more emails.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Personal": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "required": [
                      "Address"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  },
                  "Work": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "required": [
                      "Address"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  }
                }
              },
              "Phone": {
                "description": "The person's phone number(s) - one or more phone numbers.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Home": {
                    "description": "A person's home number.",
                    "type": "object",
                    "required": [
                      "Number"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "Number": {
                        "type": "string",
                        "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                      },
                      "Extension": {
                        "type": "string",
                        "description": "Phone number extension."
                      }
                    }
                  },
                  "Work": {
                    "description": "A person's work number.",
                    "type": "object",
                    "required": [
                      "Number"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "Number": {
                        "type": "string",
                        "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                      },
                      "Extension": {
                        "type": "string",
                        "description": "Phone number extension."
                      }
                    }
                  },
                  "Mobile": {
                    "description": "A person's mobile number.",
                    "type": "object",
                    "required": [
                      "Number"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "Number": {
                        "type": "string",
                        "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                      },
                      "Extension": {
                        "type": "string",
                        "description": "Phone number extension."
                      }
                    }
                  }
                }
              },
              "PersonPhoto": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "MedicalNeedList": {
                "description": "A list of a persons known medical needs.",
                "type": "object",
                "required": [
                  "MedicalNeed"
                ],
                "additionalProperties": false,
                "properties": {
                  "MedicalNeed": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ObjectReference"
                    }
                  }
                }
              }
            }
          },
          "BiographicChangeReason": {
            "$ref": "#/components/schemas/NZCodeSetsBiographicChangeReason"
          },
          "CustodyNote": {
            "type": "string",
            "description": "Notes about a students care and custody status."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          },
          "CaregiverList": {
            "description": "<p>Student caregiver details de-normalised from StudentContactPersonal for sLSR on non-SMS integrated schools.</p>",
            "type": "object",
            "required": [
              "Caregiver"
            ],
            "additionalProperties": false,
            "properties": {
              "Caregiver": {
                "description": "<p>Individual caregiver details, de-normalised from StudentContactPersonal for sLSR on non-SMS integrated schools.</p>",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "RelationshipToStudentType"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "EmailAddress": {
                      "type": "string",
                      "description": "Caregiver's email address"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "Caregiver's first name"
                    },
                    "LastName": {
                      "type": "string",
                      "description": "Caregiver's last name"
                    },
                    "PhoneNumber": {
                      "type": "string",
                      "description": "Caregiver's phone number"
                    },
                    "RelationshipToStudentType": {
                      "$ref": "#/components/schemas/NZCodeSetsRelationshipToStudent"
                    }
                  }
                }
              }
            },
            "readOnly": true
          },
          "StudentProviderEnrolment": {
            "type": "object",
            "description": "<p>Partial <a href=\"#tag/StudentProviderEnrolment\">StudentProviderEnrolment</a> object, denoting enrolment info required for the StudentPersonal upon creation</p>",
            "required": [
              "EntryDate",
              "StudentProviderEnrolmentLocalId"
            ],
            "additionalProperties": false,
            "properties": {
              "StudentProviderEnrolmentRefId": {
                "$ref": "#/components/schemas/RefId"
              },
              "StudentProviderEnrolmentLocalId": {
                "$ref": "#/components/schemas/LocalId"
              },
              "EntryDate": {
                "type": "string",
                "format": "date-time",
                "x-displayAs": "date",
                "description": "<p>The date from when this enrolment is ACTIVE. The date of the student’s first attendance at the provider. If future dated, then the intended first attendance date of the enrolment.</p>"
              },
              "ExitDate": {
                "type": "string",
                "format": "date-time",
                "x-displayAs": "date",
                "description": "<p>The date of a student’s last attendance at the provider.</p>"
              },
              "ECEEnrolment": {
                "type": "object",
                "required": [
                  "ECEYearLevel"
                ],
                "additionalProperties": false,
                "properties": {
                  "ECEYearLevel": {
                    "$ref": "#/components/schemas/NZCodeSetsECEYearLevel"
                  }
                }
              },
              "SchoolEnrolment": {
                "type": "object",
                "required": [
                  "YearLevel",
                  "FundingYearLevel"
                ],
                "additionalProperties": false,
                "properties": {
                  "YearLevel": {
                    "type": "integer",
                    "description": "<p>Represents the year level at which the student is considered to be predominantly taught. For example – Year 10, Year 11. Can only contain the values 1 through to 13 inclusive.</p>",
                    "minimum": 1,
                    "maximum": 13
                  },
                  "FundingYearLevel": {
                    "type": "integer",
                    "description": "<p>Indicates the number of years for which funding has been provided by MoE. Must only contain values from 0 through to 15 inclusive.</p>",
                    "minimum": 0,
                    "maximum": 15
                  }
                }
              }
            }
          }
        }
      },
      "createStudentPersonalPOSTs": {
        "type": "object",
        "additionalProperties": false,
        "title": "StudentPersonalPOSTs",
        "description": "Wrapper around an array of StudentPersonalPOSTs",
        "properties": {
          "StudentPersonal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/createStudentPersonalPOST"
            },
            "description": "POST extended edition of StudentPersonal"
          }
        }
      },
      "ObjectReference": {
        "description": "A reference to another SIF Data Object",
        "type": "object",
        "properties": {
          "RefId": {
            "$ref": "#/components/schemas/RefId"
          },
          "LocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Name": {
            "type": "string",
            "description": "The normal descriptive name of the referenced object."
          }
        }
      },
      "NamedObjectReference": {
        "description": "A reference to another named SIF Data Object",
        "type": "object",
        "required": [
          "ObjectType"
        ],
        "additionalProperties": false,
        "properties": {
          "RefId": {
            "$ref": "#/components/schemas/RefId"
          },
          "LocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Name": {
            "type": "string",
            "description": "The normal descriptive name of the referenced object."
          },
          "ObjectType": {
            "$ref": "#/components/schemas/NZCodeSetsReferrableDataObjects"
          }
        }
      },
      "OrganisationObjectReference": {
        "description": "A reference to an Organisation Data Object, (or a specific location at that Organisation)",
        "type": "object",
        "required": [
          "RefId"
        ],
        "additionalProperties": false,
        "properties": {
          "RefId": {
            "$ref": "#/components/schemas/MoEOrgId"
          },
          "Name": {
            "type": "string",
            "description": "The normal descriptive name of the referenced object. (optional and read-only)"
          },
          "LocationNum": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "description": "Number identifying the individual location within the set of locations used by the Provider."
          }
        }
      },
      "StudentObjectReference": {
        "description": "A reference to a StudentPersonal Data Object, which may be via NSN rather than RefId or LocalId",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "RefId": {
            "$ref": "#/components/schemas/RefId"
          },
          "LocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Name": {
            "type": "string",
            "description": "The normal descriptive name of the referenced object."
          },
          "NationalStudentNumber": {
            "description": "The NSN of the referenced Student",
            "type": "string",
            "pattern": "^[0-9]{1,10}$"
          },
          "YearLevel": {
            "type": "integer",
            "description": "The YearLevel of the referenced Student; (optional and read-only)",
            "minimum": 1,
            "maximum": 13
          }
        }
      },
      "RecordAudit": {
        "description": "Holds the audit for a records, e.g. Created/Last Updated DateTime and Created/Last Updated By.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "CreatedDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the record being sent through was created in the source system."
          },
          "LastUpdatedDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the record was last updated."
          },
          "DeletedDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the record was deleted."
          },
          "CreatedBy": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "LastUpdatedBy": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "DeletedBy": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "DeletedReason": {
            "$ref": "#/components/schemas/NZCodeSetsDeletedReason"
          }
        }
      },
      "MoEOrgId": {
        "description": "1 to 5 digit Ministry Organisation Id, without leading zeros",
        "type": "string",
        "pattern": "^[1-9][0-9]{0,4}$"
      },
      "RefId": {
        "description": "An object or element identifier.",
        "type": "string",
        "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
      },
      "LocalId": {
        "description": "This is a common element used to define the locally assigned identifier associated with an entity.",
        "type": "string"
      },
      "NZCodeSetsYesOrNoCategory": {
        "type": "string",
        "title": "Yes Or No Category",
        "description": "<p>A reusable code set for yes, and no.</p> <ul>\n  <li>'N' - No - Kāo</li>\n  <li>'Y' - Yes - Āe</li>\n</ul>",
        "enum": [
          "N",
          "Y"
        ]
      },
      "NZCodeSetsReferrableDataObjects": {
        "type": "string",
        "title": "Referrable Data Objects",
        "description": "<p>An enumeration of valid SIF DataObject names, to be included in Object References</p> <ul>\n  <li>'Organisation' - Organisation</li>\n  <li>'Provider' - Provider</li>\n  <li>'AcademicDepartment' - AcademicDepartment</li>\n  <li>'ProviderRelationship' - ProviderRelationship</li>\n  <li>'ProviderCourse' - ProviderCourse</li>\n  <li>'LearningStandard' - LearningStandard</li>\n  <li>'Credential' - Credential</li>\n  <li>'StaffPersonal' - StaffPersonal</li>\n  <li>'StaffAssignment' - StaffAssignment</li>\n  <li>'StaffTeachingGroupAssignment' - StaffTeachingGroupAssignment</li>\n  <li>'StudentPersonal' - StudentPersonal</li>\n  <li>'StudentContactPersonal' - StudentContactPersonal</li>\n</ul> plus 33 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsReferrableDataObjectsType\">NZCodeSetsReferrableDataObjectsType</a>",
        "enum": [
          "Organisation",
          "Provider",
          "AcademicDepartment",
          "ProviderRelationship",
          "ProviderCourse",
          "LearningStandard",
          "Credential",
          "StaffPersonal",
          "StaffAssignment",
          "StaffTeachingGroupAssignment",
          "StudentPersonal",
          "StudentContactPersonal",
          "StudentContactRelationship",
          "StudentProviderEnrolment",
          "StudentTeachingGroupEnrolment",
          "TeachingGroup",
          "StudentAttendanceTimeList",
          "StudentAttendanceSummary",
          "AssessmentTask",
          "StudentAssessmentTaskRegistration",
          "StudentAssessmentTask",
          "StudentAssessmentTaskResult",
          "StudentAttainment",
          "WellbeingAlert",
          "WellbeingCharacteristic",
          "WellbeingEvent",
          "WellbeingResponse",
          "WellbeingAppeal",
          "Document",
          "StudentVoice",
          "StudentActivityParticipation",
          "StudentLearningSupport",
          "StudentLearningSupportResponse",
          "StudentCurriculumProgressReport",
          "StudentPhysicalRestraint",
          "StudentConsent",
          "Schedule",
          "BellSchedule",
          "ScheduleDate",
          "SchedulePeriod",
          "ScheduleEvent",
          "ScheduleHoliday",
          "ScheduleAcademicDay",
          "ScheduleTerm",
          "TeachingGroupEvent"
        ]
      },
      "NZCodeSetsDeletedReason": {
        "type": "string",
        "title": "Deleted Reason",
        "description": "<p>Code set denoting the reason a record was deleted.</p> <ul>\n  <li>'LEA' - Learner created in error - I hē te tapiri a te Akonga</li>\n  <li>'RES' - Response created in error - I hē te tāpiri i te whakautu</li>\n  <li>'SUP' - Support need created in error - I hē te tāpiri i tēnei tautokotanga</li>\n</ul>",
        "enum": [
          "LEA",
          "RES",
          "SUP"
        ]
      },
      "NZCodeSetsRelationshipToStudent": {
        "type": "string",
        "title": "Relationship To Student",
        "description": "<p>A standardised method of describing the personal relationship between two persons. Such a relationship arises from two persons belonging to the same family or closer community or as a consequence of sharing living arrangements.</p> <ul>\n  <li>'FAT' - Father - Pāpā</li>\n  <li>'UNC' - Uncle - Matua Kēkē</li>\n  <li>'LEG' - Legal Guardian - Kaitiaki ā-ture</li>\n  <li>'HOS' - Host Parent - Whānau Tiaki</li>\n  <li>'BRO' - Brother - Tungāne</li>\n  <li>'FRI' - Family Friend - Hoa o te whānau</li>\n  <li>'SIS' - Sister - Tuahine</li>\n  <li>'OTH' - Other - He mea kē</li>\n  <li>'MOT' - Mother - Māmā</li>\n  <li>'GRM' - Grandmother - Kuia</li>\n  <li>'AUN' - Aunt - Whaea</li>\n  <li>'STF' - Stepfather - Pāpā Whakaangi</li>\n</ul> plus 22 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsRelationshipToStudentType\">NZCodeSetsRelationshipToStudentType</a>",
        "enum": [
          "FAT",
          "UNC",
          "LEG",
          "HOS",
          "BRO",
          "FRI",
          "SIS",
          "OTH",
          "MOT",
          "GRM",
          "AUN",
          "STF",
          "NOT",
          "GRF",
          "STM",
          "WHA",
          "CAS",
          "EXT",
          "FOF",
          "FOM",
          "FOS",
          "GDF",
          "GDM",
          "GDP",
          "HOF",
          "HOM",
          "INT",
          "PAI",
          "PAP",
          "PAR",
          "GRP",
          "SIB",
          "STP",
          "TRU"
        ]
      },
      "NZCodeSetsStudentContactRelationshipStatus": {
        "type": "string",
        "title": "Student Contact Relationship Status",
        "description": "<p>Code set denoting the status of the student contact's relationship.</p> <p>Set to Active when: StartDate => today's date and EndDate is NULL or EndDate > than today's date.</p> <p>Set to Inactive when: StartDate < today's date or EndDate =< today's date.</p> <ul>\n  <li>'A' - Active</li>\n  <li>'I' - Inactive</li>\n</ul>",
        "enum": [
          "A",
          "I"
        ]
      },
      "NZCodeSetsNameUsageType": {
        "type": "string",
        "title": "Name Usage Type",
        "description": "<p>A standardised method of describing the usage of a name by a person. Where a person has more than one current name, the usage type indicates which name may be used according to the purpose.</p> <p>Code values are based on SIF Australia 3.4.</p> <ul>\n  <li>'PRF' - Preferred Name</li>\n  <li>'FON' - Foreign Official Name</li>\n  <li>'PRV' - Previous name</li>\n  <li>'AKA' - Also Known As</li>\n  <li>'BTH' - Name at Birth</li>\n  <li>'LGL' - Legal Name</li>\n</ul>",
        "enum": [
          "PRF",
          "FON",
          "PRV",
          "AKA",
          "BTH",
          "LGL"
        ]
      },
      "NZCodeSetsGender": {
        "type": "string",
        "title": "Gender",
        "description": "<p>A Person may identify as having a Gender (or Gender Identity). Biological sex and sexual orientation are related but different concepts. Sourced from Statistics NZ Standard for Gender Identity</p> <ul>\n  <li>'1' - Male - Tāne</li>\n  <li>'2' - Female - Wahine</li>\n  <li>'3' - Gender Diverse - Ira tāngata kōwhiri kore</li>\n  <li>'31' - Transgender Male to Female - Whakawahine</li>\n  <li>'32' - Transgender Female to Male - Tangata ira tāne</li>\n  <li>'9' - Not Willing to Disclose - Kāre e taea te Whakaatu</li>\n</ul>",
        "enum": [
          "1",
          "2",
          "3",
          "31",
          "32",
          "9"
        ]
      },
      "NZCodeSetsVerificationSource": {
        "type": "string",
        "title": "Verification Source",
        "description": "<p>Records the source of the identity or eligibility verification, that has been made. Mostly it is merely a record of the kind of document that has been presented; but occasionally it is down to Principal or Ministry discretion / approval.</p> <ul>\n  <li>'NZBIR' - NZ Birth Certificate</li>\n  <li>'NZBCO' - NZ Birth Certificate (with confirmation of NZ Citizen by birth)</li>\n  <li>'NZPAS' - NZ Passport</li>\n  <li>'NZCIT' - NZ Citizenship Certificate</li>\n  <li>'BIRCE' - Birth Certificate (COK, TKL, NIU)</li>\n  <li>'BCCON' - Birth Certificate (COK, TKL, NIU) (with confirmation of NZ Citizen by birth)</li>\n  <li>'CENAT' - Certification of Naturalisation (COK, TKL, NIU)</li>\n  <li>'CAREG' - Certification of Registration (COK, TKL, NIU)</li>\n  <li>'LETCO' - Letter of Confirmation (COK, TKL, NIU)</li>\n  <li>'OTHPA' - Other Passport with NZ residence class Visa</li>\n  <li>'AUSPA' - Australian Passport</li>\n  <li>'VISDO' - Visa Domestic</li>\n</ul> plus 3 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsVerificationSourceType\">NZCodeSetsVerificationSourceType</a>",
        "enum": [
          "NZBIR",
          "NZBCO",
          "NZPAS",
          "NZCIT",
          "BIRCE",
          "BCCON",
          "CENAT",
          "CAREG",
          "LETCO",
          "OTHPA",
          "AUSPA",
          "VISDO",
          "VISST",
          "PRINC",
          "MOEAP"
        ]
      },
      "NZCodeSetsLanguageUsage": {
        "type": "string",
        "title": "Language Usage",
        "description": "<p>A standardised method of describing the usage of a language by a person, potentially indicating capability and preference for the language.</p> <ul>\n  <li>'FL' - First Language - Reo Tuatahi</li>\n  <li>'SL' - Secondary Language - Reo Tuarua</li>\n  <li>'SH' - Spoken At Home - Reo Kāinga</li>\n</ul>",
        "enum": [
          "FL",
          "SL",
          "SH"
        ]
      },
      "NZCodeSetsLanguage": {
        "type": "string",
        "title": "Language",
        "description": "<p>Language refers to recognised human communication systems, typically oral and/or written. Sourced from Statistics NZ - Language Standard Classification 1999 v2.0.0</p> <ul>\n  <li>'NZS01' - Germanic</li>\n  <li>'NZS011' - West Germanic</li>\n  <li>'NZS01100' - West Germanic not further defined</li>\n  <li>'NZS01110' - Afrikaans</li>\n  <li>'NZS01111' - Dutch</li>\n  <li>'NZS01112' - English - Pākehā</li>\n  <li>'NZS01113' - German</li>\n  <li>'NZS01114' - Friesian</li>\n  <li>'NZS01115' - Yiddish</li>\n  <li>'NZS01116' - Scots</li>\n  <li>'NZS01199' - West Germanic not elsewhere classified</li>\n  <li>'NZS012' - North Germanic</li>\n</ul> plus 252 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsLanguageType\">NZCodeSetsLanguageType</a>",
        "enum": [
          "NZS01",
          "NZS011",
          "NZS01100",
          "NZS01110",
          "NZS01111",
          "NZS01112",
          "NZS01113",
          "NZS01114",
          "NZS01115",
          "NZS01116",
          "NZS01199",
          "NZS012",
          "NZS01200",
          "NZS01210",
          "NZS01211",
          "NZS01212",
          "NZS01213",
          "NZS01299",
          "NZS02",
          "NZS021",
          "NZS02100",
          "NZS02110",
          "NZS02111",
          "NZS02112",
          "NZS02113",
          "NZS02114",
          "NZS02115",
          "NZS02199",
          "NZS03",
          "NZS031",
          "NZS03110",
          "NZS04",
          "NZS041",
          "NZS04100",
          "NZS04110",
          "NZS04111",
          "NZS04199",
          "NZS042",
          "NZS04200",
          "NZS04210",
          "NZS04211",
          "NZS04212",
          "NZS04213",
          "NZS04214",
          "NZS04215",
          "NZS04216",
          "NZS04217",
          "NZS04218",
          "NZS04219",
          "NZS04299",
          "NZS05",
          "NZS051",
          "NZS05110",
          "NZS06",
          "NZS061",
          "NZS06110",
          "NZS07",
          "NZS071",
          "NZS07100",
          "NZS07110",
          "NZS07111",
          "NZS07112",
          "NZS07113",
          "NZS07114",
          "NZS07115",
          "NZS07116",
          "NZS07117",
          "NZS07118",
          "NZS07119",
          "NZS07120",
          "NZS07121",
          "NZS07122",
          "NZS07123",
          "NZS07199",
          "NZS08",
          "NZS081",
          "NZS08100",
          "NZS08110",
          "NZS08111",
          "NZS08112",
          "NZS08113",
          "NZS08199",
          "NZS09",
          "NZS091",
          "NZS09100",
          "NZS09110",
          "NZS09111",
          "NZS09112",
          "NZS09199",
          "NZS10",
          "NZS101",
          "NZS10100",
          "NZS10110",
          "NZS10111",
          "NZS10199",
          "NZS11",
          "NZS111",
          "NZS11100",
          "NZS11110",
          "NZS11111",
          "NZS11112",
          "NZS11199",
          "NZS12",
          "NZS121",
          "NZS12100",
          "NZS12110",
          "NZS12111",
          "NZS12112",
          "NZS12113",
          "NZS12199",
          "NZS13",
          "NZS131",
          "NZS13100",
          "NZS13110",
          "NZS13111",
          "NZS13112",
          "NZS13113",
          "NZS13114",
          "NZS13115",
          "NZS13199",
          "NZS132",
          "NZS13200",
          "NZS13210",
          "NZS13211",
          "NZS13299",
          "NZS14",
          "NZS141",
          "NZS14100",
          "NZS14110",
          "NZS14199",
          "NZS142",
          "NZS14200",
          "NZS14210",
          "NZS14299",
          "NZS15",
          "NZS151",
          "NZS15100",
          "NZS15110",
          "NZS15111",
          "NZS15112",
          "NZS15199",
          "NZS16",
          "NZS161",
          "NZS16100",
          "NZS16110",
          "NZS16111",
          "NZS16112",
          "NZS16113",
          "NZS16114",
          "NZS16115",
          "NZS16116",
          "NZS16117",
          "NZS16118",
          "NZS16119",
          "NZS16120",
          "NZS16199",
          "NZS162",
          "NZS16210",
          "NZS163",
          "NZS16300",
          "NZS16310",
          "NZS16311",
          "NZS16399",
          "NZS164",
          "NZS16410",
          "NZS17",
          "NZS171",
          "NZS17100",
          "NZS17110",
          "NZS17111",
          "NZS17112",
          "NZS17113",
          "NZS17114",
          "NZS17115",
          "NZS17116",
          "NZS17199",
          "NZS18",
          "NZS181",
          "NZS18100",
          "NZS18110",
          "NZS18199",
          "NZS182",
          "NZS18200",
          "NZS18210",
          "NZS18211",
          "NZS18212",
          "NZS18213",
          "NZS18214",
          "NZS18215",
          "NZS18299",
          "NZS183",
          "NZS18300",
          "NZS18310",
          "NZS18399",
          "NZS19",
          "NZS191",
          "NZS19100",
          "NZS19110",
          "NZS19111",
          "NZS19112",
          "NZS19199",
          "NZS192",
          "NZS19200",
          "NZS19210",
          "NZS19299",
          "NZS20",
          "NZS201",
          "NZS20100",
          "NZS20110",
          "NZS20111",
          "NZS20112",
          "NZS20113",
          "NZS20114",
          "NZS20115",
          "NZS20116",
          "NZS20117",
          "NZS20118",
          "NZS20199",
          "NZS21",
          "NZS211",
          "NZS21110",
          "NZS212",
          "NZS21210",
          "NZS213",
          "NZS21310",
          "NZS219",
          "NZS21999",
          "NZS22",
          "NZS221",
          "NZS22110",
          "NZS222",
          "NZS22210",
          "NZS223",
          "NZS22310",
          "NZS224",
          "NZS22400",
          "NZS22410",
          "NZS22499",
          "NZS225",
          "NZS22510",
          "NZS226",
          "NZS22610",
          "NZS229",
          "NZS22910",
          "NZS23",
          "NZS231",
          "NZS23100",
          "NZS23110",
          "NZS23199",
          "NZS24",
          "NZS241",
          "NZS24100",
          "NZS24110",
          "NZS24111",
          "NZS24112",
          "NZS24113",
          "NZS24114",
          "NZS24199",
          "NZS44",
          "NZS55",
          "NZS66",
          "NZS77",
          "NZS88",
          "NZS99"
        ]
      },
      "NZCodeSetsEthnicity": {
        "type": "string",
        "title": "Ethnicity",
        "description": "<p>Ethnicity is the ethnic group or groups that people identify with or feel they belong to. Ethnicity is a measure of cultural affiliation, as opposed to race, ancestry, nationality or citizenship. Ethnicity is self perceived and people can belong to more than one ethnic group.</p> <p>The permissible values consists of any value from the Statistics NZ - Ethnicity New Zealand Standard Classification 2005 v2.0.0 Depending on usage, ethnicity may be defined at levels 1 to 4. </p> <ul>\n  <li>'1' - European - Ūropi</li>\n  <li>'10' - European nfd - Ūropi</li>\n  <li>'100' - European nfd - Ūropi</li>\n  <li>'10000' - European nfd - Ūropi</li>\n  <li>'11' - New Zealand European - Pākehā</li>\n  <li>'111' - New Zealand European - Pākehā</li>\n  <li>'11111' - New Zealand European - Pākehā</li>\n  <li>'12' - Other European</li>\n  <li>'121' - British and Irish - Ingarangi me Airana</li>\n  <li>'12100' - British nfd</li>\n  <li>'12111' - Celtic nfd</li>\n  <li>'12112' - Channel Islander</li>\n</ul> plus 303 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsEthnicityType\">NZCodeSetsEthnicityType</a>",
        "enum": [
          "1",
          "10",
          "100",
          "10000",
          "11",
          "111",
          "11111",
          "12",
          "121",
          "12100",
          "12111",
          "12112",
          "12113",
          "12114",
          "12115",
          "12116",
          "12117",
          "12118",
          "12119",
          "12120",
          "12121",
          "12199",
          "122",
          "12211",
          "123",
          "12311",
          "124",
          "12411",
          "125",
          "12500",
          "12511",
          "12512",
          "12513",
          "12514",
          "12515",
          "12516",
          "12599",
          "126",
          "12611",
          "127",
          "12711",
          "128",
          "12811",
          "129",
          "12911",
          "12912",
          "12913",
          "12914",
          "12915",
          "12916",
          "12917",
          "12918",
          "12919",
          "12920",
          "12921",
          "12922",
          "12923",
          "12924",
          "12925",
          "12926",
          "12927",
          "12928",
          "12929",
          "12930",
          "12931",
          "12932",
          "12933",
          "12934",
          "12935",
          "12936",
          "12937",
          "12938",
          "12939",
          "12940",
          "12941",
          "12942",
          "12943",
          "12944",
          "12945",
          "12946",
          "12947",
          "12948",
          "12949",
          "12950",
          "12999",
          "2",
          "21",
          "211",
          "21111",
          "3",
          "30",
          "300",
          "30000",
          "31",
          "311",
          "31111",
          "32",
          "321",
          "32100",
          "32111",
          "32112",
          "32113",
          "32114",
          "32115",
          "32116",
          "32117",
          "32118",
          "32119",
          "32120",
          "32121",
          "33",
          "331",
          "33111",
          "34",
          "341",
          "34111",
          "35",
          "351",
          "35111",
          "36",
          "361",
          "36111",
          "37",
          "371",
          "37111",
          "37112",
          "37113",
          "37114",
          "37115",
          "37116",
          "37117",
          "37118",
          "37119",
          "37120",
          "37121",
          "37122",
          "37123",
          "37124",
          "37125",
          "37126",
          "37127",
          "37128",
          "37129",
          "37130",
          "37131",
          "37132",
          "37133",
          "37134",
          "37135",
          "37136",
          "37137",
          "37138",
          "37139",
          "37140",
          "37141",
          "37142",
          "37143",
          "37144",
          "37145",
          "37146",
          "37147",
          "37148",
          "37199",
          "4",
          "40",
          "400",
          "40000",
          "41",
          "410",
          "41000",
          "411",
          "41111",
          "412",
          "41211",
          "413",
          "41311",
          "414",
          "41411",
          "41412",
          "41413",
          "41414",
          "41415",
          "41499",
          "42",
          "421",
          "42100",
          "42111",
          "42112",
          "42113",
          "42114",
          "42115",
          "42116",
          "42199",
          "43",
          "431",
          "43100",
          "43111",
          "43112",
          "43113",
          "43114",
          "43115",
          "43116",
          "43117",
          "43199",
          "44",
          "441",
          "44100",
          "44111",
          "44112",
          "44199",
          "442",
          "44211",
          "443",
          "44311",
          "444",
          "44411",
          "44412",
          "44413",
          "44414",
          "44415",
          "44416",
          "44499",
          "5",
          "51",
          "511",
          "51100",
          "51111",
          "51112",
          "51113",
          "51114",
          "51115",
          "51116",
          "51117",
          "51118",
          "51119",
          "51120",
          "51121",
          "51122",
          "51123",
          "51124",
          "51125",
          "51126",
          "51127",
          "51128",
          "51199",
          "52",
          "521",
          "52100",
          "52111",
          "52112",
          "52113",
          "52114",
          "52115",
          "52116",
          "52117",
          "52118",
          "52119",
          "52120",
          "52121",
          "52122",
          "52123",
          "52124",
          "52125",
          "52126",
          "52127",
          "52128",
          "52129",
          "52130",
          "52199",
          "53",
          "531",
          "53100",
          "53112",
          "53113",
          "53114",
          "53115",
          "53116",
          "53117",
          "53118",
          "53119",
          "53120",
          "53121",
          "53122",
          "53199",
          "6",
          "61",
          "611",
          "61111",
          "61112",
          "61113",
          "61114",
          "61115",
          "61116",
          "61117",
          "61118",
          "61199",
          "9",
          "94",
          "944",
          "94444",
          "95",
          "955",
          "95555",
          "96",
          "966",
          "96666",
          "97",
          "977",
          "97777",
          "98",
          "988",
          "98888",
          "99",
          "999",
          "99999"
        ]
      },
      "NZCodeSetsIwi": {
        "type": "string",
        "title": "Iwi",
        "description": "<p>An iwi, or Māori tribe, is one of the largest kinship groupings and is generally made up of several hapū that are all descended from a common ancestor. Hapū are clusters of whānau where the whānau is usually an extended family grouping consisting of children, parents, often grandparents, and other closely related kin.</p> <p>Sourced from Statistics NZ - Iwi and Iwi related groups statistical standard v1.0.0.0</p> <ul>\n  <li>'NZS01' - Te Tai Tokerau/Tāmaki-makaurau (Northland/Auckland) Region Iwi - Te Tai Tokerau/Tāmaki-makaurau</li>\n  <li>'NZS0101' - Te Aupōuri - Te Aupōuri</li>\n  <li>'NZS0102' - Ngāti Kahu - Ngāti Kahu</li>\n  <li>'NZS0103' - Ngāti Kurī - Ngāti Kurī</li>\n  <li>'NZS0104' - Ngāpuhi - Ngāpuhi</li>\n  <li>'NZS0105' - Ngāpuhi ki Whaingaroa-Ngāti Kahu ki Whaingaroa - Ngāpuhi ki Whaingaroa-Ngāti Kahu ki Whaingaroa</li>\n  <li>'NZS0106' - Te Rarawa - Te Rarawa</li>\n  <li>'NZS0107' - Ngāi Takoto - Ngāi Takoto</li>\n  <li>'NZS0108' - Ngāti Wai - Ngāti Wai</li>\n  <li>'NZS0109' - Ngāti Whātua (not Ōrākei or Kaipara) - Ngāti Whātua (i tua atu i Ōrākei, i Kaipara hoki)</li>\n  <li>'NZS0110' - Te Kawerau ā Maki - Te Kawerau ā Maki</li>\n  <li>'NZS0111' - Te Uri-o-Hau - Te Uri-o-Hau</li>\n</ul> plus 188 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsIwiType\">NZCodeSetsIwiType</a>",
        "enum": [
          "NZS01",
          "NZS0101",
          "NZS0102",
          "NZS0103",
          "NZS0104",
          "NZS0105",
          "NZS0106",
          "NZS0107",
          "NZS0108",
          "NZS0109",
          "NZS0110",
          "NZS0111",
          "NZS0112",
          "NZS0113",
          "NZS0114",
          "NZS0115",
          "NZS0116",
          "NZS0117",
          "NZS0118",
          "NZS0119",
          "NZS02",
          "NZS0201",
          "NZS0202",
          "NZS0203",
          "NZS0204",
          "NZS0205",
          "NZS0206",
          "NZS0207",
          "NZS0208",
          "NZS0210",
          "NZS0211",
          "NZS0212",
          "NZS03",
          "NZS0301",
          "NZS0302",
          "NZS0303",
          "NZS0304",
          "NZS0305",
          "NZS0306",
          "NZS0307",
          "NZS0308",
          "NZS0309",
          "NZS0310",
          "NZS0311",
          "NZS04",
          "NZS0401",
          "NZS0402",
          "NZS0403",
          "NZS0404",
          "NZS0405",
          "NZS0406",
          "NZS0407",
          "NZS0408",
          "NZS0409",
          "NZS0410",
          "NZS0411",
          "NZS0412",
          "NZS0413",
          "NZS0414",
          "NZS0415",
          "NZS05",
          "NZS0501",
          "NZS0502",
          "NZS0503",
          "NZS0504",
          "NZS0505",
          "NZS0506",
          "NZS0507",
          "NZS0508",
          "NZS0509",
          "NZS0510",
          "NZS0511",
          "NZS0512",
          "NZS0513",
          "NZS06",
          "NZS0601",
          "NZS0602",
          "NZS0603",
          "NZS0604",
          "NZS0605",
          "NZS07",
          "NZS0701",
          "NZS0702",
          "NZS0703",
          "NZS0704",
          "NZS0706",
          "NZS0707",
          "NZS0708",
          "NZS0709",
          "NZS0710",
          "NZS0711",
          "NZS0712",
          "NZS0713",
          "NZS0714",
          "NZS0715",
          "NZS0716",
          "NZS08",
          "NZS0801",
          "NZS0802",
          "NZS0803",
          "NZS0804",
          "NZS0805",
          "NZS0806",
          "NZS0807",
          "NZS0808",
          "NZS0809",
          "NZS0810",
          "NZS09",
          "NZS0901",
          "NZS0902",
          "NZS0903",
          "NZS0904",
          "NZS0905",
          "NZS0906",
          "NZS0907",
          "NZS0908",
          "NZS0909",
          "NZS0910",
          "NZS0911",
          "NZS10",
          "NZS1001",
          "NZS1002",
          "NZS1003",
          "NZS1004",
          "NZS1005",
          "NZS1006",
          "NZS1007",
          "NZS1008",
          "NZS1009",
          "NZS11",
          "NZS1101",
          "NZS1102",
          "NZS1103",
          "NZS1104",
          "NZS1105",
          "NZS1106",
          "NZS1107",
          "NZS1108",
          "NZS1109",
          "NZS1110",
          "NZS1111",
          "NZS1112",
          "NZS1113",
          "NZS20",
          "NZS2001",
          "NZS2002",
          "NZS2003",
          "NZS2004",
          "NZS2005",
          "NZS2006",
          "NZS2007",
          "NZS2008",
          "NZS2009",
          "NZS2010",
          "NZS2011",
          "NZS2012",
          "NZS2013",
          "NZS2014",
          "NZS2015",
          "NZS2016",
          "NZS2017",
          "NZS2018",
          "NZS21",
          "NZS2101",
          "NZS2102",
          "NZS2103",
          "NZS2104",
          "NZS2105",
          "NZS2106",
          "NZS2107",
          "NZS2108",
          "NZS2109",
          "NZS2110",
          "NZS2111",
          "NZS2112",
          "NZS2113",
          "NZS22",
          "NZS2201",
          "NZS23",
          "NZS2301",
          "NZS2302",
          "NZS2303",
          "NZS2304",
          "NZS2305",
          "NZS2306",
          "NZS2307",
          "NZS2308",
          "NZS2309",
          "NZS2310",
          "NZS2311",
          "NZS44",
          "NZS4444",
          "NZS55",
          "NZS5555",
          "NZS77",
          "NZS7777",
          "NZS88",
          "NZS8888",
          "NZS99",
          "NZS9999"
        ]
      },
      "NZCodeSetsHealthcareServiceType": {
        "type": "string",
        "title": "Healthcare Service Type",
        "description": "<p>Code denoting the type of healthcare service provided by a StudentContact.</p> <ul>\n  <li>'DOC' - Doctor</li>\n  <li>'DEN' - Dentist</li>\n  <li>'THE' - Therapist</li>\n  <li>'OTH' - Other</li>\n</ul>",
        "enum": [
          "DOC",
          "DEN",
          "THE",
          "OTH"
        ]
      },
      "NZCodeSetsLanguageProficiencyType": {
        "type": "string",
        "title": "Language Proficiency Type",
        "description": "<p>Code set denoting a type of language proficiency, e.g. speaking, writing reading.</p> <ul>\n  <li>'SP' - Speaking</li>\n  <li>'RE' - Reading</li>\n  <li>'WR' - Writing</li>\n</ul>",
        "enum": [
          "SP",
          "RE",
          "WR"
        ]
      },
      "NZCodeSetsLanguageProficiencyLevel": {
        "type": "string",
        "title": "Language Proficiency Level",
        "description": "<p>The language proficiency level.</p> <ul>\n  <li>'NO' - None</li>\n  <li>'BE' - Beginner</li>\n  <li>'IN' - Intermediate</li>\n  <li>'AD' - Advanced</li>\n</ul>",
        "enum": [
          "NO",
          "BE",
          "IN",
          "AD"
        ]
      },
      "NZCodeSetsSchoolManagementSystem": {
        "type": "string",
        "title": "School Management System",
        "description": "<p>A code list denoting the School Management Systems (SMS) that are in use by Providers.</p> <ul>\n  <li>'ASS' - Assembly</li>\n  <li>'ETA' - eTAP</li>\n  <li>'INT' - INTEGRATOR</li>\n  <li>'KAM' - KAMAR</li>\n  <li>'LIN' - LINC-ED</li>\n  <li>'MUS' - MUSAC edge</li>\n  <li>'PCS' - PCSchool</li>\n  <li>'SYN' - Synergetic</li>\n</ul>",
        "enum": [
          "ASS",
          "ETA",
          "INT",
          "KAM",
          "LIN",
          "MUS",
          "PCS",
          "SYN"
        ]
      },
      "NZCodeSetsBiographicChangeReason": {
        "type": "string",
        "title": "Biographic Change Reason",
        "description": "<p>Code set denoting the reasons for which a persons biographical data may have changed.</p> <ul>\n  <li>'CF' - Changed by family (PA request) - He Panoni Nā te Whānau</li>\n  <li>'EI' - Entered incorrectly - I hē te whakauru</li>\n  <li>'ON' - Official name change - Kua mana te panoni ingoa</li>\n</ul>",
        "enum": [
          "CF",
          "EI",
          "ON"
        ]
      },
      "NZCodeSetsAddressType": {
        "type": "string",
        "title": "Address Type",
        "description": "<p> Address type allows an address to be categorised according to its component structure. Address type can be used to build processing rules for validating, managing and presenting addresses. Address type is independent of the use of the address by any party. To describe how a party may use an address (residence, billing, term address etc) see AddressRoleType </p> <ul>\n  <li>'TH' - Thoroughfare</li>\n  <li>'RU' - Rural Post Delivery</li>\n  <li>'DE' - Delivery Service</li>\n  <li>'WA' - Water</li>\n  <li>'FO' - Foreign Address</li>\n</ul>",
        "enum": [
          "TH",
          "RU",
          "DE",
          "WA",
          "FO"
        ]
      },
      "NZCodeSetsSpatialUnitType": {
        "type": "string",
        "title": "Spatial Unit Type",
        "description": "<p>A classification of geographical boundaries or statistical areas as defined by Statistics NZ’s geographic hierarchy.</p> <ul>\n  <li>'AE' - Area Unit</li>\n  <li>'GE' - General Electoral District</li>\n  <li>'CB' - Community Board</li>\n  <li>'ME' - Māori Electoral District</li>\n  <li>'MB' - Mesh Block</li>\n  <li>'RC' - Regional Council</li>\n  <li>'TA' - Territorial Authority</li>\n  <li>'UA' - Urban Area</li>\n  <li>'WA' - Ward</li>\n</ul>",
        "enum": [
          "AE",
          "GE",
          "CB",
          "ME",
          "MB",
          "RC",
          "TA",
          "UA",
          "WA"
        ]
      },
      "NZCodeSetsOperationalStatus": {
        "type": "string",
        "title": "Operational Status",
        "description": "<p>Indicates the operational status of an organisation.</p> <ul>\n  <li>'C' - Closed</li>\n  <li>'O' - Open</li>\n  <li>'P' - Proposed</li>\n  <li>'28000' - Proposed</li>\n  <li>'28001' - Open</li>\n  <li>'28002' - Closed</li>\n  <li>'28003' - Active</li>\n  <li>'28004' - Inactive</li>\n  <li>'28005' - Dissolved while Commissioner in place</li>\n  <li>'28006' - Operating with Limited Statutory Manager</li>\n  <li>'28007' - Merging Board</li>\n  <li>'28008' - Not Applicable</li>\n</ul> plus 3 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsOperationalStatusType\">NZCodeSetsOperationalStatusType</a>",
        "enum": [
          "C",
          "O",
          "P",
          "28000",
          "28001",
          "28002",
          "28003",
          "28004",
          "28005",
          "28006",
          "28007",
          "28008",
          "28009",
          "28010",
          "28011"
        ]
      },
      "NZCodeSetsOperationalStatusReason": {
        "type": "string",
        "title": "Operational Status Reason",
        "description": "<p>Code set denoting the reasons the operational status of an organisation may change.</p> <ul>\n  <li>'30000' - Merger</li>\n  <li>'30001' - Change of Type</li>\n  <li>'30002' - Declining Roll</li>\n  <li>'30003' - Financial Reasons</li>\n  <li>'30004' - Loss of Tenancy</li>\n  <li>'30005' - Moved Premises</li>\n  <li>'30006' - Never Opened</li>\n  <li>'30007' - Licence Suspended</li>\n  <li>'30008' - Ministry Withdrawal of Licence Due to Non-compliance</li>\n  <li>'30009' - Owner Retired / Disestablished</li>\n  <li>'30010' - Temporarily Closed</li>\n  <li>'30011' - Merger of State Schools - Forced by Minister</li>\n</ul> plus 13 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsOperationalStatusReasonType\">NZCodeSetsOperationalStatusReasonType</a>",
        "enum": [
          "30000",
          "30001",
          "30002",
          "30003",
          "30004",
          "30005",
          "30006",
          "30007",
          "30008",
          "30009",
          "30010",
          "30011",
          "30012",
          "30013",
          "30014",
          "30015",
          "30016",
          "30017",
          "30019",
          "30020",
          "30021",
          "30022",
          "30024",
          "30025",
          "30026"
        ]
      },
      "NZCodeSetsSchoolCoEdStatus": {
        "type": "string",
        "title": "School Co-Ed Status",
        "description": "<p>A summary description of the gender of students that a school accepts, indicating the type of school from a gender perspective.</p> <ul>\n  <li>'COED' - Co-Educational</li>\n  <li>'GIRL' - Girls School</li>\n  <li>'BOYS' - Boys School</li>\n  <li>'PRCO' - Primary Co-Ed, Secondary Girls</li>\n  <li>'JUBO' - Junior Boys, Senior Co-Ed</li>\n</ul>",
        "enum": [
          "COED",
          "GIRL",
          "BOYS",
          "PRCO",
          "JUBO"
        ]
      },
      "NZCodeSetsEducationRegion": {
        "type": "string",
        "title": "Education Region",
        "description": "Regions of New Zealand defined by Ministry of Education for administrative purposes. <ul>\n  <li>'TAIT' - Tai Tokerau - Tai Tokerau</li>\n  <li>'AUCK' - Auckland - Tāmaki Makaurau</li>\n  <li>'WAIK' - Waikato - Waikato</li>\n  <li>'BOPW' - Bay of Plenty, Waiariki - Te Moana a Toitehuatahi, Waiariki</li>\n  <li>'HAWK' - Hawke's Bay, Tairāwhiti - Te Matau a Māui, Tairāwhiti</li>\n  <li>'TARA' - Taranaki, Whanganui, Manawatū - Taranaki, Whanganui, Manawatū</li>\n  <li>'WELL' - Wellington - Te Whanganui a Tara</li>\n  <li>'NELS' - Nelson, Marlborough, West Coast - Whakatū, Te Tau Ihu o te Waka-a-Māui, Te Tai Poutini</li>\n  <li>'CANT' - Canterbury, Chatham Islands - Waitaha, Wharekauri</li>\n  <li>'OTAG' - Otago, Southland - Otākou, Murihiku</li>\n  <li>'12000' - Missing</li>\n  <li>'12005' - Correspondence</li>\n</ul> plus 11 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsEducationRegionType\">NZCodeSetsEducationRegionType</a>",
        "enum": [
          "TAIT",
          "AUCK",
          "WAIK",
          "BOPW",
          "HAWK",
          "TARA",
          "WELL",
          "NELS",
          "CANT",
          "OTAG",
          "12000",
          "12005",
          "12006",
          "12007",
          "12008",
          "12009",
          "12010",
          "12011",
          "12012",
          "12013",
          "12014",
          "12015",
          "12016"
        ]
      },
      "NZCodeSetsSpecialEducationDistrict": {
        "type": "string",
        "title": "Special Education District",
        "description": "Special Education district a provider may belong to <ul>\n  <li>'182000' - Tai Tokerau - Tai Tokerau</li>\n  <li>'182001' - North West</li>\n  <li>'182002' - Manukau</li>\n  <li>'182003' - Auckland - Tāmaki Makaurau</li>\n  <li>'182004' - Waikato - Waikato</li>\n  <li>'182005' - Bay of Plenty West</li>\n  <li>'182006' - Bay of Plenty, Waiariki - Te Moana a Toitehuatahi, Waiariki</li>\n  <li>'182007' - Gisborne</li>\n  <li>'182008' - Hawke's Bay, Tairāwhiti - Te Matau a Māui, Tairāwhiti</li>\n  <li>'182009' - Taranaki - Taranaki</li>\n  <li>'182010' - Taranaki, Whanganui, Manawatū - Taranaki, Whanganui, Manawatū</li>\n  <li>'182011' - Wellington - Te Whanganui a Tara</li>\n</ul> plus 4 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsSpecialEducationDistrictType\">NZCodeSetsSpecialEducationDistrictType</a>",
        "enum": [
          "182000",
          "182001",
          "182002",
          "182003",
          "182004",
          "182005",
          "182006",
          "182007",
          "182008",
          "182009",
          "182010",
          "182011",
          "182012",
          "182013",
          "182014",
          "182015"
        ]
      },
      "NZCodeSetsOrganisationType": {
        "type": "string",
        "title": "Organisation Type",
        "description": "Describes the organisation type of the provider, indicating the services provided, function or purpose of the organisation. <ul>\n  <li>'35000' - Early Childhood Education (ECE) - Kura Kōhungahunga</li>\n  <li>'10052' - Kindergarten Association</li>\n  <li>'10053' - Playcentre Association</li>\n  <li>'10054' - Commercial ECE Service Provider</li>\n  <li>'10055' - Other ECE Service Provider</li>\n  <li>'1' - Casual-Education and Care</li>\n  <li>'2' - Free Kindergarten</li>\n  <li>'3' - Hospital Based ECE</li>\n  <li>'4' - Playcentre</li>\n  <li>'6' - Education and Care Service</li>\n  <li>'7' - Homebased Network</li>\n  <li>'8' - Licence Exempt Kohanga Reo</li>\n</ul> plus 79 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsOrganisationTypeType\">NZCodeSetsOrganisationTypeType</a>",
        "enum": [
          "35000",
          "10052",
          "10053",
          "10054",
          "10055",
          "1",
          "2",
          "3",
          "4",
          "6",
          "7",
          "8",
          "9",
          "10000",
          "10001",
          "10002",
          "10003",
          "10004",
          "10005",
          "10007",
          "10008",
          "10009",
          "35003",
          "10056",
          "10057",
          "20",
          "21",
          "22",
          "23",
          "30",
          "32",
          "34",
          "35",
          "40",
          "41",
          "43",
          "10023",
          "10024",
          "10025",
          "10026",
          "10027",
          "10028",
          "10029",
          "10030",
          "10031",
          "10032",
          "10033",
          "10034",
          "10036",
          "35002",
          "10010",
          "10011",
          "10012",
          "10013",
          "10014",
          "10015",
          "10016",
          "10017",
          "10018",
          "10019",
          "10020",
          "10021",
          "10022",
          "10035",
          "10037",
          "10038",
          "10039",
          "10040",
          "10041",
          "10042",
          "10043",
          "10044",
          "10045",
          "10047",
          "10048",
          "10049",
          "10050",
          "10051",
          "10058",
          "10060",
          "10062",
          "10063",
          "999",
          "35007",
          "10059",
          "998",
          "35008",
          "10061",
          "10065",
          "996",
          "10064"
        ]
      },
      "NZCodeSetsOrganisationSectorRole": {
        "type": "string",
        "title": "Organisation Sector Role",
        "description": "<p>Describes the roles for organisations within the education sector, e.g. School Sector Institution, Learnign Support Cluster, etc.</p> <ul>\n  <li>'35000' - Licenced ECE Service</li>\n  <li>'35001' - Playgroup</li>\n  <li>'35002' - Tertiary Sector Institution</li>\n  <li>'35003' - School Sector Institution</li>\n  <li>'35004' - Other Organisation Type</li>\n  <li>'35005' - ECE Service Provider</li>\n  <li>'35006' - Board of Trustees</li>\n  <li>'35007' - Local Office</li>\n  <li>'35008' - Community of Schools</li>\n  <li>'35009' - Learning Support Cluster</li>\n</ul>",
        "enum": [
          "35000",
          "35001",
          "35002",
          "35003",
          "35004",
          "35005",
          "35006",
          "35007",
          "35008",
          "35009"
        ]
      },
      "NZCodeSetsCommunicationUsage": {
        "type": "string",
        "title": "Communication Usage",
        "description": "<p>A standardised method of describing how (or when) a communication channel may be used to communicate with a party. Where a party has more than one electronic contact type (eg several phone numbers), this provides context for deciding which to use. A communication usage type may apply to a phone number, email address or generic communication channel.</p> <ul>\n  <li>'MED' - Medical Incident</li>\n  <li>'SMS' - SMS/TXT</li>\n  <li>'UNE' - Unexplained Absence</li>\n  <li>'INT' - Intended Absence</li>\n</ul>",
        "enum": [
          "MED",
          "SMS",
          "UNE",
          "INT"
        ]
      },
      "NZCodeSetsOrganisationContactRole": {
        "type": "string",
        "title": "Organisation Contact Role",
        "description": "<p>The role played by a person in an organisation where that person is recorded as a contact. The role definition is used to recognise similar functions across organisations, however individuals with the same role may be given different position titles that differ from the generic role description. For example, a principal may have a title of ‘headmaster’.</p> <ul>\n  <li>'PRI' - Principal</li>\n  <li>'ACT' - Acting Principal</li>\n  <li>'DIR' - Director</li>\n  <li>'ECE' - ECE Management Contact</li>\n</ul>",
        "enum": [
          "PRI",
          "ACT",
          "DIR",
          "ECE"
        ]
      },
      "NZCodeSetsEnactedPolicy": {
        "type": "string",
        "title": "Enacted Policy",
        "description": "<p>A policy that a school may choose to implement as part of its operating rules. For example, policies may concern student behaviour, clothing/appearance, wellbeing and new entrant enrolment.</p> <ul>\n  <li>'AE' - Age Entry</li>\n  <li>'CE' - Cohort Entry</li>\n</ul>",
        "enum": [
          "AE",
          "CE"
        ]
      },
      "NZCodeSetsProviderAuthority": {
        "type": "string",
        "title": "Provider Authority",
        "description": "The authority by which the provider is authorised to provide education services. Describes the ownership/operation or registration status of an educational institution. <ul>\n  <li>'STATE' - State</li>\n  <li>'STINT' - State: Integrated</li>\n  <li>'PRFUL' - Private: Fully Registered</li>\n  <li>'PRPRO' - Private: Provisionally Registered</li>\n  <li>'OTVOT' - Other: Vote Education</li>\n  <li>'PASCH' - Partnership School</li>\n</ul>",
        "enum": [
          "STATE",
          "STINT",
          "PRFUL",
          "PRPRO",
          "OTVOT",
          "PASCH"
        ]
      },
      "NZCodeSetsSchoolClassification": {
        "type": "string",
        "title": "School Classification",
        "description": "<p>Code set denoting the classifications that can be given to a school.</p> <ul>\n  <li>'52000' - Kura Teina</li>\n  <li>'52001' - Designated Charter School</li>\n  <li>'52002' - Secondary Māori Boarding School</li>\n  <li>'52003' - Bilingual School</li>\n  <li>'52004' - Kura Kaupapa Māori</li>\n  <li>'52005' - School with Side School</li>\n  <li>'52006' - Alternative School</li>\n  <li>'52007' - Contributing with Year 7 and 8 Bilingual Students</li>\n  <li>'52008' - Restricted Composite (Year 7-9)</li>\n  <li>'52009' - Restricted Composite (Year 7-10)</li>\n  <li>'52010' - School with Boarding Facilities</li>\n</ul>",
        "enum": [
          "52000",
          "52001",
          "52002",
          "52003",
          "52004",
          "52005",
          "52006",
          "52007",
          "52008",
          "52009",
          "52010"
        ]
      },
      "NZCodeSetsSchoolBoardingType": {
        "type": "string",
        "title": "School Boarding Type",
        "description": "<p>Code set denoting if the school has boarding and if so, if it is for girls only, boys only or both.</p> <ul>\n  <li>'56000' - Girls Only</li>\n  <li>'56001' - Boys Only</li>\n  <li>'56002' - Both Girls and Boys</li>\n  <li>'56003' - None</li>\n</ul>",
        "enum": [
          "56000",
          "56001",
          "56002",
          "56003"
        ]
      },
      "NZCodeSetsSchoolingGender": {
        "type": "string",
        "title": "Schooling Gender",
        "description": "<p>A description of the gender of students that the school accepts at a certain year level or other instructional grouping.</p> <p> For use at the year level or course only, rather than school level. For instance a school may accept boys only in year 11 but both girls and boys at years 12 and 13.</p> <ul>\n  <li>'C' - Both Girls and Boys</li>\n  <li>'F' - Girls Only</li>\n  <li>'M' - Boys Only</li>\n  <li>'55002' - Both Girls and Boys</li>\n  <li>'55000' - Girls Only</li>\n  <li>'55001' - Boys Only</li>\n</ul>",
        "enum": [
          "C",
          "F",
          "M",
          "55002",
          "55000",
          "55001"
        ]
      },
      "NZCodeSetsECEServiceType": {
        "type": "string",
        "title": "ECEService Type",
        "description": "<p>Codes denoting the nature of an Early Childhood Education service.</p> <ul>\n  <li>'KG' - Kindergarten</li>\n  <li>'PC' - Playcentre</li>\n  <li>'KR' - Te Kohanga Reo</li>\n</ul>",
        "enum": [
          "KG",
          "PC",
          "KR"
        ]
      },
      "NZCodeSetsECEServiceProviderOwnershipType": {
        "type": "string",
        "title": "ECE Service Provider Ownership Type",
        "description": "<p>Code set denoting the type of ECE Service Provider ownership, e.g. Sole Trader, Company, Charitable Trust etc.</p> <ul>\n  <li>'18000' - Sole Trader</li>\n  <li>'18001' - Company</li>\n  <li>'18002' - Partnership</li>\n  <li>'18004' - Incorporated Society</li>\n  <li>'18005' - Statutory Trust</li>\n  <li>'18006' - Private Trust</li>\n  <li>'18007' - Community Trust</li>\n  <li>'18008' - Government Department</li>\n  <li>'18009' - State Owned Enterprise</li>\n  <li>'18010' - Health Board</li>\n  <li>'18011' - City Council/Local Authority Trading Enterprise</li>\n  <li>'18012' - Public Education Institution</li>\n</ul> plus 2 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsECEServiceProviderOwnershipTypeType\">NZCodeSetsECEServiceProviderOwnershipTypeType</a>",
        "enum": [
          "18000",
          "18001",
          "18002",
          "18004",
          "18005",
          "18006",
          "18007",
          "18008",
          "18009",
          "18010",
          "18011",
          "18012",
          "18013",
          "18014"
        ]
      },
      "NZCodeSetsOrganisationRelationshipType": {
        "type": "string",
        "title": "Organisation Relationship Type",
        "description": "<p>A code describing the nature of the relationship between a pair of Organisations.</p> <ul>\n  <li>'CAH' - Client and Host</li>\n  <li>'CAR' - Contributor and Receiver</li>\n  <li>'TPU' - Teen Parent Unit</li>\n  <li>'ACE' - Activity Centre</li>\n  <li>'LOF' - Local Office and Organisation</li>\n  <li>'EPL' - Playgroup - ECE Service Provider</li>\n  <li>'ESP' - Licenced ECEService - ECE Service Provider</li>\n  <li>'34008' - School and Attached Unit</li>\n  <li>'34028' - Community of Learning Funded Member</li>\n  <li>'34029' - Community of Learning Unfunded Member</li>\n  <li>'34037' - Learning Support Cluster Member</li>\n  <li>'34031' - School RTLB Cluster Member</li>\n</ul>",
        "enum": [
          "CAH",
          "CAR",
          "TPU",
          "ACE",
          "LOF",
          "EPL",
          "ESP",
          "34008",
          "34028",
          "34029",
          "34037",
          "34031"
        ]
      },
      "NZCodeSetsOrganisationRelationshipStatus": {
        "type": "string",
        "title": "Organisation Relationship Status",
        "description": "<p>Code set denoting the status of the relationship between the two organisations.</p> <p>Set to Active when: EffectiveDate => today's date and ExpirationDate is NULL or ExpirationDate > than today's date.</p> <p>Set to Inactive when: EffectiveDate < today's date or ExpirationDate =< today's date.</p> <ul>\n  <li>'A' - Active</li>\n  <li>'I' - Inactive</li>\n</ul>",
        "enum": [
          "A",
          "I"
        ]
      },
      "NZCodeSetsSourceOrganisationRole": {
        "type": "string",
        "title": "Source Organisation Role",
        "description": "<p>Code set denoting the role the source organisation is playing in this relationship.</p> <ul>\n  <li>'COL' - Community of Learning - Kāhui Ako</li>\n  <li>'ECE' - ECE Service Provider - Kura Kōhungahunga</li>\n  <li>'LOC' - Local Office</li>\n  <li>'LSC' - Learning Support Cluster - Kāhui Akoranga Tautoko</li>\n  <li>'RTL' - RTLB Cluster</li>\n  <li>'SCH' - School - Kura</li>\n</ul>",
        "enum": [
          "COL",
          "ECE",
          "LOC",
          "LSC",
          "RTL",
          "SCH"
        ]
      },
      "NZCodeSetsRelatedOrganisationRole": {
        "type": "string",
        "title": "Related Organisation Role",
        "description": "<p>Code set denoting the role the related organisation is playing in this relationship.</p> <ul>\n  <li>'184000' - Standard Member</li>\n  <li>'184001' - Employing Member</li>\n  <li>'184002' - Accommodating Member</li>\n  <li>'33038' - Approved Funded Member</li>\n  <li>'33039' - Joined Funded Member</li>\n  <li>'33040' - Approved Unfunded Member</li>\n  <li>'33041' - Joined Unfunded Member</li>\n  <li>'LOM' - Local Office Member</li>\n  <li>'SPM' - ECE Service Provider Member</li>\n  <li>'33046' - Attached Funded Unit</li>\n  <li>'33047' - Activity Centre</li>\n  <li>'33048' - Teen Parent Unit</li>\n</ul> plus 2 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsRelatedOrganisationRoleType\">NZCodeSetsRelatedOrganisationRoleType</a>",
        "enum": [
          "184000",
          "184001",
          "184002",
          "33038",
          "33039",
          "33040",
          "33041",
          "LOM",
          "SPM",
          "33046",
          "33047",
          "33048",
          "33044",
          "33045"
        ]
      },
      "NZCodeSetsStaffRole": {
        "type": "string",
        "title": "Staff Role",
        "description": "<p>Describes the role a staff member has at a Provider or other EducationOrganisation.</p> <ul>\n  <li>'1001' - Principal - Tumuaki</li>\n  <li>'1002' - Deputy Principal</li>\n  <li>'1003' - Associate Principal</li>\n  <li>'1004' - Assistant Principal</li>\n  <li>'1005' - Principal's Nominee (NZQA)</li>\n  <li>'1006' - Enrolment Officer</li>\n  <li>'1007' - Timetabler</li>\n  <li>'1008' - Relief Coordinator</li>\n  <li>'1009' - Office Manager</li>\n  <li>'1010' - Office Assistant</li>\n  <li>'1011' - Finance Manager</li>\n  <li>'1012' - Finance Assistant</li>\n</ul> plus 58 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsStaffRoleType\">NZCodeSetsStaffRoleType</a>",
        "enum": [
          "1001",
          "1002",
          "1003",
          "1004",
          "1005",
          "1006",
          "1007",
          "1008",
          "1009",
          "1010",
          "1011",
          "1012",
          "1013",
          "1014",
          "1015",
          "1016",
          "1017",
          "1018",
          "1101",
          "1102",
          "1103",
          "1201",
          "1202",
          "1203",
          "1204",
          "1205",
          "1206",
          "1207",
          "1208",
          "1209",
          "1210",
          "1211",
          "1301",
          "1302",
          "1303",
          "1304",
          "1305",
          "1306",
          "1307",
          "1308",
          "1309",
          "1310",
          "1401",
          "1402",
          "1403",
          "1404",
          "1405",
          "1406",
          "1407",
          "1408",
          "1409",
          "1410",
          "1411",
          "1501",
          "1502",
          "2001",
          "2002",
          "2101",
          "2102",
          "2103",
          "2104",
          "2105",
          "2106",
          "2401",
          "2402",
          "2501",
          "2502",
          "2503",
          "2504",
          "2505"
        ]
      },
      "NZCodeSetsStaffAssignmentStatus": {
        "type": "string",
        "title": "Staff Assignment Status",
        "description": "<p>Code set denoting whether or not this is an Active or Inactive assignment for the staff member.</p> <p>Set to Active when: StartDate => today's date and EndDate is NULL or EndDate > than today's date.</p> <p>Set to Inactive when: StartDate < today's date or EndDate =< today's date</p> <ul>\n  <li>'A' - Active</li>\n  <li>'I' - Inactive</li>\n</ul>",
        "enum": [
          "A",
          "I"
        ]
      },
      "NZCodeSetsTeachingGroupType": {
        "type": "string",
        "title": "Teaching Group Type",
        "description": "<p>Provides the means of identifying the type of group such as Roll class, Subject class or Homeroom and allows systems to treat them accordingly</p> <ul>\n  <li>'RC' - Roll Class</li>\n  <li>'SC' - Subject Class</li>\n  <li>'HR' - Home Room</li>\n</ul>",
        "enum": [
          "RC",
          "SC",
          "HR"
        ]
      },
      "NZCodeSetsStaffTeachingGroupRole": {
        "type": "string",
        "title": "Staff Teaching Group Role",
        "description": "<p>Code set denoting the role the staff member is performing within the teaching group, e.g. Teacher, Teacher Aide, Student Teacher.</p> <ul>\n  <li>'1201' - Subject Teacher</li>\n  <li>'1202' - Subject Release Teacher</li>\n  <li>'1203' - Subject Relief Teacher</li>\n  <li>'1204' - Subject Tutor</li>\n  <li>'1205' - Classroom Teacher</li>\n  <li>'1206' - Classroom Release Teacher</li>\n  <li>'1207' - Classroom Relief Teacher</li>\n  <li>'1209' - Itinerant Subject Teacher</li>\n  <li>'1210' - Itinerant Subject Tutor</li>\n  <li>'1211' - Specialist Classroom Teacher</li>\n  <li>'1401' - Homeroom Teacher</li>\n  <li>'1402' - Release Homeroom Teacher</li>\n</ul> plus 2 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsStaffTeachingGroupRoleType\">NZCodeSetsStaffTeachingGroupRoleType</a>",
        "enum": [
          "1201",
          "1202",
          "1203",
          "1204",
          "1205",
          "1206",
          "1207",
          "1209",
          "1210",
          "1211",
          "1401",
          "1402",
          "1403",
          "1301"
        ]
      },
      "NZCodeSetsStaffTeachingGroupAssignmentStatus": {
        "type": "string",
        "title": "Staff Teaching Group Assignment Status",
        "description": "<p>Code set denoting the status of the staff member's assignment to a teaching group.</p> <p>Set to Active when: StartDate => today's date and EndDate is NULL or EndDate > than today's date.</p> <p>Set to Inactive when: StartDate < today's date or EndDate =< today's date.</p> <ul>\n  <li>'A' - Active</li>\n  <li>'I' - Inactive</li>\n</ul>",
        "enum": [
          "A",
          "I"
        ]
      },
      "NZCodeSetsCurriculum": {
        "type": "string",
        "title": "Curriculum",
        "description": "<p>Codes denoting the two curricula used in New Zealand. </p> <ul>\n  <li>'NZC' - New Zealand Curriculum - New Zealand Curriculum</li>\n  <li>'TMA' - Te Marautanga o Aotearoa - Te Marautanga o Aotearoa</li>\n  <li>'ECE' - Te Whāriki - Te Whāriki</li>\n  <li>'OTH' - Other Curriculum - Marau Kē</li>\n</ul>",
        "enum": [
          "NZC",
          "TMA",
          "ECE",
          "OTH"
        ]
      },
      "NZCodeSetsLearningStandardType": {
        "type": "string",
        "title": "Learning Standard Type",
        "description": "<p>Code set denoting the type of standard e.g., unit standard, achievement standard.</p> <ul>\n  <li>'US' - Unit Standard - Paerewa</li>\n  <li>'AS' - Achievement Standard - Tutukitanga</li>\n  <li>'SC' - Scholarship - Karahipi</li>\n  <li>'OT' - Other</li>\n</ul>",
        "enum": [
          "US",
          "AS",
          "SC",
          "OT"
        ]
      },
      "NZCodeSetsLearningStandardFamily": {
        "type": "string",
        "title": "Learning Standard Family",
        "description": "<p>Code set denoting the family the learning standard is part of, e.g. NCEA, International Baccalaureate, Cambridge etc.</p> <ul>\n  <li>'NC' - NCEA</li>\n  <li>'NZ' - NZQF</li>\n  <li>'CA' - Cambridge International Education</li>\n  <li>'IB' - International Baccalaureate</li>\n  <li>'OT' - Other</li>\n</ul>",
        "enum": [
          "NC",
          "NZ",
          "CA",
          "IB",
          "OT"
        ]
      },
      "NZCodeSetsLearningStandardStatus": {
        "type": "string",
        "title": "Learning Standard Status",
        "description": "<p>A code denoting the status of the LearningStandard throughout its life-cycle.</p> <ul>\n  <li>'CA' - Candidate</li>\n  <li>'PU' - Published</li>\n  <li>'SU' - Superceded</li>\n  <li>'DI' - Discontinued</li>\n</ul>",
        "enum": [
          "CA",
          "PU",
          "SU",
          "DI"
        ]
      },
      "NZCodeSetsLearningStandardRelationshipType": {
        "type": "string",
        "title": "Learning Standard Relationship Type",
        "description": "<p>A code denoting the nature of the relationship with another LearningStandard</p> <ul>\n  <li>'PREDEC' - Predecessor</li>\n  <li>'SUCCES' - Successor</li>\n  <li>'PREREQ' - Prerequisite</li>\n  <li>'UNKNWN' - Unknown</li>\n</ul>",
        "enum": [
          "PREDEC",
          "SUCCES",
          "PREREQ",
          "UNKNWN"
        ]
      },
      "NZCodeSetsCredentialStatus": {
        "type": "string",
        "title": "Credential Status",
        "description": "<p>A code denoting the status of the Credential throughout its life-cycle.</p> <ul>\n  <li>'CA' - Candidate</li>\n  <li>'PU' - Published</li>\n  <li>'SU' - Superceded</li>\n  <li>'DI' - Discontinued</li>\n</ul>",
        "enum": [
          "CA",
          "PU",
          "SU",
          "DI"
        ]
      },
      "NZCodeSetsSubjectArea": {
        "type": "string",
        "title": "Subject Area",
        "description": "<p>Codes denoting Subject Areas defined by the NZ Curriculum and Te Marautanga o Aotearoa.</p> <ul>\n  <li>'GERM' - German</li>\n  <li>'INDO' - Indonesian</li>\n  <li>'JAPA' - Japanese</li>\n  <li>'FREN' - French</li>\n  <li>'REME' - English (Remedial)</li>\n  <li>'ENGL' - English - Te Reo Pākeha</li>\n  <li>'COOK' - Cook Island Maori</li>\n  <li>'COMM' - Communication Skills</li>\n  <li>'CHIN' - Chinese</li>\n  <li>'KORE' - Korean</li>\n  <li>'LATI' - Latin</li>\n  <li>'NIUE' - Niuean</li>\n</ul> plus 86 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsSubjectAreaType\">NZCodeSetsSubjectAreaType</a>",
        "enum": [
          "GERM",
          "INDO",
          "JAPA",
          "FREN",
          "REME",
          "ENGL",
          "COOK",
          "COMM",
          "CHIN",
          "KORE",
          "LATI",
          "NIUE",
          "OLAN",
          "PLAN",
          "RUSS",
          "SAMO",
          "SPAN",
          "MAOR",
          "RANG",
          "TOKE",
          "TONG",
          "ENSL",
          "MATH",
          "MATC",
          "MATS",
          "REMM",
          "ACCO",
          "SCIE",
          "AGHO",
          "BIOL",
          "CHEM",
          "EAAS",
          "HUMB",
          "PHYS",
          "TECN",
          "BITE",
          "COSC",
          "COMP",
          "DEST",
          "ELTE",
          "FOTE",
          "GRAP",
          "INTE",
          "MTEC",
          "STME",
          "TIMA",
          "CLTX",
          "ARTA",
          "ARTD",
          "ARTH",
          "DANC",
          "DRAM",
          "MUSC",
          "MUSP",
          "ARPA",
          "APER",
          "ARTP",
          "ARPR",
          "ARTS",
          "ARTC",
          "SOST",
          "CLST",
          "CMTY",
          "ECON",
          "SENV",
          "GEOG",
          "HIST",
          "LACU",
          "MAOS",
          "MEST",
          "SOSC",
          "HEPH",
          "HEED",
          "HOME",
          "OUED",
          "PHED",
          "SPOR",
          "BUSS",
          "DEFE",
          "EQUE",
          "FARM",
          "FISH",
          "FOTY",
          "INTR",
          "INTS",
          "LAWS",
          "LIFE",
          "REST",
          "REMS",
          "STPR",
          "SETR",
          "SPPR",
          "STDY",
          "TRAN",
          "THTR",
          "CROS",
          "INSK",
          "STUD"
        ]
      },
      "NZCodeSetsNCEASubjectArea": {
        "type": "string",
        "title": "NCEA Subject Area",
        "description": "<p>Codes denoting Subject Areas defined by the NZQA for NCEA.</p> <ul>\n  <li>'10' - Communication Skills</li>\n  <li>'103' - Solid Wood Processing</li>\n  <li>'112' - Human Services</li>\n  <li>'113' - Fire Fighting</li>\n  <li>'116' - Journalism</li>\n  <li>'129' - Health Studies</li>\n  <li>'158' - Service Sector Skills</li>\n  <li>'166' - Driving</li>\n  <li>'174' - Tourism</li>\n  <li>'175' - Transport Studies</li>\n  <li>'182' - Clothing Manufacture</li>\n  <li>'184' - Food Processing</li>\n</ul> plus 274 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsNCEASubjectAreaType\">NZCodeSetsNCEASubjectAreaType</a>",
        "enum": [
          "10",
          "103",
          "112",
          "113",
          "116",
          "129",
          "158",
          "166",
          "174",
          "175",
          "182",
          "184",
          "185",
          "186",
          "189",
          "190",
          "191",
          "194",
          "198",
          "204",
          "212",
          "215",
          "221",
          "224",
          "226",
          "228",
          "229",
          "230",
          "231",
          "240",
          "245",
          "246",
          "247",
          "249",
          "253",
          "257",
          "258",
          "259",
          "260",
          "261",
          "262",
          "263",
          "264",
          "265",
          "266",
          "267",
          "268",
          "269",
          "271",
          "272",
          "273",
          "275",
          "276",
          "277",
          "278",
          "279",
          "280",
          "281",
          "282",
          "285",
          "286",
          "288",
          "289",
          "290",
          "291",
          "292",
          "293",
          "294",
          "295",
          "297",
          "298",
          "299",
          "300",
          "301",
          "303",
          "304",
          "305",
          "306",
          "307",
          "308",
          "309",
          "310",
          "314",
          "315",
          "316",
          "317",
          "318",
          "319",
          "320",
          "321",
          "322",
          "323",
          "324",
          "325",
          "326",
          "328",
          "329",
          "330",
          "331",
          "332",
          "333",
          "334",
          "335",
          "336",
          "337",
          "338",
          "342",
          "343",
          "344",
          "345",
          "346",
          "347",
          "349",
          "351",
          "352",
          "354",
          "355",
          "356",
          "357",
          "358",
          "359",
          "360",
          "362",
          "363",
          "364",
          "365",
          "366",
          "367",
          "368",
          "370",
          "371",
          "372",
          "374",
          "375",
          "378",
          "380",
          "384",
          "385",
          "386",
          "387",
          "389",
          "390",
          "392",
          "393",
          "394",
          "395",
          "396",
          "397",
          "40",
          "400",
          "402",
          "403",
          "405",
          "406",
          "407",
          "408",
          "410",
          "411",
          "412",
          "413",
          "414",
          "415",
          "416",
          "419",
          "420",
          "421",
          "422",
          "423",
          "424",
          "426",
          "428",
          "429",
          "430",
          "431",
          "433",
          "435",
          "436",
          "437",
          "438",
          "441",
          "442",
          "444",
          "445",
          "446",
          "447",
          "449",
          "450",
          "451",
          "452",
          "453",
          "454",
          "456",
          "457",
          "458",
          "459",
          "460",
          "464",
          "465",
          "466",
          "467",
          "468",
          "469",
          "470",
          "471",
          "472",
          "473",
          "474",
          "475",
          "5",
          "53",
          "55",
          "71",
          "76",
          "78",
          "79",
          "82",
          "84",
          "85",
          "86",
          "92",
          "93",
          "96",
          "97",
          "99",
          "ACCO",
          "AGHO",
          "AGRI",
          "ARTC",
          "ARTH",
          "BIOL",
          "BUST",
          "CHEM",
          "CHIN",
          "CLST",
          "COMP",
          "COOK",
          "DANC",
          "DLIC",
          "DRAM",
          "DTEC",
          "EAAS",
          "ECON",
          "ENAC",
          "ENGL",
          "ENSL",
          "FIMA",
          "FREN",
          "GEOG",
          "GERM",
          "GRAP",
          "HANG",
          "HAUO",
          "HEED",
          "HIST",
          "HOME",
          "JAPA",
          "KORE",
          "LAFT",
          "LATI",
          "LAWS",
          "LITE",
          "MAOR",
          "MAST",
          "MEST",
          "MPRT",
          "MUSC",
          "NGAT",
          "NUME",
          "NZSL",
          "PANG",
          "PHED",
          "PHYS",
          "PLAN",
          "PSYC",
          "PUTA",
          "RANG",
          "REST",
          "SAMO",
          "SCIE",
          "SENV",
          "SOSC",
          "SOST",
          "SPAN",
          "SULE",
          "TECN",
          "TIKA"
        ]
      },
      "NZCodeSetsAssessmentMethodology": {
        "type": "string",
        "title": "Assessment Methodology",
        "description": "<p>Code denoting the nature of the assessment process; Primary assessment against NZ Curriculum or Te Marautanga o Aotearoa; Secondary assessment against NCEA, Cambridge, International Baccalaureate, or similar.</p> <ul>\n  <li>'P' - Primary - Aromatawai ā-roto</li>\n  <li>'S' - Secondary - Aromatawai ā-waho</li>\n</ul>",
        "enum": [
          "P",
          "S"
        ]
      },
      "NZCodeSetsAssessmentType": {
        "type": "string",
        "title": "Assessment Type",
        "description": "<p>Standard codes denoting the type of assessment the student is sitting for the assessment task.</p> <ul>\n  <li>'INT' - Internal - Aromatawai ā-roto</li>\n  <li>'EXT' - External - Aromatawai ā-waho</li>\n  <li>'MOC' - Mock</li>\n  <li>'POR' - Portfolio</li>\n  <li>'PRA' - Practical</li>\n  <li>'OTJ' - Overall Teacher Judgement - Tā te Pouako i whakarite ai</li>\n  <li>'OTH' - Other</li>\n</ul>",
        "enum": [
          "INT",
          "EXT",
          "MOC",
          "POR",
          "PRA",
          "OTJ",
          "OTH"
        ]
      },
      "NZCodeSetsAssessmentTool": {
        "type": "string",
        "title": "Assessment Tool",
        "description": "<p>Standard codes denoting assessment tools that may be used in an assessment task.</p> <ul>\n  <li>'EASMATH' - e-asTTle Mathematics</li>\n  <li>'EASREAD' - e-asTTle Reading</li>\n  <li>'PATCOMP' - PAT: Reading Comprehension</li>\n  <li>'PATMATH' - PAT: Mathematics</li>\n  <li>'STARREA' - STAR Reading</li>\n</ul>",
        "enum": [
          "EASMATH",
          "EASREAD",
          "PATCOMP",
          "PATMATH",
          "STARREA"
        ]
      },
      "NZCodeSetsAssessmentToolTest": {
        "type": "string",
        "title": "Assessment Tool Test",
        "description": "<p>Standard code set denoting the tests available within an assessment tool that may be used in an assessment task.</p> <ul>\n  <li>'PMT1' - PAT Maths - Test 1</li>\n  <li>'PMT1A' - PAT Maths - Test 1A</li>\n  <li>'PMT2' - PAT Maths - Test 2</li>\n  <li>'PMT2A' - PAT Maths - Test 2A</li>\n  <li>'PMT3' - PAT Maths - Test 3</li>\n  <li>'PMT3A' - PAT Maths - Test 3A</li>\n  <li>'PMT4' - PAT Maths - Test 4</li>\n  <li>'PMT4A' - PAT Maths - Test 4A</li>\n  <li>'PMT5' - PAT Maths - Test 5</li>\n  <li>'PMT5A' - PAT Maths - Test 5A</li>\n  <li>'PMT6' - PAT Maths - Test 6</li>\n  <li>'PMT6A' - PAT Maths - Test 6A</li>\n</ul> plus 35 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsAssessmentToolTestType\">NZCodeSetsAssessmentToolTestType</a>",
        "enum": [
          "PMT1",
          "PMT1A",
          "PMT2",
          "PMT2A",
          "PMT3",
          "PMT3A",
          "PMT4",
          "PMT4A",
          "PMT5",
          "PMT5A",
          "PMT6",
          "PMT6A",
          "PMT7",
          "PMT7A",
          "PMT8A",
          "PMTADA",
          "PRCT1",
          "PRCT2",
          "PRCT3",
          "PRCT4",
          "PRCT5",
          "PRCT6",
          "PRCT7",
          "SRT34A",
          "SRT34B",
          "SRT34C",
          "SRT56A",
          "SRT56B",
          "SRT56C",
          "SRT78A",
          "SRT78B",
          "SRT78C",
          "SRT9A",
          "EMYR4",
          "EMYR5",
          "EMYR6",
          "EMYR7",
          "EMYR8",
          "EMYR9",
          "EMYR10",
          "ERYR4",
          "ERYR5",
          "ERYR6",
          "ERYR7",
          "ERYR8",
          "ERYR9",
          "ERYR10"
        ]
      },
      "NZCodeSetsAssessmentEvaluationType": {
        "type": "string",
        "title": "Assessment Evaluation Type",
        "description": "<p>Code set denoting the type of assessment evaluation taking place, e.g. formative or summative.</p> <ul>\n  <li>'F' - Formative - Arataki</li>\n  <li>'S' - Summative - Whakakapi</li>\n</ul>",
        "enum": [
          "F",
          "S"
        ]
      },
      "NZCodeSetsAssessmentStatus": {
        "type": "string",
        "title": "Assessment Status",
        "description": "<p>Codes denoting the current status of the assessment task.</p> <ul>\n  <li>'MOD' - Moderated - Kua whakaōritehia</li>\n  <li>'NOT' - Unmoderated - Kāre anō kia whakaōritehia</li>\n  <li>'PUB' - Published - Kua tāia</li>\n  <li>'ENT' - Entered - I whakaurungia</li>\n  <li>'MAR' - Marked - Kua mākahia</li>\n</ul>",
        "enum": [
          "MOD",
          "NOT",
          "PUB",
          "ENT",
          "MAR"
        ]
      },
      "NZCodeSetsAssessmentProviderRole": {
        "type": "string",
        "title": "Assessment Provider Role",
        "description": "<p>Code set denoting the role of the provider in the assessment, e.g. Assessing Provider, Location Provider.</p> <ul>\n  <li>'ASR' - Assessor</li>\n  <li>'LOC' - Location Provider</li>\n  <li>'PRO' - Provider</li>\n  <li>'REG' - Registering Organisation</li>\n</ul>",
        "enum": [
          "ASR",
          "LOC",
          "PRO",
          "REG"
        ]
      },
      "NZCodeSetsAssessmentStaffRole": {
        "type": "string",
        "title": "Assessment Staff Role",
        "description": "\n<ul>\n  <li>'CRE' - Creator</li>\n  <li>'MOD' - Moderator</li>\n  <li>'ASS' - Assessor</li>\n  <li>'INV' - Invigilator</li>\n  <li>'OTH' - Other</li>\n</ul>",
        "enum": [
          "CRE",
          "MOD",
          "ASS",
          "INV",
          "OTH"
        ]
      },
      "NZCodeSetsScoreMetric": {
        "type": "string",
        "title": "Score Metric",
        "description": "<p>The type of score metric used for an assessment task result.</p> <ul>\n  <li>'RAW' - Raw - Taketake</li>\n  <li>'SCA' - Scale - Āwhata</li>\n  <li>'MAR' - Margin of Error - Pae Hapa</li>\n  <li>'STA' - Stanine - Pouiwa</li>\n  <li>'YEA' - Year Level - Taumata ā-Tau</li>\n  <li>'CUR' - Curriculum Level - Taumata Marau</li>\n  <li>'NKS' - Number Knowledge Stage</li>\n  <li>'NA' - NA - NA</li>\n  <li>'NAM' - NAME - NAME</li>\n</ul>",
        "enum": [
          "RAW",
          "SCA",
          "MAR",
          "STA",
          "YEA",
          "CUR",
          "NKS",
          "NA",
          "NAM"
        ]
      },
      "NZCodeSetsScoreType": {
        "type": "string",
        "title": "Score Type",
        "description": "<p>Code set denoting that the score is an over-arching final aggregate score derived from a collection of other scores, or the fact that the score is derived from a multi-stage marking and moderation process, e.g. inital, interim, moderated and final scores for a single assessment.</p> <ul>\n  <li>'INI' - Initial</li>\n  <li>'INT' - Interim</li>\n  <li>'MOD' - Moderated</li>\n  <li>'FIN' - Final</li>\n</ul>",
        "enum": [
          "INI",
          "INT",
          "MOD",
          "FIN"
        ]
      },
      "NZCodeSetsSpecialAssessmentCondition": {
        "type": "string",
        "title": "Special Assessment Condition",
        "description": "<p>Standard codes denoting special assessment conditions that a student requires when sitting an assessment.</p> <ul>\n  <li>'BRA' - Braille Paper</li>\n  <li>'COM' - Computer OR Writer</li>\n  <li>'ENL' - Enlarged Paper</li>\n  <li>'EXT' - Extra Time</li>\n  <li>'OTH' - Other</li>\n  <li>'REA' - Reader</li>\n  <li>'RES' - Rest Breaks</li>\n  <li>'SEP' - Separate Accommodation</li>\n  <li>'SIR' - Signing Reader</li>\n  <li>'SIS' - Signing Supervisor</li>\n  <li>'SPE' - Special Paper</li>\n</ul>",
        "enum": [
          "BRA",
          "COM",
          "ENL",
          "EXT",
          "OTH",
          "REA",
          "RES",
          "SEP",
          "SIR",
          "SIS",
          "SPE"
        ]
      },
      "NZCodeSetsAssessmentTimeframe": {
        "type": "string",
        "title": "Assessment Timeframe",
        "description": "<p>The timeframe of the assessment, e.g. Mid-Year, End of Year.</p> <ul>\n  <li>'OTH' - Other</li>\n  <li>'OUT' - Out of Cycle</li>\n  <li>'INT' - Interim</li>\n  <li>'END' - End of Year</li>\n</ul>",
        "enum": [
          "OTH",
          "OUT",
          "INT",
          "END"
        ]
      },
      "NZCodeSetsNCEAEndorsementLevel": {
        "type": "string",
        "title": "NCEA Endorsement Level",
        "description": "<p>The level of NCEA endorsement the student received for the attainment.</p> <ul>\n  <li>'E' - Excellence - Kairangi</li>\n  <li>'M' - Merit - Kaiaka</li>\n</ul>",
        "enum": [
          "E",
          "M"
        ]
      },
      "NZCodeSetsSchoolEnrolmentType": {
        "type": "string",
        "title": "School Enrolment Type",
        "description": "<p>A type of student enrolment with a school. Allows differentiation of concurrent enrolments, eg base vs other.</p> <ul>\n  <li>'BASE' - Base Enrolment</li>\n  <li>'HOST' - Hosted Enrolment</li>\n  <li>'REMO' - Remote/Distance Learning</li>\n</ul>",
        "enum": [
          "BASE",
          "HOST",
          "REMO"
        ]
      },
      "NZCodeSetsProviderEnrolmentStatus": {
        "type": "string",
        "title": "Provider Enrolment Status",
        "description": "<p>Records the status of a potentially multi-year Provider enrolment, which goes through a different life-cycle to the single-year school enrolment.</p> <ul>\n  <li>'APP' - Application</li>\n  <li>'ACC' - Accepted</li>\n  <li>'CAN' - Cancelled</li>\n  <li>'ACT' - Active</li>\n  <li>'WIT' - Withdrawn</li>\n  <li>'PEN' - Pending</li>\n</ul>",
        "enum": [
          "APP",
          "ACC",
          "CAN",
          "ACT",
          "WIT",
          "PEN"
        ]
      },
      "NZCodeSetsStudentTeachingGroupEnrolmentStatus": {
        "type": "string",
        "title": "Student TeachingGroup Enrolment Status",
        "description": "<p>Code set denoting the status of the student's teaching group enrolment.</p> <p>Set to Active when: StartDate => today's date and EndDate is NULL or EndDate > than today's date.</p> <p>Set to Inactive when: StartDate < today's date or EndDate =< today's date.</p> <ul>\n  <li>'A' - Active</li>\n  <li>'I' - Inactive</li>\n</ul>",
        "enum": [
          "A",
          "I"
        ]
      },
      "NZCodeSetsEnrolmentExitType": {
        "type": "string",
        "title": "Enrolment Exit Type",
        "description": "<p>Enrolment Exit code, derived from code set used in School Roll Returns.</p> <ul>\n  <li>'S' - Transferred to Another School in NZ - Whakawhiti ki kura kē o Aotearoa</li>\n  <li>'H' - Transferring to Home Schooling - Whakawhiti ki te kura-kāinga</li>\n  <li>'O' - Gone Overseas - Haere ki tāwāhi</li>\n  <li>'D' - Deceased - Kua mate</li>\n  <li>'X' - Expulsion (for Students Aged 16 and Over Only) - I panaia (mō te hunga ākonga 16 te pakeke neke atu anake)</li>\n  <li>'L' - End of Schooling (for Students Aged 16 and Over Only) - Kua mutu te kura (mō te hunga ākonga 16 te pakeke neke atu anake)</li>\n  <li>'E' - Granted Early Exemption (Applies to Those Younger Than 16yrs Old) - Whakaaetia kia wāteatia mai (e pā ana ki ērā ākonga tau heke 16 te pakeke)</li>\n  <li>'K' - Exclusion (for Students Aged Younger Than 16) - Whakarerenga (mō te hunga ākonga tau heke 16 te pakeke)</li>\n  <li>'C' - Continuous Absence - Ka ngaro i ia te wā</li>\n  <li>'J' - Eligibility Expired - Kua kati te māraurau</li>\n  <li>'P' - Caregiver Decision - Whakarite a te Kaitiaki</li>\n</ul>",
        "enum": [
          "S",
          "H",
          "O",
          "D",
          "X",
          "L",
          "E",
          "K",
          "C",
          "J",
          "P"
        ]
      },
      "NZCodeSetsStudentFundingType": {
        "type": "string",
        "title": "Student Funding Type",
        "description": "<p>Student classification for MoE funding purposes.</p> <p>Codes in this list are hierarchical. Students can only be allocated one TYPE code (even though they may belong to more than one of the groups listed below). To allocate a code to an individual student, start at the top of the list and work down. Use the first code that applies to the student.</p> <ul>\n  <li>'FF' - International Fee-Paying Student - Ākonga ā-Ao Utu Urutomo</li>\n  <li>'AE' - Student in Alternative Education - Ākonga Mātauranga Kē</li>\n  <li>'EX' - International Exchange Student - Ākonga Whakawhiti ā-Ao</li>\n  <li>'NF' - Not Funded - Kāore he pūtea āwhina</li>\n  <li>'RA' - Adult Student - Ākonga Pakeke</li>\n  <li>'AD' - Returning Adult Student - Ākonga Pakeke Hokingarua</li>\n  <li>'RE' - Regular Student - Ākonga</li>\n  <li>'TPREOM' - Teen Parent Regular Student Over Maximum Roll - Ranga Mātātahi, Ākonga kua aua atu i te taumata rārangi</li>\n  <li>'TPRAOM' - Teen Parent Adult Student Over Maximum Roll - Ranga Mātātahi, Ākonga Pakeke kua aua atu i te taumata rārangi</li>\n  <li>'TPAD' - Teen Parent Other Adult Student - Ranga Mātātahi, Ākonga Pakeke kē</li>\n  <li>'TPRE' - Teen Parent Eligible and Enrolled Regular Student - Ranga Mātātahi me ngā Ākonga kua uru</li>\n  <li>'TPRAE' - Teen Parent Enrolled Continuing Adult Student - Ranga Mātātahi kua uru hei Ākonga Pakeke e haere tonu ana</li>\n</ul> plus 4 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsStudentFundingTypeType\">NZCodeSetsStudentFundingTypeType</a>",
        "enum": [
          "FF",
          "AE",
          "EX",
          "NF",
          "RA",
          "AD",
          "RE",
          "TPREOM",
          "TPRAOM",
          "TPAD",
          "TPRE",
          "TPRAE",
          "EM",
          "SA",
          "NA",
          "SF"
        ]
      },
      "NZCodeSetsOngoingResourceScheme": {
        "type": "string",
        "title": "Ongoing Resource Scheme",
        "description": "<p>Codes denoting the level of ORS funding a student may receive.</p> <ul>\n  <li>'H' - High ORS - Teitei te ORS</li>\n  <li>'V' - Very High ORS - Tino Teitei te ORS</li>\n  <li>'E' - Extension (Moderate to High) - Whakaroanga (Rewatanga ki Teitei)</li>\n</ul>",
        "enum": [
          "H",
          "V",
          "E"
        ]
      },
      "NZCodeSetsPostSchoolActivity": {
        "type": "string",
        "title": "Post School Activity",
        "description": "<p>The post school activity the student is moving on to once they have exited the school.</p> <ul>\n  <li>'10' - Further education or training - Me whai mātauranga/whakangungu kē</li>\n  <li>'11' - Employment and further education/training - Me whai mahi, mātauranga/whakangungu kē</li>\n  <li>'12' - Employment - Me whai mahi</li>\n  <li>'13' - Other - He mea kē</li>\n  <li>'88' - Unknown - Kāre e mōhiotia</li>\n</ul>",
        "enum": [
          "10",
          "11",
          "12",
          "13",
          "88"
        ]
      },
      "NZCodeSetsCoEnrolmentType": {
        "type": "string",
        "title": "CoEnrolment Type",
        "description": "<p></p> <ul>\n  <li>'OTH' - Other</li>\n</ul>",
        "enum": [
          "OTH"
        ]
      },
      "NZCodeSetsPreEnrolmentExitType": {
        "type": "string",
        "title": "Pre Enrolment Exit Type",
        "description": "<p>Code set denoting how the student's pre-enrolment was cancelled.</p> <ul>\n  <li>'A' - Automated</li>\n  <li>'M' - Manual</li>\n</ul>",
        "enum": [
          "A",
          "M"
        ]
      },
      "NZCodeSetsPreEnrolmentCancellationReason": {
        "type": "string",
        "title": "Pre Enrolment Cancellation Reason",
        "description": "<p>Code set denoting why the student's pre-enrolment was cancelled.</p> <ul>\n  <li>'SIE' - Student Incorrectly Enrolled</li>\n  <li>'SDE' - Student Declined Enrolment</li>\n  <li>'DEC' - Deceased</li>\n  <li>'OTH' - Other - Please Specify</li>\n</ul>",
        "enum": [
          "SIE",
          "SDE",
          "DEC",
          "OTH"
        ]
      },
      "NZCodeSetsEarlyChildhoodEducationType": {
        "type": "string",
        "title": "Early Childhood Education Type",
        "description": "<p>The type of early childhood education the student received.</p> <ul>\n  <li>'EKR' - Attended Kohanga Reo - I haere ki Te Kōhanga Reo</li>\n  <li>'EPC' - Attended Playcentre - I tae ki te Playcentre</li>\n  <li>'EKE' - Attended Kindergarden or Education and Care - I tae ki te Kura Kōhungahunga, ki Education and Care rānei</li>\n  <li>'EHB' - Attended Home Based Service - I tae ki tētahi Ratonga ā-Kāinga</li>\n  <li>'EPG' - Attended Playgroup or Pacific Islands EC Group - I tae ki ngā kāhui kōhungahunga Pasifika, Playgroup rānei</li>\n  <li>'ECO' - Attended The Correspondence School - Te Aho o Te Kura Pounamu - I tae ki Te Aho o te Kura Pounamu</li>\n  <li>'EOS' - Attended, but only outside New Zealand - I tae ake, engari i waho kē atu o Aotearoa</li>\n  <li>'ETU' - Attended, but don't know what type of service - I tae ake engari kāre i mōhiotia te momo ratonga</li>\n  <li>'ENA' - Did not attend - Kāre i tae ake</li>\n  <li>'EUN' - Unable to establish if attended or not - Kāre e mōhio mēnā i tae atu kāore rānei</li>\n</ul>",
        "enum": [
          "EKR",
          "EPC",
          "EKE",
          "EHB",
          "EPG",
          "ECO",
          "EOS",
          "ETU",
          "ENA",
          "EUN"
        ]
      },
      "NZCodeSetsLanguageInstructionLevel": {
        "type": "string",
        "title": "Language Instruction Level",
        "description": "<p>The level of instruction that is made in the selected language.</p> <ul>\n  <li>'1' - 81-100% - 81-100%</li>\n  <li>'2' - 51-80% - 51-80%</li>\n  <li>'3' - 31-50% - 31-50%</li>\n  <li>'4a' - 12-30% - 12-30%</li>\n  <li>'4b' - 3 hours per week - 3 hāora i te wiki</li>\n  <li>'5' - < 3 hours per week - iti iho 3 hāora i te wiki</li>\n  <li>'6' - Taha Māori - Taha Māori</li>\n</ul>",
        "enum": [
          "1",
          "2",
          "3",
          "4a",
          "4b",
          "5",
          "6"
        ]
      },
      "NZCodeSetsECEYearLevel": {
        "type": "string",
        "title": "ECE Year Level",
        "description": "<p>Code set denoting the year level of students attending early childhood education.</p> <ul>\n  <li>'ABF' - 5 years and above - 5 te pakeke neke atu</li>\n  <li>'FIV' - 5 year old - 5 te pakeke</li>\n  <li>'FOU' - 4 year old - 4 te pakeke</li>\n  <li>'ONE' - 1 year old - 1 te pakeke</li>\n  <li>'THR' - 3 year old - 3 te pakeke</li>\n  <li>'TWO' - 2 year old - 2 te pakeke</li>\n  <li>'UNK' - Unknown - Kāre i mōhiotia</li>\n  <li>'ZER' - Younger than 1 year old - Tau heke 1 te pakeke</li>\n</ul>",
        "enum": [
          "ABF",
          "FIV",
          "FOU",
          "ONE",
          "THR",
          "TWO",
          "UNK",
          "ZER"
        ]
      },
      "NZCodeSetsAttendanceType": {
        "type": "string",
        "title": "Attendance Type",
        "description": "<p>Code set denoting the type of attendance being recorded for the student.</p> <ul>\n  <li>'ADH' - Ad Hoc</li>\n  <li>'SCH' - Scheduled</li>\n</ul>",
        "enum": [
          "ADH",
          "SCH"
        ]
      },
      "NZCodeSetsAttendanceCode": {
        "type": "string",
        "title": "Attendance Code",
        "description": "<p>Code denoting presence, absence or the reason for non-attendance at school, or class.</p> <ul>\n  <li>'A' - Attending Alternative Education - Te haere ki te Mātauranga Kē</li>\n  <li>'L' - Late to class - Tae tōmuri ki te akomanga</li>\n  <li>'P' - Present - I tae</li>\n  <li>'S' - Sickbay - Taiwhanga tūroro</li>\n  <li>'D' - Medical appointment – doctor or dentist - Te tiro tākuta, tākuta niho</li>\n  <li>'I' - Internal school appointment or activity – Dean, DP, sports administrator, coach, attendance officer etc. - Te hui ki te Kura – Tumuaki Tuarua, Kaiako Hākinakina, Āpiha Kura etc.</li>\n  <li>'E' - Absent with an explained but unjustified reason - I ngaro engari he kōrero i puta, kāre he take whakamana</li>\n  <li>'M' - Absent due to short-term illness/medical reasons - He ngaronga nā runga i te māuiui</li>\n  <li>'J' - Justified absence – reason for absence within the school policy - He ngaronga whakamana – ka taka mai i raro i te ritenga ā-kura</li>\n  <li>'T' - No information provided – truant (or throw-away explanation) - Kāre he kōrero – he whakatau (whakamārama rānei)</li>\n  <li>'V' - Examination or unsupervised study. Student is on the school-site - Whakamātautau, te ako noa rānei – ki te kura</li>\n  <li>'N' - On a school based activity - He mahi ā-kura</li>\n</ul> plus 14 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsAttendanceCodeType\">NZCodeSetsAttendanceCodeType</a>",
        "enum": [
          "A",
          "L",
          "P",
          "S",
          "D",
          "I",
          "E",
          "M",
          "J",
          "T",
          "V",
          "N",
          "Q",
          "W",
          "R",
          "X",
          "G",
          "O",
          "K",
          "?",
          "Y",
          "F",
          "H",
          "C",
          "U",
          "Z"
        ]
      },
      "NZCodeSetsAttendanceCodeGroup": {
        "type": "string",
        "title": "Attendance Code Group",
        "description": "<p>Code set denoting the possible attendance code groups, e.g. Present, Justified and Unjustified.</p> <ul>\n  <li>'J' - Justified - Parahau</li>\n  <li>'P' - Present - I tae</li>\n  <li>'U' - Unjustified - Parahau Kore</li>\n</ul>",
        "enum": [
          "J",
          "P",
          "U"
        ]
      },
      "NZCodeSetsWellbeingCharacteristicSubSubCategory": {
        "type": "string",
        "title": "Wellbeing Characteristic Sub Sub Category",
        "description": "<p>Code set denoting codes that provide an additional layer of detail around a wellbeing characteristic sub category. For examples for the learner’s support need sub category, e.g. if the support need of ‘Vision’ is selected for the user, the sub needs ‘Low Vision’ and ‘Blind’ are available to further define the type of vision issue the learner has. Not all support needs have sub needs.</p> <ul>\n  <li>'LSN-ATT' - Attending and focusing</li>\n  <li>'LSN-BLI' - Blind</li>\n  <li>'LSN-COM' - Comprehension</li>\n  <li>'LSN-DEA' - Deaf</li>\n  <li>'LSN-EAT' - Eating</li>\n  <li>'LSN-EXP' - Expressing emotion</li>\n  <li>'LSN-FIN' - Fine</li>\n  <li>'LSN-FOL' - Following instructions</li>\n  <li>'LSN-GRO' - Gross</li>\n  <li>'LSN-HAR' - Hard of Hearing</li>\n  <li>'LSN-HYA' - Hyperactive</li>\n  <li>'LSN-HYO' - Hypoactive</li>\n</ul> plus 33 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsWellbeingCharacteristicSubSubCategoryType\">NZCodeSetsWellbeingCharacteristicSubSubCategoryType</a>",
        "enum": [
          "LSN-ATT",
          "LSN-BLI",
          "LSN-COM",
          "LSN-DEA",
          "LSN-EAT",
          "LSN-EXP",
          "LSN-FIN",
          "LSN-FOL",
          "LSN-GRO",
          "LSN-HAR",
          "LSN-HYA",
          "LSN-HYO",
          "LSN-INV",
          "LSN-LEM",
          "LSN-LOW",
          "LSN-LVI",
          "LSN-MAE",
          "LSN-MAK",
          "LSN-MAN",
          "LSN-MAX",
          "LSN-MEM",
          "LSN-MPR",
          "LSN-NUM",
          "LSN-ONN",
          "LSN-OPP",
          "LSN-ORN",
          "LSN-OWN",
          "LSN-PER",
          "LSN-PHO",
          "LSN-PHY",
          "LSN-PLA",
          "LSN-PLY",
          "LSN-PRO",
          "LSN-PSP",
          "LSN-REC",
          "LSN-RES",
          "LSN-RPS",
          "LSN-RUN",
          "LSN-SEL",
          "LSN-SEQ",
          "LSN-SHA",
          "LSN-SHO",
          "LSN-SIW",
          "LSN-TRA",
          "LSN-VER"
        ]
      },
      "NZCodeSetsWellbeingCharacteristicSubCategory": {
        "type": "string",
        "title": "Wellbeing Characteristic Sub Category",
        "description": "<p>Standard codes denoting the third level category of the Wellbeing Characteristic.</p> <ul>\n  <li>'DIET-01' - Vegan</li>\n  <li>'DIET-02' - Vegetarian</li>\n  <li>'DIET-03' - Halal</li>\n  <li>'DIET-04' - Kosher</li>\n  <li>'DIET-05' - Pescetarian</li>\n  <li>'DIET-06' - Gluten-free</li>\n  <li>'LSN-ACT' - Activity</li>\n  <li>'LSN-ADV' - Advanced learner | gifted</li>\n  <li>'LSN-ATT' - Attendance and engagement</li>\n  <li>'LSN-CHR' - Chronic Pain</li>\n  <li>'LSN-CUL' - Cultural and linguistic diversity needs</li>\n  <li>'LSN-EMO' - Emotional regulation</li>\n</ul> plus 108 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsWellbeingCharacteristicSubCategoryType\">NZCodeSetsWellbeingCharacteristicSubCategoryType</a>",
        "enum": [
          "DIET-01",
          "DIET-02",
          "DIET-03",
          "DIET-04",
          "DIET-05",
          "DIET-06",
          "LSN-ACT",
          "LSN-ADV",
          "LSN-ATT",
          "LSN-CHR",
          "LSN-CUL",
          "LSN-EMO",
          "LSN-ENG",
          "LSN-EXT",
          "LSN-FLU",
          "LSN-GLC",
          "LSN-HEA",
          "LSN-HYP",
          "LSN-INT",
          "LSN-MED",
          "LSN-MOB",
          "LSN-MOT",
          "LSN-NUM",
          "LSN-NZS",
          "LSN-REA",
          "LSN-SEL",
          "LSN-SEN",
          "LSN-SLA",
          "LSN-SOC",
          "LSN-SPE",
          "LSN-SUB",
          "LSN-UND",
          "LSN-USI",
          "LSN-VIS",
          "LSN-WRI",
          "MH-1",
          "MH-2",
          "MH-3",
          "MH-4",
          "MH-5",
          "MH-6",
          "MH-7",
          "MH-8",
          "MH-9",
          "MH-10",
          "MH-11",
          "MH-12",
          "MH-13",
          "MH-14",
          "MH-15",
          "MH-16",
          "MH-17",
          "MH-18",
          "MS-1",
          "MS-2",
          "MS-3",
          "MS-4",
          "MAA-1",
          "MAA-2",
          "MAA-3",
          "MAA-4",
          "MAA-5",
          "MAA-6",
          "MAA-7",
          "MAA-8",
          "MAA-9",
          "MAA-10",
          "MAA-11",
          "MAA-12",
          "MAA-13",
          "MAA-14",
          "MAIM-1",
          "MAIM-2",
          "MAIM-3",
          "MB-1",
          "MB-2",
          "MB-3",
          "MB-4",
          "MB-5",
          "MMS-1",
          "MMS-2",
          "MMS-3",
          "MMS-4",
          "MMS-5",
          "MMS-6",
          "MMS-7",
          "MMS-8",
          "MMS-9",
          "MMS-10",
          "MMS-11",
          "MMS-12",
          "MMS-13",
          "MMS-14",
          "MMS-15",
          "MCM-1",
          "MCM-2",
          "MCM-3",
          "MCM-4",
          "MCM-5",
          "MCM-6",
          "MCM-7",
          "MCM-8",
          "MCM-9",
          "MCM-10",
          "MCM-11",
          "MCM-12",
          "MCM-13",
          "MCM-14",
          "MCM-15",
          "MCM-16",
          "MCM-17",
          "MCM-18",
          "MCM-19",
          "MCM-20",
          "MCM-21",
          "MCM-22",
          "MCM-23",
          "MCM-24",
          "MCM-25",
          "MCM-26"
        ]
      },
      "NZCodeSetsWellbeingCharacteristicCategory": {
        "type": "string",
        "title": "Wellbeing Characteristic Category",
        "description": "<p>Standard codes denoting the second level category of the Wellbeing Characteristic.</p> <ul>\n  <li>'MAO' - Allergies - other</li>\n  <li>'DIET' - Dietary Preferences</li>\n  <li>'LSN-COG' - Cognition and Learning</li>\n  <li>'LSN-PHY' - Physical</li>\n  <li>'LSN-SEN' - Sensory Needs</li>\n  <li>'LSN-SOC' - Social, Emotional and Behavioural</li>\n  <li>'LSN-SPE' - Speech, Language and Communication</li>\n  <li>'MAIM' - Auto-immune/Immune Disorders</li>\n  <li>'MRD' - Respiratory Disorder</li>\n  <li>'MB' - Blood disorder</li>\n  <li>'MMD' - Heart Disease/ Disorder</li>\n  <li>'MMS' - Musculo – skeletal conditions</li>\n</ul> plus 22 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsWellbeingCharacteristicCategoryType\">NZCodeSetsWellbeingCharacteristicCategoryType</a>",
        "enum": [
          "MAO",
          "DIET",
          "LSN-COG",
          "LSN-PHY",
          "LSN-SEN",
          "LSN-SOC",
          "LSN-SPE",
          "MAIM",
          "MRD",
          "MB",
          "MMD",
          "MMS",
          "MEM",
          "MC",
          "MAA",
          "MH",
          "MN",
          "MS",
          "MCM",
          "MI",
          "MGI",
          "MND",
          "MO",
          "MD",
          "MOP",
          "M-OTHER",
          "D-OTHER",
          "S-OTHER",
          "OTHER",
          "MDC-AST",
          "MDC-DIA",
          "MDC-EPI",
          "MDC-REG",
          "MDC-OTH"
        ]
      },
      "NZCodeSetsWellbeingCharacteristicClass": {
        "type": "string",
        "title": "Wellbeing Characteristic Class",
        "description": "<p>Standard codes denoting the first level category of the Wellbeing Characteristic. (Note: The second and third levels are Category and SubCategory)</p> <ul>\n  <li>'OTH' - Other</li>\n  <li>'MDC' - Medical</li>\n  <li>'LSN' - Learning Support Need - Hiahia Tautoko Akoranga</li>\n  <li>'ALG' - Allergy</li>\n  <li>'DPR' - Dietary Preference</li>\n</ul>",
        "enum": [
          "OTH",
          "MDC",
          "LSN",
          "ALG",
          "DPR"
        ]
      },
      "NZCodeSetsWellbeingCharacteristicPriority": {
        "type": "string",
        "title": "Wellbeing Characteristic Priority",
        "description": "<p>Codes denoting the priority level of the characteristic in relation to other characteristics within the same classification.</p> <ul>\n  <li>'N' - Non-urgent - Nonoi kore</li>\n  <li>'S' - Semi-urgent - Āhua Nonoi</li>\n  <li>'U' - Urgent - Nonoi</li>\n</ul>",
        "enum": [
          "N",
          "S",
          "U"
        ]
      },
      "NZCodeSetsWellbeingCharacteristicStatus": {
        "type": "string",
        "title": "Wellbeing Characteristic Status",
        "description": "<p>Code set denoting the status of the Wellbeing Characteristic.</p> <ul>\n  <li>'ACTI' - Active - Tuwhera</li>\n  <li>'CLOS' - Closed - Kati</li>\n  <li>'AWAI' - Awaiting Consent - Tāria kia mana</li>\n</ul>",
        "enum": [
          "ACTI",
          "CLOS",
          "AWAI"
        ]
      },
      "NZCodeSetsOfficialDiagnosisSubType": {
        "type": "string",
        "title": "Official Diagnosis Sub Type",
        "description": "<p>Code set denoting an official diagnosis sub-type a student is given for an identified wellbeing characteristic.</p> <ul>\n  <li>'DISO' - Disorders of intellectual development - He Whakaupa ā-hinengaro</li>\n  <li>'DSLD' - Developmental speech or language disorders - He Tapepatanga Reo</li>\n  <li>'ADHD' - Attention Deficit Hyperactivity Disorder - </li>\n  <li>'ANXI' - Anxiety or fear-related disorders - Manawapā</li>\n  <li>'OTHN' - Other neurodevelopmental disorders/developmental anomalies - </li>\n  <li>'DLDI' - Developmental learning disorders e.g. dyslexia - </li>\n  <li>'AUTI' - Autism Sprectrum Disorder - Takiwātanga</li>\n  <li>'SUBS' - Substance abuse or addictive behaviours - He Whanonga Waranga</li>\n  <li>'BLIN' - Blind or vision impaired - Kāpō, he atarua</li>\n  <li>'DEAF' - Deaf or hard of hearing - Turi, he mate taringa</li>\n  <li>'FEED' - Feeding or eating disorders - He māuiuitanga ā-kai</li>\n  <li>'STRE' - Stress related disorders - Te Piringa Wara Whakapōauau</li>\n</ul> plus 6 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsOfficialDiagnosisSubTypeType\">NZCodeSetsOfficialDiagnosisSubTypeType</a>",
        "enum": [
          "DISO",
          "DSLD",
          "ADHD",
          "ANXI",
          "OTHN",
          "DLDI",
          "AUTI",
          "SUBS",
          "BLIN",
          "DEAF",
          "FEED",
          "STRE",
          "DNDD",
          "OTHM",
          "OTHS",
          "FOET",
          "MOOD",
          "SCHI"
        ]
      },
      "NZCodeSetsOfficialDiagnosisType": {
        "type": "string",
        "title": "Official Diagnosis Type",
        "description": "<p>Code set denoting an official diagnosis type a student is given for an identified wellbeing characteristic.</p> <ul>\n  <li>'MED' - Medical - ā-rongoā</li>\n  <li>'MEN' - Mental health and behavioural - ā-hauora Hinengaro, ā-whanonga hoki</li>\n  <li>'NEU' - Neurodevelopmental - Whanaketanga ā-Ioio</li>\n  <li>'PHY' - Physical - ā-tinana</li>\n  <li>'SEN' - Sensory - ā-tairongo</li>\n</ul>",
        "enum": [
          "MED",
          "MEN",
          "NEU",
          "PHY",
          "SEN"
        ]
      },
      "NZCodeSetsLearningSupportLearnerStatus": {
        "type": "string",
        "title": "Learning Support Learner Status",
        "description": "<p>Codes denoting the whether or not the learner is being actively managed for learning support.</p> <ul>\n  <li>'ACT' - Active - E Tuwhera Ana</li>\n  <li>'ARC' - Archived - Pūrangatia</li>\n</ul>",
        "enum": [
          "ACT",
          "ARC"
        ]
      },
      "NZCodeSetsLearningSupportCaseLead": {
        "type": "string",
        "title": "Learning Support Case Lead",
        "description": "<p>Code set denoting the Agency taking the lead on a learning support need case, e.g. MOE, Police, Corrections etc.)</p> <ul>\n  <li>'CO' - Corrections - Ara Poutama Aotearoa</li>\n  <li>'IH' - IHC - IHC</li>\n  <li>'MO' - MOE - Te Tāhuhu o te Mātauranga</li>\n  <li>'OT' - Oranga Tamariki - Oranga Tamariki</li>\n  <li>'OH' - Other - Rōpū kē</li>\n  <li>'PO' - Police - Ngā Pirihimana o Aotearoa</li>\n  <li>'RT' - RTLB - RTLB</li>\n  <li>'AC' - ACC - ACC</li>\n</ul>",
        "enum": [
          "CO",
          "IH",
          "MO",
          "OT",
          "OH",
          "PO",
          "RT",
          "AC"
        ]
      },
      "NZCodeSetsLearningSupportResponseOutcome": {
        "type": "string",
        "title": "Learning Support Response Outcome",
        "description": "<p>Code set denoting the outcome for the student that the response is seeking to achieve for a learning support need.</p> <ul>\n  <li>'FSR' - Further support required - Me Whai Tautoko Anō</li>\n  <li>'GAC' - Goal achieved - Whāinga i tutuki</li>\n  <li>'GNA' - Goal not achieved - Whāinga kāre i tutuki</li>\n  <li>'RNA' - Response not effective - Urupare kāre i tika</li>\n</ul>",
        "enum": [
          "FSR",
          "GAC",
          "GNA",
          "RNA"
        ]
      },
      "NZCodeSetsLearningSupportResponseTier": {
        "type": "string",
        "title": "Learning Support Response Tier",
        "description": "<p>Code set denoting the tier of response for a learning support need response.</p> <ul>\n  <li>'IND' - Individual - Takitahi</li>\n  <li>'TAR' - Targeted / Group - Hāngai/Rōpū</li>\n  <li>'UNI' - Universal - Ao whānui</li>\n</ul>",
        "enum": [
          "IND",
          "TAR",
          "UNI"
        ]
      },
      "NZCodeSetsLearningSupportResponseClosureStatus": {
        "type": "string",
        "title": "Learning Support Response Closure Status",
        "description": "<p>Code set denoting the status of the learning support need response when it is closed.</p> <ul>\n  <li>'COM' - Complete - Oti</li>\n  <li>'ILM' - Incomplete (support no longer required) - Noho tārewa (Kāre ngā mahi tautoko i hiahiatia)</li>\n  <li>'ISN' - Incomplete (learner moved from school) - Noho tārewa (kua haere te ākonga ki kura kē)</li>\n  <li>'NLF' - No longer funded - Kāre he pūtea tautoko</li>\n  <li>'OTH' - Other - He mea kē</li>\n</ul>",
        "enum": [
          "COM",
          "ILM",
          "ISN",
          "NLF",
          "OTH"
        ]
      },
      "NZCodeSetsLearningSupportResponseDetail": {
        "type": "string",
        "title": "Learning Support Response Detail",
        "description": "<p>Code set denoting the additional detail about the response type provided to the student to support the need.</p> <ul>\n  <li>'ACU' - Curriculum - Marau</li>\n  <li>'ASC' - School property - Rawa ā-kura</li>\n  <li>'HUP' - For help undertaking personal care tasks - Hei Āwhina i ngā Tūmahi Atawhai</li>\n  <li>'MOE' - MOE specialists - Mātanga na Te Tāhuhu o te Mātauranga</li>\n  <li>'OAN' - Other agency/NGO specialists - Umanga Kē/Mātanga NGO</li>\n  <li>'ODS' - Other adaptation for access - Urutaunga Angitu Kē</li>\n  <li>'OSS' - Other specialist support - Mātanga Tautoko Kē</li>\n  <li>'OTA' - Other teacher aide support in the classroom - He Tautoko Kairīwhi Kē ki te Akomanga</li>\n  <li>'OUD' - Other universal design - Hoahoatanga Whānui Kē</li>\n  <li>'SCU' - Curriculum - Marau</li>\n  <li>'SPC' - Support from community - Tautoko ā-hapori</li>\n  <li>'SPI' - Support from Iwi - Tautoko ā-iwi</li>\n</ul> plus 2 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsLearningSupportResponseDetailType\">NZCodeSetsLearningSupportResponseDetailType</a>",
        "enum": [
          "ACU",
          "ASC",
          "HUP",
          "MOE",
          "OAN",
          "ODS",
          "OSS",
          "OTA",
          "OUD",
          "SCU",
          "SPC",
          "SPI",
          "SRL",
          "USC"
        ]
      },
      "NZCodeSetsLearningSupportResponseType": {
        "type": "string",
        "title": "Learning Support Response Type",
        "description": "<p>Code set denoting the type of response provided to the student to support the need.</p> <ul>\n  <li>'ACC' - Accessible technology - Hangarau Whakamahi</li>\n  <li>'ADA' - Adaptation for Access - Urutaunga Tomo</li>\n  <li>'INC' - In class strategies / school - Rautaki ā-akomanga, ā-kura</li>\n  <li>'PRO' - Professional learning and upskilling - Whakahiki pūkenga</li>\n  <li>'SCH' - School financial support - Tahua Tautoko ā-kura</li>\n  <li>'SPE' - Specialist support - Tautoko Mātanga</li>\n  <li>'TEA' - Teacher aide support in the classroom - Tautokotanga Kairīwhi ki te akomanga</li>\n  <li>'UNI' - Universal Design - Hoahoatanga Whānui</li>\n</ul>",
        "enum": [
          "ACC",
          "ADA",
          "INC",
          "PRO",
          "SCH",
          "SPE",
          "TEA",
          "UNI"
        ]
      },
      "NZCodeSetsLearningSupportExternalFunder": {
        "type": "string",
        "title": "Learning Support External Funder",
        "description": "<p>Code set denoting who can fund a learning support need external response.</p> <ul>\n  <li>'ACC' - ACC</li>\n  <li>'BEH' - Behaviour Support - Tautoko whanonga</li>\n  <li>'ESO' - ESOL</li>\n  <li>'ESW' - ESW</li>\n  <li>'ICS' - ICS</li>\n  <li>'IWS' - IWS</li>\n  <li>'ORS' - ORS</li>\n  <li>'OTH' - Other - He mea kē</li>\n  <li>'PCC' - PCCS</li>\n  <li>'RTL' - RTLB</li>\n  <li>'IRF' - IRF</li>\n</ul>",
        "enum": [
          "ACC",
          "BEH",
          "ESO",
          "ESW",
          "ICS",
          "IWS",
          "ORS",
          "OTH",
          "PCC",
          "RTL",
          "IRF"
        ]
      },
      "NZCodeSetsLearningSupportExternalProvider": {
        "type": "string",
        "title": "Learning Support External Provider",
        "description": "<p>Code set denoting the providers of an external response for a learning support need.</p> <ul>\n  <li>'MOE' - MOE - Te Tāhuhu o te Mātauranga</li>\n  <li>'MOH' - MOH - </li>\n  <li>'ORA' - Oranga Tamariki - Oranga Tamariki</li>\n  <li>'CLU' - Cluster organisation - Kāhui Whakahaere</li>\n  <li>'NGO' - NGO - </li>\n  <li>'OTH' - Other - He mea kē</li>\n  <li>'RTB' - RTLB - </li>\n  <li>'RTL' - RTLit - </li>\n  <li>'RTM' - RT Māori - </li>\n</ul>",
        "enum": [
          "MOE",
          "MOH",
          "ORA",
          "CLU",
          "NGO",
          "OTH",
          "RTB",
          "RTL",
          "RTM"
        ]
      },
      "NZCodeSetsLearningSupportFundingStatus": {
        "type": "string",
        "title": "Learning Support Funding Status",
        "description": "<p>Code set denoting the status of the funding being provided for a learning support need external response.</p> <ul>\n  <li>'AP' - Approved - I whakaaetia</li>\n  <li>'DE' - Declined - Kāre i whakaaetia</li>\n  <li>'NO' - None - Kore</li>\n  <li>'RE' - Referred on - I tonoa i</li>\n  <li>'SU' - Submitted - Kua tukuna</li>\n  <li>'WA' - Waiting list - Rārangi roa</li>\n</ul>",
        "enum": [
          "AP",
          "DE",
          "NO",
          "RE",
          "SU",
          "WA"
        ]
      },
      "NZCodeSetsLearningSupportExtResponseStatus": {
        "type": "string",
        "title": "Learning Support Ext Response Status",
        "description": "<p>Code set denoting the status of the external response.</p> <ul>\n  <li>'ACT' - Active - Tuwhera</li>\n  <li>'CLO' - Closed - Kati</li>\n</ul>",
        "enum": [
          "ACT",
          "CLO"
        ]
      },
      "NZCodeSetsMoESpecialistService": {
        "type": "string",
        "title": "MoE Specialist Service",
        "description": "<p>Code set denoting the MOE specialist services available to as a response to a students support need.</p> <ul>\n  <li>'ACC' - Accessible Format Materials - Tānga Kōrero E Taea Ana</li>\n  <li>'ACT' - Activity Centres - Pokapū Tūmahi</li>\n  <li>'ADE' - ASSIST - Deaf Education Centres Regional Service</li>\n  <li>'AED' - Alternative Education - Mātauranga Kē</li>\n  <li>'AEI' - Alternative Early Intervention Service Providers - Kaituku Ratonga Wawaotanga Tōmua</li>\n  <li>'ATE' - Assistive Technology (AT) Equipment</li>\n  <li>'ATT' - Attendance Services (Non Enrolment Truancy Service (NETS) and DTS)</li>\n  <li>'BEH' - Behaviour Service - Ratonga Whanonga</li>\n  <li>'BIL' - Bilingual Support Workers - Kaimahi Tautoko Reorua</li>\n  <li>'BLE' - BLENNZ</li>\n  <li>'BOA' - Boarding Allowances</li>\n  <li>'CHO' - Cholmondeley Children's Centre</li>\n</ul> plus 46 more value(s) at <a href=\"http://specification.sifassociation.org/Implementation/NZ/3.2-rc2/CodeSets.html#NZCodeSetsMoESpecialistServiceType\">NZCodeSetsMoESpecialistServiceType</a>",
        "enum": [
          "ACC",
          "ACT",
          "ADE",
          "AED",
          "AEI",
          "ATE",
          "ATT",
          "BEH",
          "BIL",
          "BLE",
          "BOA",
          "CHO",
          "CLA",
          "COC",
          "COM",
          "CON",
          "DEC",
          "DHH",
          "EDY",
          "EIN",
          "EIS",
          "ENG",
          "ESO",
          "FIR",
          "ICS",
          "IMO",
          "IRF",
          "ITK",
          "NAT",
          "NZS",
          "ORS",
          "PBA",
          "PBC",
          "PBH",
          "PBI",
          "PBR",
          "PBS",
          "PBT",
          "PDM",
          "PDS",
          "PFS",
          "REA",
          "REG",
          "RFF",
          "RPC",
          "RTB",
          "RTD",
          "RTL",
          "SCH",
          "SER",
          "SES",
          "STA",
          "STO",
          "STU",
          "TEK",
          "TIP",
          "TPM",
          "TPU"
        ]
      },
      "NZCodeSetsLearningSupportInternalFunder": {
        "type": "string",
        "title": "Learning Support Internal Funder",
        "description": "<p>Code set denoting who can fund a learning support need internal response.</p> <ul>\n  <li>'BOA' - Board funded - Nā te Poari i tautoko</li>\n  <li>'NTA' - Not applicable - Kāre i arohia</li>\n  <li>'SEG' - SEG</li>\n</ul>",
        "enum": [
          "BOA",
          "NTA",
          "SEG"
        ]
      },
      "NZCodeSetsLearningSupportIntResponseStatus": {
        "type": "string",
        "title": "Learning Support Int Response Status",
        "description": "<p>Code set denoting the status of the internal response.</p> <ul>\n  <li>'CLO' - Closed - Kati</li>\n  <li>'MON' - Monitoring - Te Aro turuki</li>\n  <li>'OBS' - Observing - Te Mātaki</li>\n</ul>",
        "enum": [
          "CLO",
          "MON",
          "OBS"
        ]
      },
      "NZCodeSetsLearningSupportInternalProvider": {
        "type": "string",
        "title": "Learning Support Internal Provider",
        "description": "<p>Code set denoting the providers of an internal response for a learning support need.</p> <ul>\n  <li>'COU' - Counsellor - Kaitautāwhi</li>\n  <li>'ESW' - ESW</li>\n  <li>'HEA' - Health Professional - Mātanga Hauora</li>\n  <li>'RTL' - RTLB</li>\n  <li>'SEN' - SENCO</li>\n  <li>'SWI' - SWIS</li>\n  <li>'TAI' - Teacher Aide - Kairīwhi</li>\n  <li>'TEA' - Teacher - Kaiako</li>\n</ul>",
        "enum": [
          "COU",
          "ESW",
          "HEA",
          "RTL",
          "SEN",
          "SWI",
          "TAI",
          "TEA"
        ]
      },
      "patchBellSchedule": {
        "title": "BellSchedule",
        "description": "Defines bell schedules, each of which is a collection of periods within an academic day with start and end times associated. These bell schedules are assigned to calendar dates on which the school is in session using ScheduleDate in order to specify the school schedule on those dates. These bell schedules should generally only be used to define standard day types. Exception days (unless they repeat multiple times and follow a common template) are defined using ScheduleEvent and ScheduleCustomDayEvent.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "BellScheduleRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "BellScheduleLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "BellScheduleName": {
            "type": "string",
            "description": "The name of the Bell Schedule."
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "Schedule": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "SchedulePeriodList": {
            "description": "A list of periods that make up this academic day, e.g. Period 1, Period 2 etc.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SchedulePeriodTime": {
                "type": "array",
                "items": {
                  "description": "The definition of a SchedulePeriod start and end time, on a particular Bell Schedule.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "Period": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "StartTime": {
                      "type": "string",
                      "format": "time",
                      "description": "The time the period starts."
                    },
                    "EndTime": {
                      "type": "string",
                      "format": "time",
                      "description": "The time the period ends."
                    }
                  }
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchBellSchedules": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "BellSchedule"
        ],
        "title": "BellSchedules",
        "description": "Wrapper around an array of BellSchedules",
        "properties": {
          "BellSchedule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchBellSchedule"
            },
            "description": "Defines bell schedules, each of which is a collection of periods within an academic day with start and end times associated. These bell schedules are assigned to calendar dates on which the school is in session using ScheduleDate in order to specify the school schedule on those dates. These bell schedules should generally only be used to define standard day types. Exception days (unless they repeat multiple times and follow a common template) are defined using ScheduleEvent and ScheduleCustomDayEvent."
          }
        }
      },
      "patchCredential": {
        "title": "Credential",
        "description": "<p>A qualification or other award published by a national body, professional association or other interested party. The Credential recognises a set of learning that students have undertaken and successfully completed. </p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "CredentialRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "CredentialLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Title": {
            "type": "string",
            "description": "The name of the Credential. eg: \"NCEA Level 1\""
          },
          "VersionNo": {
            "type": "number",
            "description": "The version number of the Credential."
          },
          "Administrator": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "Description": {
            "type": "string",
            "description": "Description of the credential"
          },
          "SubjectAreaList": {
            "description": "Which standard MoE Learning / Subject Areas is this Credential part of?",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSubjectArea"
                }
              },
              "NCEASubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsNCEASubjectArea"
                }
              }
            }
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsCredentialStatus"
          },
          "PublicationDate": {
            "type": "string",
            "format": "date-time",
            "description": "This is the date that the administering organization published the Credential."
          },
          "SupercededDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the administering organization superceded (or will supercede) the Credential. May be future dated."
          },
          "DiscontinuedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the administering organization discontinued (or will discontinue) the Credential. May be future dated."
          },
          "Credits": {
            "type": "number",
            "description": "The number of course (or other qualification) credits that will be achieved by attaining this Credential."
          },
          "Level": {
            "type": "string",
            "description": "The level of the credential if applicable, eg. 1,2 or 3 for NCEA levels"
          },
          "RelatedLearningStandardList": {
            "description": "A list of related LearningStandard references",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "RelatedLearningStandard": {
                "type": "array",
                "items": {
                  "description": "A member of a list of related LearningStandard references.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "LocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object."
                    },
                    "Relationship": {
                      "$ref": "#/components/schemas/NZCodeSetsLearningStandardRelationshipType"
                    }
                  }
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchCredentials": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Credential"
        ],
        "title": "Credentials",
        "description": "Wrapper around an array of Credentials",
        "properties": {
          "Credential": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchCredential"
            },
            "description": "<p>A qualification or other award published by a national body, professional association or other interested party. The Credential recognises a set of learning that students have undertaken and successfully completed. </p>"
          }
        }
      },
      "patchLearningStandard": {
        "title": "LearningStandard",
        "description": "<p>A curriculum standard or the like published by a national body, professional association or other interested party. The LearningStandard describes a set of learning that students are expected to undertake. </p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "LearningStandardRefId": {
            "$ref": "#/components/schemas/LocalId",
            "readOnly": true
          },
          "LearningStandardLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Title": {
            "type": "string",
            "description": "The name of the LearningStandard. eg: \"Demonstrate understanding of chemical reactivity\""
          },
          "Number": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "description": "A unique number that is used to identify the learning standard. One use of this is for NZQA standard numbers which cannot be used as a unique identifier (in LocalId) on their own as they are versioned so are part of a composite key with VersionNo."
          },
          "VersionNo": {
            "type": "number",
            "description": "The version number of the LearningStandard."
          },
          "Publisher": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "StandardType": {
            "$ref": "#/components/schemas/NZCodeSetsLearningStandardType"
          },
          "LearningStandardFamily": {
            "$ref": "#/components/schemas/NZCodeSetsLearningStandardFamily"
          },
          "Description": {
            "type": "string",
            "description": "Description of the standards document."
          },
          "SubjectAreaList": {
            "description": "Which standard MoE Learning / Subject Areas is this LearningStandard part of?",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSubjectArea"
                }
              },
              "NCEASubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsNCEASubjectArea"
                }
              }
            }
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsLearningStandardStatus"
          },
          "PublicationDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the publishing organization published the standard."
          },
          "SupercededDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the publishing organization superceded (or will supercede) the LearningStandard. May be future dated."
          },
          "DiscontinuedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the publishing organization discontinued (or will discontinue) the LearningStandard. May be future dated."
          },
          "Credits": {
            "type": "number",
            "description": "The number of course (or other qualification) credits that will be achieved by passing this LearningStandard."
          },
          "Level": {
            "type": "number",
            "description": "Where the publisher is NZQA, Which NCEA Level applies to the LearningStandard?"
          },
          "AssessmentType": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentType"
          },
          "RelatedLearningStandardList": {
            "description": "A list of related LearningStandard references",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "RelatedLearningStandard": {
                "type": "array",
                "items": {
                  "description": "A member of a list of related LearningStandard references.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "LocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object."
                    },
                    "Relationship": {
                      "$ref": "#/components/schemas/NZCodeSetsLearningStandardRelationshipType"
                    }
                  }
                }
              }
            }
          },
          "CredentialList": {
            "description": "A list of Credentials that the learning standard contributes to attaining.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Credential": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        },
        "required": [
          "LearningStandardRefId"
        ]
      },
      "patchLearningStandards": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "LearningStandard"
        ],
        "title": "LearningStandards",
        "description": "Wrapper around an array of LearningStandards",
        "properties": {
          "LearningStandard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchLearningStandard"
            },
            "description": "<p>A curriculum standard or the like published by a national body, professional association or other interested party. The LearningStandard describes a set of learning that students are expected to undertake. </p>"
          }
        }
      },
      "patchOrganisation": {
        "title": "Organisation",
        "description": "Education Provider entities (ECEs, Schools & Tertiary Education Institutions), Communities (Kāhui Ako, Learning Support Clusters, etc.), and others (Teen Parent Units, Activity Centres. etc.)",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Address": {
            "description": "The set of postal and other addresses that the Organisation uses",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Physical": {
                "description": "The person or organisation's physical address",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Type": {
                    "$ref": "#/components/schemas/NZCodeSetsAddressType"
                  },
                  "Line1": {
                    "type": "string",
                    "description": "Address line 1."
                  },
                  "Line2": {
                    "type": "string",
                    "description": "Address line 2."
                  },
                  "Line3": {
                    "type": "string",
                    "description": "Address line 3."
                  },
                  "Line4": {
                    "type": "string",
                    "description": "Address line 4."
                  },
                  "Suburb": {
                    "type": "string",
                    "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                  },
                  "City": {
                    "type": "string",
                    "description": "The city part of the address."
                  },
                  "StateProvince": {
                    "type": "string",
                    "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                  },
                  "Country": {
                    "type": "string",
                    "description": "The country code."
                  },
                  "PostalCode": {
                    "type": "string",
                    "description": "The ZIP/postal code."
                  },
                  "GridLocation": {
                    "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Latitude": {
                        "type": "number",
                        "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                        "minimum": -90,
                        "maximum": 90
                      },
                      "Longitude": {
                        "type": "number",
                        "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                        "minimum": -180,
                        "maximum": 180
                      }
                    }
                  },
                  "StatisticalAreaList": {
                    "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "StatisticalArea": {
                        "type": "array",
                        "items": {
                          "description": "A particular statistical area defined by Statistics New Zealand.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "SpatialUnitType": {
                              "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                            },
                            "Code": {
                              "type": "string",
                              "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Postal": {
                "description": "The person or organisation's postal address",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Type": {
                    "$ref": "#/components/schemas/NZCodeSetsAddressType"
                  },
                  "Line1": {
                    "type": "string",
                    "description": "Address line 1."
                  },
                  "Line2": {
                    "type": "string",
                    "description": "Address line 2."
                  },
                  "Line3": {
                    "type": "string",
                    "description": "Address line 3."
                  },
                  "Line4": {
                    "type": "string",
                    "description": "Address line 4."
                  },
                  "Suburb": {
                    "type": "string",
                    "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                  },
                  "City": {
                    "type": "string",
                    "description": "The city part of the address."
                  },
                  "StateProvince": {
                    "type": "string",
                    "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                  },
                  "Country": {
                    "type": "string",
                    "description": "The country code."
                  },
                  "PostalCode": {
                    "type": "string",
                    "description": "The ZIP/postal code."
                  },
                  "GridLocation": {
                    "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Latitude": {
                        "type": "number",
                        "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                        "minimum": -90,
                        "maximum": 90
                      },
                      "Longitude": {
                        "type": "number",
                        "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                        "minimum": -180,
                        "maximum": 180
                      }
                    }
                  },
                  "StatisticalAreaList": {
                    "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "StatisticalArea": {
                        "type": "array",
                        "items": {
                          "description": "A particular statistical area defined by Statistics New Zealand.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "SpatialUnitType": {
                              "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                            },
                            "Code": {
                              "type": "string",
                              "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "CommunicationChannel": {
            "description": "A list of one or more methods of communication with the organisation",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Website": {
                "description": "The person/organisation's Website address",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Notes": {
                    "type": "string",
                    "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                  },
                  "PreferenceOrderNumber": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295,
                    "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                  },
                  "Usage": {
                    "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                  },
                  "Value": {
                    "type": "string",
                    "description": "The unique value that provides access to the channel. eg: URL for a website; Facebook page addess, Twitter handle."
                  }
                }
              }
            }
          },
          "ContactList": {
            "description": "A list of one or more cotact persons related to the organisation",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Contact": {
                "type": "array",
                "items": {
                  "description": "A particular person's contact details",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "Name": {
                      "description": "The contact's name",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Title": {
                          "type": "string",
                          "description": "A title or prefix associated with the name."
                        },
                        "FamilyName": {
                          "type": "string",
                          "description": "Also known as Last Name, although some cultures may not present a family name as the last name."
                        },
                        "GivenName": {
                          "type": "string",
                          "description": "Also known as First Name, although some cultures may not present this name as the first element in a name. May contain a composite of all given names."
                        },
                        "MiddleName": {
                          "type": "string",
                          "description": "Where more than one Given Name, these may be combined in one composite field or else populated in several elements."
                        },
                        "SecondMiddleName": {
                          "type": "string",
                          "description": "Middle names can be sent altogether in one element or if the source system has more than one middle name field, they can be spread across two elements. SecondMiddleName will either contain no values, or it will hold the person's second and subsequent middle names while MiddleName will hold the person's first middle name."
                        },
                        "FamilyNameFirst": {
                          "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                        },
                        "PreferredFamilyName": {
                          "type": "string",
                          "description": "A preferred version of the Family Name. Note:A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                        },
                        "PreferredFamilyNameFirst": {
                          "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                        },
                        "PreferredGivenName": {
                          "type": "string",
                          "description": "A preferred version of the Given Name. Note: A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                        },
                        "Suffix": {
                          "type": "string",
                          "description": "Textual suffix like PHD, JP, BSc."
                        },
                        "FullName": {
                          "type": "string",
                          "description": "A combination of all name elements as one composite text element"
                        },
                        "Type": {
                          "$ref": "#/components/schemas/NZCodeSetsNameUsageType"
                        },
                        "IsVerified": {
                          "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                        }
                      }
                    },
                    "PositionTitle": {
                      "type": "string",
                      "description": "The title the contact has within the Organisation being contacted"
                    },
                    "Role": {
                      "$ref": "#/components/schemas/NZCodeSetsOrganisationContactRole"
                    },
                    "Address": {
                      "description": "A set of Address elements.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Physical": {
                          "description": "The person or organisation's physical address",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "Type": {
                              "$ref": "#/components/schemas/NZCodeSetsAddressType"
                            },
                            "Line1": {
                              "type": "string",
                              "description": "Address line 1."
                            },
                            "Line2": {
                              "type": "string",
                              "description": "Address line 2."
                            },
                            "Line3": {
                              "type": "string",
                              "description": "Address line 3."
                            },
                            "Line4": {
                              "type": "string",
                              "description": "Address line 4."
                            },
                            "Suburb": {
                              "type": "string",
                              "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                            },
                            "City": {
                              "type": "string",
                              "description": "The city part of the address."
                            },
                            "StateProvince": {
                              "type": "string",
                              "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                            },
                            "Country": {
                              "type": "string",
                              "description": "The country code."
                            },
                            "PostalCode": {
                              "type": "string",
                              "description": "The ZIP/postal code."
                            },
                            "GridLocation": {
                              "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "Latitude": {
                                  "type": "number",
                                  "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                                  "minimum": -90,
                                  "maximum": 90
                                },
                                "Longitude": {
                                  "type": "number",
                                  "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                                  "minimum": -180,
                                  "maximum": 180
                                }
                              }
                            },
                            "StatisticalAreaList": {
                              "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "StatisticalArea": {
                                  "type": "array",
                                  "items": {
                                    "description": "A particular statistical area defined by Statistics New Zealand.",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "SpatialUnitType": {
                                        "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                      },
                                      "Code": {
                                        "type": "string",
                                        "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Postal": {
                          "description": "The person or organisation's postal address",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "Type": {
                              "$ref": "#/components/schemas/NZCodeSetsAddressType"
                            },
                            "Line1": {
                              "type": "string",
                              "description": "Address line 1."
                            },
                            "Line2": {
                              "type": "string",
                              "description": "Address line 2."
                            },
                            "Line3": {
                              "type": "string",
                              "description": "Address line 3."
                            },
                            "Line4": {
                              "type": "string",
                              "description": "Address line 4."
                            },
                            "Suburb": {
                              "type": "string",
                              "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                            },
                            "City": {
                              "type": "string",
                              "description": "The city part of the address."
                            },
                            "StateProvince": {
                              "type": "string",
                              "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                            },
                            "Country": {
                              "type": "string",
                              "description": "The country code."
                            },
                            "PostalCode": {
                              "type": "string",
                              "description": "The ZIP/postal code."
                            },
                            "GridLocation": {
                              "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "Latitude": {
                                  "type": "number",
                                  "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                                  "minimum": -90,
                                  "maximum": 90
                                },
                                "Longitude": {
                                  "type": "number",
                                  "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                                  "minimum": -180,
                                  "maximum": 180
                                }
                              }
                            },
                            "StatisticalAreaList": {
                              "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "StatisticalArea": {
                                  "type": "array",
                                  "items": {
                                    "description": "A particular statistical area defined by Statistics New Zealand.",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "SpatialUnitType": {
                                        "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                      },
                                      "Code": {
                                        "type": "string",
                                        "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Email": {
                      "description": "List of Email elements.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Personal": {
                          "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "Notes": {
                              "type": "string",
                              "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                            },
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 4294967295,
                              "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                            },
                            "Usage": {
                              "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                            },
                            "SourceOrganisation": {
                              "$ref": "#/components/schemas/OrganisationObjectReference"
                            },
                            "Address": {
                              "type": "string",
                              "description": "The actual email address."
                            }
                          }
                        },
                        "Work": {
                          "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "Notes": {
                              "type": "string",
                              "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                            },
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 4294967295,
                              "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                            },
                            "Usage": {
                              "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                            },
                            "SourceOrganisation": {
                              "$ref": "#/components/schemas/OrganisationObjectReference"
                            },
                            "Address": {
                              "type": "string",
                              "description": "The actual email address."
                            }
                          }
                        }
                      }
                    },
                    "Phone": {
                      "description": "List of PhoneNumber elements.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Home": {
                          "description": "A person's home number.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "Notes": {
                              "type": "string",
                              "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                            },
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 4294967295,
                              "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                            },
                            "Usage": {
                              "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                            },
                            "Number": {
                              "type": "string",
                              "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                            },
                            "Extension": {
                              "type": "string",
                              "description": "Phone number extension."
                            }
                          }
                        },
                        "Work": {
                          "description": "A person's work number.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "Notes": {
                              "type": "string",
                              "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                            },
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 4294967295,
                              "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                            },
                            "Usage": {
                              "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                            },
                            "Number": {
                              "type": "string",
                              "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                            },
                            "Extension": {
                              "type": "string",
                              "description": "Phone number extension."
                            }
                          }
                        },
                        "Mobile": {
                          "description": "A person's mobile number.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "Notes": {
                              "type": "string",
                              "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                            },
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 4294967295,
                              "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                            },
                            "Usage": {
                              "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                            },
                            "Number": {
                              "type": "string",
                              "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                            },
                            "Extension": {
                              "type": "string",
                              "description": "Phone number extension."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "EducationRegion": {
            "$ref": "#/components/schemas/NZCodeSetsEducationRegion"
          },
          "SpecialEducationDistrict": {
            "$ref": "#/components/schemas/NZCodeSetsSpecialEducationDistrict"
          },
          "Email": {
            "description": "The set of contact email addresses that the Organisation uses",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Main": {
                "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Notes": {
                    "type": "string",
                    "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                  },
                  "PreferenceOrderNumber": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295,
                    "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                  },
                  "Usage": {
                    "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                  },
                  "SourceOrganisation": {
                    "$ref": "#/components/schemas/OrganisationObjectReference"
                  },
                  "Address": {
                    "type": "string",
                    "description": "The actual email address."
                  }
                }
              }
            }
          },
          "EntityClose": {
            "type": "string",
            "format": "date-time",
            "description": "Closing date of entity. Only present for closed providers."
          },
          "EntityOpen": {
            "type": "string",
            "format": "date-time",
            "description": "Opening date of entity. For proposed schools this will be the projected opening date. For open schools this may not be present."
          },
          "LocationList": {
            "description": "A list of one or more locations, from which the organisation operates or provides a service.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Location": {
                "type": "array",
                "items": {
                  "description": "This element contains data about a geographical location.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "Description": {
                      "type": "string",
                      "description": "A description for the Location."
                    },
                    "LocationNum": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "description": "Number identifying the individual location within the set of locations used by the Provider."
                    },
                    "Address": {
                      "description": "The physical address of the Location",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Type": {
                          "$ref": "#/components/schemas/NZCodeSetsAddressType"
                        },
                        "Line1": {
                          "type": "string",
                          "description": "Address line 1."
                        },
                        "Line2": {
                          "type": "string",
                          "description": "Address line 2."
                        },
                        "Line3": {
                          "type": "string",
                          "description": "Address line 3."
                        },
                        "Line4": {
                          "type": "string",
                          "description": "Address line 4."
                        },
                        "Suburb": {
                          "type": "string",
                          "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                        },
                        "City": {
                          "type": "string",
                          "description": "The city part of the address."
                        },
                        "StateProvince": {
                          "type": "string",
                          "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                        },
                        "Country": {
                          "type": "string",
                          "description": "The country code."
                        },
                        "PostalCode": {
                          "type": "string",
                          "description": "The ZIP/postal code."
                        },
                        "GridLocation": {
                          "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "Latitude": {
                              "type": "number",
                              "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                              "minimum": -90,
                              "maximum": 90
                            },
                            "Longitude": {
                              "type": "number",
                              "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                              "minimum": -180,
                              "maximum": 180
                            }
                          }
                        },
                        "StatisticalAreaList": {
                          "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "StatisticalArea": {
                              "type": "array",
                              "items": {
                                "description": "A particular statistical area defined by Statistics New Zealand.",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "SpatialUnitType": {
                                    "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                  },
                                  "Code": {
                                    "type": "string",
                                    "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "GridLocation": {
                      "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Latitude": {
                          "type": "number",
                          "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                          "minimum": -90,
                          "maximum": 90
                        },
                        "Longitude": {
                          "type": "number",
                          "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                          "minimum": -180,
                          "maximum": 180
                        }
                      }
                    },
                    "StatisticalAreaList": {
                      "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "StatisticalArea": {
                          "type": "array",
                          "items": {
                            "description": "A particular statistical area defined by Statistics New Zealand.",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "SpatialUnitType": {
                                "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                              },
                              "Code": {
                                "type": "string",
                                "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "Name": {
            "type": "string",
            "description": "The normal business name of the Organisation"
          },
          "Phone": {
            "description": "The set of contact phone numbers that the Organisation uses",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Main": {
                "description": "An organisation's main contact number.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Notes": {
                    "type": "string",
                    "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                  },
                  "PreferenceOrderNumber": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295,
                    "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                  },
                  "Usage": {
                    "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                  },
                  "Number": {
                    "type": "string",
                    "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                  },
                  "Extension": {
                    "type": "string",
                    "description": "Phone number extension."
                  }
                }
              }
            }
          },
          "RelatedOrganisationList": {
            "description": "A list of other organisations that are related to the Provider",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "RelatedOrganisation": {
                "type": "array",
                "items": {
                  "description": "Extends ObjectReferenceType to add an extra element, OrganisationType, describing the nature of the related organisation.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/MoEOrgId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object. (optional and read-only)"
                    },
                    "LocationNum": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "description": "Number identifying the individual location within the set of locations used by the Provider."
                    },
                    "StartDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The start date of the relationship between the two organisations"
                    },
                    "EndDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The end date of the relationship between the two organisations"
                    },
                    "Type": {
                      "$ref": "#/components/schemas/NZCodeSetsOrganisationRelationshipType"
                    }
                  }
                }
              }
            },
            "readOnly": true
          },
          "OperationalStatus": {
            "$ref": "#/components/schemas/NZCodeSetsOperationalStatus"
          },
          "OperationalStatusReason": {
            "$ref": "#/components/schemas/NZCodeSetsOperationalStatusReason"
          },
          "Type": {
            "$ref": "#/components/schemas/NZCodeSetsOrganisationType"
          },
          "SectorRole": {
            "$ref": "#/components/schemas/NZCodeSetsOrganisationSectorRole"
          },
          "ProviderSMS": {
            "$ref": "#/components/schemas/NZCodeSetsSchoolManagementSystem"
          },
          "TeRitoConfig": {
            "description": "Provides iinformation specific to Te Rito, e.g. which functionality in Te Rito an organisation (school, ECE etc.) is utilising.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DataAnalysisDashboardsInd": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "StandardisedLearningSupportRegisterInd": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "VirtualLearningEnvironmentInd": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              }
            }
          },
          "IsLicencedECEServiceProvider": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "IsPlaygroupServiceProvider": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "ECEServiceProviderOwnershipType": {
            "$ref": "#/components/schemas/NZCodeSetsECEServiceProviderOwnershipType"
          },
          "OrganisationRefId": {
            "$ref": "#/components/schemas/MoEOrgId"
          },
          "OrganisationLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Authority": {
            "$ref": "#/components/schemas/NZCodeSetsProviderAuthority"
          },
          "SchoolService": {
            "description": "Only present if the Provider is a provider of school education services. Contains properties that are school-specific.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CoEdStatus": {
                "$ref": "#/components/schemas/NZCodeSetsSchoolCoEdStatus"
              },
              "Decile": {
                "type": "integer",
                "description": "A description of the socio-economic position of a school's student community according to the MoE decile rating system.",
                "minimum": 1,
                "maximum": 10
              },
              "NewEntrantPolicyList": {
                "description": "A list of recognised policy choices adopted by the School.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "EnactedPolicy": {
                    "type": "array",
                    "items": {
                      "description": "A descriptor for a particular enacted policy that has been adopted by a school.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "EffectiveFrom": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date from which the school adopted the policy. If not populated then this is the current/original policy of the school."
                        },
                        "EffectiveTo": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date after which the school has no longer adopted the policy. If not populated then the school has no planned date to end the policy."
                        },
                        "Policy": {
                          "$ref": "#/components/schemas/NZCodeSetsEnactedPolicy"
                        }
                      }
                    }
                  }
                }
              },
              "AllowManualProvisioning": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "SchoolClassificationList": {
                "description": "A list of School Classification descriptors that further describe the nature of a school",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Classification": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NZCodeSetsSchoolClassification"
                    }
                  }
                }
              },
              "SchoolYearList": {
                "description": "A list of SchoolYear elements describing the genders of students accepted for enrolment at each year level.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "SchoolYear": {
                    "type": "array",
                    "items": {
                      "description": "A descriptor for a particular Year Level offered by the school, including detail of the gender of students that are accepted for enrolment in this year level.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "YearLevel": {
                          "type": "integer",
                          "description": "Which year level are we describing?",
                          "minimum": 1,
                          "maximum": 13
                        },
                        "FIRSTSchoolYearGenderId": {
                          "type": "integer",
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "description": "This is the unique identifier for the combination of School Year, Gender and Boarding received from FIRST. There may be multiple sets of School Year, Gender and boarding for a school, each with their own identifier. A record must be created for each set."
                        },
                        "Gender": {
                          "$ref": "#/components/schemas/NZCodeSetsSchoolingGender"
                        },
                        "Boarding": {
                          "$ref": "#/components/schemas/NZCodeSetsSchoolBoardingType"
                        }
                      }
                    }
                  }
                }
              },
              "TechnologyCentreName": {
                "type": "string",
                "description": "The name of the Technology Centre that is run as part of the School; Eg: Marlborough Technology Centre is run as part of Bohally Intermediate School."
              }
            }
          },
          "ECEService": {
            "description": "Only present if the Provider is a provider of early childhood education services. Contains properties that are ECE specific.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Type": {
                "$ref": "#/components/schemas/NZCodeSetsECEServiceType"
              },
              "PrimaryLanguage": {
                "$ref": "#/components/schemas/NZCodeSetsLanguage"
              },
              "PrimaryLanguageOther": {
                "type": "string",
                "description": "Additional information about a language when one of the 'Other' language codes sets is selected."
              }
            }
          },
          "TertiaryService": {
            "description": "Only present if the Provider is a provider of tertiary education services. Contains properties that are Tertiary Education specific. A placeholder for future expansion",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Type": {
                "type": "string",
                "description": "Code denoting the kind of Tertiary service. eg: University, Wananga, etc."
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          },
          "LastSyncDateTime": {
            "description": "Date & Time the last EdsbyLink data sync batch was processed",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "LastSIFDateTime": {
            "description": "Date & Time the last SIF API transaction was processed",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "OrganisationRefId"
        ]
      },
      "patchOrganisations": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Organisation"
        ],
        "title": "Organisations",
        "description": "Wrapper around an array of Organisations",
        "properties": {
          "Organisation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchOrganisation"
            },
            "description": "Education Provider entities (ECEs, Schools & Tertiary Education Institutions), Communities (Kāhui Ako, Learning Support Clusters, etc.), and others (Teen Parent Units, Activity Centres. etc.)"
          }
        }
      },
      "patchOrganisationRelationship": {
        "title": "OrganisationRelationship",
        "description": "<p>Records a recognised relationship between two education Organisations. The two organisations are referred to as the Source Organisation and the Related Organisation. </p> <p>RelationshipType records the nature of the relationship between the two organisations, and gives guidance on which is the Source Organisation and which is the Related Organisation. </p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "OrganisationRelationshipRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "OrganisationRelationshipLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsOrganisationRelationshipStatus"
          },
          "RelationshipType": {
            "$ref": "#/components/schemas/NZCodeSetsOrganisationRelationshipType"
          },
          "SourceOrganisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "SourceOrganisationRole": {
            "$ref": "#/components/schemas/NZCodeSetsSourceOrganisationRole"
          },
          "SourceOrganisationAgreementDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the source Organisation in the relationship registered their agreement to the relationship. nil value if the source Organisation is yet to register their agreement ot the relationship."
          },
          "RelatedOrganisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "RelatedOrganisationRole": {
            "$ref": "#/components/schemas/NZCodeSetsRelatedOrganisationRole"
          },
          "RelatedOrganisationAgreementDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the related Organisation in the relationship registered their agreement to the relationship. nil value if the related Organisation is yet to register their agreement ot the relationship."
          },
          "EffectiveDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date from which the organisation relationship is active."
          },
          "ExpirationDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date after which the organisation relationship is no longer active."
          },
          "YearLevelList": {
            "description": "A list of YearLevels, denoting the year levels of the learners being hosted or sent from the client or contributing organisation",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "YearLevel": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "SubjectAreaList": {
            "description": "A list of Subject or Learning Areas, denoting the curriculum subjects or learning areas that the learners being sent by the Source Organisation are taught at the Related Organisation.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSubjectArea"
                }
              },
              "NCEASubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsNCEASubjectArea"
                }
              }
            }
          },
          "Description": {
            "type": "string",
            "description": "Free text description providing more detail about the organisation relationship."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchOrganisationRelationships": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "OrganisationRelationship"
        ],
        "title": "OrganisationRelationships",
        "description": "Wrapper around an array of OrganisationRelationships",
        "properties": {
          "OrganisationRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchOrganisationRelationship"
            },
            "description": "<p>Records a recognised relationship between two education Organisations. The two organisations are referred to as the Source Organisation and the Related Organisation. </p> <p>RelationshipType records the nature of the relationship between the two organisations, and gives guidance on which is the Source Organisation and which is the Related Organisation. </p>"
          }
        }
      },
      "patchSchedule": {
        "title": "Schedule",
        "description": "<p>A rotation of ScheduleAcademicDays that a Provider has in place to manage their timetable.</p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ScheduleRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "ScheduleLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "ScheduleName": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "The start date of the schedule."
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "description": "The end date of the schedule."
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "AcademicDayList": {
            "description": "A list of the academic days within this schedule.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AcademicDay": {
                "type": "array",
                "items": {
                  "description": "An academic day that is part of this schedule",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "LocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object."
                    },
                    "BellSchedule": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "PeriodList": {
                      "description": "A list of the periods that make up this academic day, e.g. Period 1, Period 2 etc.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Period": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ObjectReference"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchSchedules": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Schedule"
        ],
        "title": "Schedules",
        "description": "Wrapper around an array of Schedules",
        "properties": {
          "Schedule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchSchedule"
            },
            "description": "<p>A rotation of ScheduleAcademicDays that a Provider has in place to manage their timetable.</p>"
          }
        }
      },
      "patchScheduleAcademicDay": {
        "title": "ScheduleAcademicDay",
        "description": "An academic day that makes up all or part of a schedule for a provider. An academic day represents a structured day that reoccurs consistently e.g. Day A has five periods that occurs Mon-Wed and Day B has four periods and occurs Thurs-Fri.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ScheduleAcademicDayRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "ScheduleAcademicDayLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "AcademicDayName": {
            "type": "string",
            "description": "The name of the Academic Day."
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "Schedule": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "BellSchedule": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "PeriodList": {
            "description": "A list of periods that make up this academic day, e.g. Period 1, Period 2 etc.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Period": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchScheduleAcademicDays": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ScheduleAcademicDay"
        ],
        "title": "ScheduleAcademicDays",
        "description": "Wrapper around an array of ScheduleAcademicDays",
        "properties": {
          "ScheduleAcademicDay": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchScheduleAcademicDay"
            },
            "description": "An academic day that makes up all or part of a schedule for a provider. An academic day represents a structured day that reoccurs consistently e.g. Day A has five periods that occurs Mon-Wed and Day B has four periods and occurs Thurs-Fri."
          }
        }
      },
      "patchScheduleDate": {
        "title": "ScheduleDate",
        "description": "Provides information about the schedule that is being followed on a specific calendar date at a particular Provider, e.g. Academic Day A from the Term 1 Schedule using the Periods and their start and end times defined in Bell Schedule Day A.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ScheduleDateRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "ScheduleDateLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "CalendarDate": {
            "type": "string",
            "format": "date-time",
            "description": "The actual date the school is in session."
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "Term": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "Schedule": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "AcademicDay": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "BellSchedule": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "TeachingGroupEventList": {
            "description": "List of generic object references to the set of TeachingGroupEvents that take place on this calendar date.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Event": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "SchedulePeriodList": {
            "description": "A list of the periods that took place on this scheduled date and their start and end times.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SchedulePeriodTime": {
                "type": "array",
                "items": {
                  "description": "The definition of a SchedulePeriod start and end time, on a particular Bell Schedule.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "Period": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "StartTime": {
                      "type": "string",
                      "format": "time",
                      "description": "The time the period starts."
                    },
                    "EndTime": {
                      "type": "string",
                      "format": "time",
                      "description": "The time the period ends."
                    }
                  }
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchScheduleDates": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ScheduleDate"
        ],
        "title": "ScheduleDates",
        "description": "Wrapper around an array of ScheduleDates",
        "properties": {
          "ScheduleDate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchScheduleDate"
            },
            "description": "Provides information about the schedule that is being followed on a specific calendar date at a particular Provider, e.g. Academic Day A from the Term 1 Schedule using the Periods and their start and end times defined in Bell Schedule Day A."
          }
        }
      },
      "patchSchedulePeriod": {
        "title": "SchedulePeriod",
        "description": "Defines the periods that take place within one or more academic days. Periods are assigned to particular days in the Schedule in SchduleAcademicDay.PeriodList",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "SchedulePeriodRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "SchedulePeriodLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "PeriodName": {
            "type": "string",
            "description": "The name of the schedule period."
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "Schedule": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchSchedulePeriods": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "SchedulePeriod"
        ],
        "title": "SchedulePeriods",
        "description": "Wrapper around an array of SchedulePeriods",
        "properties": {
          "SchedulePeriod": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchSchedulePeriod"
            },
            "description": "Defines the periods that take place within one or more academic days. Periods are assigned to particular days in the Schedule in SchduleAcademicDay.PeriodList"
          }
        }
      },
      "patchScheduleTerm": {
        "title": "ScheduleTerm",
        "description": "<p>Provides information about school terms, tertiary terms etc., either at a national, or provider level, within a school year. If the term is being supplied at a national level, no provider information will be linked.</p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ScheduleTermRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "ScheduleTermLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "TermName": {
            "type": "string",
            "description": "The name of the schedule term."
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "SchoolYear": {
            "type": "integer",
            "minimum": 1,
            "maximum": 9999,
            "description": "The school year the Term is part of."
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "The start date of the term"
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "description": "The end date of the term"
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchScheduleTerms": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ScheduleTerm"
        ],
        "title": "ScheduleTerms",
        "description": "Wrapper around an array of ScheduleTerms",
        "properties": {
          "ScheduleTerm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchScheduleTerm"
            },
            "description": "<p>Provides information about school terms, tertiary terms etc., either at a national, or provider level, within a school year. If the term is being supplied at a national level, no provider information will be linked.</p>"
          }
        }
      },
      "patchStaffAssignment": {
        "title": "StaffAssignment",
        "description": "<p>Records assignment of a Staff member to a particular role at a Provider or other EducationOrganisation. A staff member can have multiple concurrent roles at Schools (via Provider data object) and Kāhui Ako (via the EducationOrganisation data object); each role would be a separate StaffAssignment record.</p> <p>Role assignments can be restricted to categories of Students with the StaffSubjectList and YearLevelList. This allows for assignment to roles with particular responsibility for general cohorts of students, such as \"Head of Department (Maths)\" or \"Year 8 Student Dean\".</p> <p>While assignment to student contact roles such as Subject Teacher, Homeroom Teacher, Whānau Teacher or House Master is made with this data object; Details of the particular group of specific students the staff member is responsible for are made via the TeachingGroup data object.</p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StaffAssignmentRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StaffAssignmentLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "StaffAssignmentStatus": {
            "$ref": "#/components/schemas/NZCodeSetsStaffAssignmentStatus",
            "readOnly": true
          },
          "StaffMember": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "AssignedLocation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "EmployingOrAccommodatingProvider": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "Description": {
            "type": "string",
            "description": "Short description of the staff member's assignment to the provider."
          },
          "StaffRole": {
            "$ref": "#/components/schemas/NZCodeSetsStaffRole"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "This is the date from which the staff assignment is valid (inclusive)."
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "description": "This is the date through which the staff assignment is valid (inclusive). This can be NULL when the staff member's assignment to a particular role is open-ended."
          },
          "StaffSubjectList": {
            "description": "The set of SubjectArea/LearningAreas the that the staff member is responsible for. e.g. \"Head of Dept (Maths)\" includes students learning any flavour of Mathematics.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "StaffSubject": {
                "type": "array",
                "items": {
                  "description": "This element contains Staff subjects they are eligible to teach together with the teaching preference.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "PreferenceNumber": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "description": "Priority of Subject to Teach."
                    },
                    "Code": {
                      "$ref": "#/components/schemas/NZCodeSetsSubjectArea"
                    },
                    "YearLevels": {
                      "description": "Staff assignment to this particular subject area / learning area applies only for students enrolled in a particular set of year levels. e.g. \"Asst. Head of Dept (Maths, Jnr)\" could ony be responsible for Students in year levels 9 & 10, who are learning Mathematics.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "YearLevel": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "YearLevels": {
            "description": "The set of student Year Levels that the staff member is responsible for. e.g. \"Junior Student Dean\" could have responsibility for all students in year levels 9 & 10.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "YearLevel": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchStaffAssignments": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StaffAssignment"
        ],
        "title": "StaffAssignments",
        "description": "Wrapper around an array of StaffAssignments",
        "properties": {
          "StaffAssignment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchStaffAssignment"
            },
            "description": "<p>Records assignment of a Staff member to a particular role at a Provider or other EducationOrganisation. A staff member can have multiple concurrent roles at Schools (via Provider data object) and Kāhui Ako (via the EducationOrganisation data object); each role would be a separate StaffAssignment record.</p> <p>Role assignments can be restricted to categories of Students with the StaffSubjectList and YearLevelList. This allows for assignment to roles with particular responsibility for general cohorts of students, such as \"Head of Department (Maths)\" or \"Year 8 Student Dean\".</p> <p>While assignment to student contact roles such as Subject Teacher, Homeroom Teacher, Whānau Teacher or House Master is made with this data object; Details of the particular group of specific students the staff member is responsible for are made via the TeachingGroup data object.</p>"
          }
        }
      },
      "patchStaffPersonal": {
        "title": "StaffPersonal",
        "description": "<p>All the personal contact and demographic information relating to a staff member, who might be a teacher or other employee of a Provider.</p> <p>Non personal information relating to the staff member's relationship with Providers is stored in the StaffAssignment data object.</p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StaffPersonalRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StaffPersonalLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "ESLPairwiseId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "SchoolSMSUserId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "PersonInfo": {
            "description": "Personal Information",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Name": {
                "description": "A name used by the person",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Title": {
                    "type": "string",
                    "description": "A title or prefix associated with the name."
                  },
                  "FamilyName": {
                    "type": "string",
                    "description": "Also known as Last Name, although some cultures may not present a family name as the last name."
                  },
                  "GivenName": {
                    "type": "string",
                    "description": "Also known as First Name, although some cultures may not present this name as the first element in a name. May contain a composite of all given names."
                  },
                  "MiddleName": {
                    "type": "string",
                    "description": "Where more than one Given Name, these may be combined in one composite field or else populated in several elements."
                  },
                  "SecondMiddleName": {
                    "type": "string",
                    "description": "Middle names can be sent altogether in one element or if the source system has more than one middle name field, they can be spread across two elements. SecondMiddleName will either contain no values, or it will hold the person's second and subsequent middle names while MiddleName will hold the person's first middle name."
                  },
                  "FamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredFamilyName": {
                    "type": "string",
                    "description": "A preferred version of the Family Name. Note:A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "PreferredFamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredGivenName": {
                    "type": "string",
                    "description": "A preferred version of the Given Name. Note: A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "Suffix": {
                    "type": "string",
                    "description": "Textual suffix like PHD, JP, BSc."
                  },
                  "FullName": {
                    "type": "string",
                    "description": "A combination of all name elements as one composite text element"
                  },
                  "Type": {
                    "$ref": "#/components/schemas/NZCodeSetsNameUsageType"
                  },
                  "IsVerified": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  }
                }
              },
              "Demographics": {
                "description": "Details of the person’s demographic properties",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "BirthDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The person's date of birth."
                  }
                }
              },
              "Email": {
                "description": "The person's e-mail address(es) - one or more emails.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Personal": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  },
                  "Work": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  }
                }
              },
              "PersonPhoto": {
                "$ref": "#/components/schemas/ObjectReference"
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          },
          "StaffAssignment": {
            "type": "object",
            "description": "<p>Partial <a href=\"#tag/StaffAssignment\">StaffAssignment</a> object, denoting initial role, at the given Organisation for the StaffPersonal upon creation.</p>",
            "required": [
              "StaffRole",
              "StartDate",
              "StaffAssignmentLocalId"
            ],
            "additionalProperties": false,
            "properties": {
              "StaffAssignmentRefId": {
                "$ref": "#/components/schemas/RefId"
              },
              "StaffAssignmentLocalId": {
                "$ref": "#/components/schemas/LocalId"
              },
              "StaffRole": {
                "$ref": "#/components/schemas/NZCodeSetsStaffRole"
              },
              "StartDate": {
                "type": "string",
                "format": "date-time",
                "x-displayAs": "date",
                "description": "<p>This is the date from which the staff assignment is valid (inclusive).</p>"
              },
              "EndDate": {
                "type": "string",
                "format": "date-time",
                "x-displayAs": "date",
                "description": "This is the date through which the staff assignment is valid (inclusive). This can be NULL when the staff member's assignment to a particular role is open-ended.</p>"
              }
            }
          }
        }
      },
      "patchStaffPersonals": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StaffPersonal"
        ],
        "title": "StaffPersonals",
        "description": "Wrapper around an array of StaffPersonals",
        "properties": {
          "StaffPersonal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchStaffPersonal"
            },
            "description": "<p>All the personal contact and demographic information relating to a staff member, who might be a teacher or other employee of a Provider.</p> <p>Non personal information relating to the staff member's relationship with Providers is stored in the StaffAssignment data object.</p>"
          }
        }
      },
      "patchStaffTeachingGroupAssignment": {
        "title": "StaffTeachingGroupAssignment",
        "description": "<p>Records assignment of a Staff member to a particular role with a particular TeachingGroup at a Provider</p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StaffTeachingGroupAssignmentRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StaffTeachingGroupAssignmentLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsStaffTeachingGroupAssignmentStatus",
            "readOnly": true
          },
          "StaffMember": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "TeachingGroup": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "Role": {
            "$ref": "#/components/schemas/NZCodeSetsStaffTeachingGroupRole"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "This is the date from which the staff assignment is valid (inclusive)."
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "description": "This is the date through which the staff assignment is valid (inclusive). This can be NULL when the staff member's assignment to a particular role is open-ended."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchStaffTeachingGroupAssignments": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StaffTeachingGroupAssignment"
        ],
        "title": "StaffTeachingGroupAssignments",
        "description": "Wrapper around an array of StaffTeachingGroupAssignments",
        "properties": {
          "StaffTeachingGroupAssignment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchStaffTeachingGroupAssignment"
            },
            "description": "<p>Records assignment of a Staff member to a particular role with a particular TeachingGroup at a Provider</p>"
          }
        }
      },
      "patchStudentAssessmentTask": {
        "title": "StudentAssessmentTask",
        "description": "<p>Record of a student's attempt at a particular assessment task.</p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentAssessmentTaskRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentAssessmentTaskLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "AssessmentTask": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "StudentAssessmentTaskRegistration": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "OrganisationInvolvedList": {
            "description": "A list of the Providers/Organisations involved and their role, e.g. assessing provider, assessment provider, assessment location provider.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "OrganisationInvolved": {
                "type": "array",
                "items": {
                  "description": "The provider and Location with the assessment task and the role they play, e.g. assessing provider, assessment location provider, assessment provider, registering provider.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/MoEOrgId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object. (optional and read-only)"
                    },
                    "LocationNum": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "description": "Number identifying the individual location within the set of locations used by the Provider."
                    },
                    "OrganisationRole": {
                      "$ref": "#/components/schemas/NZCodeSetsAssessmentProviderRole"
                    }
                  }
                }
              }
            }
          },
          "StaffInvolvedList": {
            "description": "A list of the staff involved and their role in relation to the assessment task, e.g. the staff members that supervise the undertaking of the assessment task by the student.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "StaffInvolved": {
                "type": "array",
                "items": {
                  "description": "The staff member involved with the assessment task and their role, e.g. created the assessment task, moderator, marker.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "LocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object."
                    },
                    "StaffRole": {
                      "$ref": "#/components/schemas/NZCodeSetsAssessmentStaffRole"
                    }
                  }
                }
              }
            }
          },
          "DateTimeAssessmentScheduled": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the student is scheduled to be assessed against the assessment task."
          },
          "DateTimeAssessed": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the student was assessed against the assessment task."
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentStatus"
          },
          "NCEAStatusDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date the current NCEA status was set."
          },
          "AssessmentAttempt": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "description": "The attempt number the student is making to pass this assessment, e.g. is it their first, second attempt."
          },
          "SpecialAssessmentConditionList": {
            "description": "The list of the special assessment conditions that the student is entitled to have when sitting this assessment task.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SpecialAssessmentCondition": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSpecialAssessmentCondition"
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchStudentAssessmentTasks": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentAssessmentTask"
        ],
        "title": "StudentAssessmentTasks",
        "description": "Wrapper around an array of StudentAssessmentTasks",
        "properties": {
          "StudentAssessmentTask": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchStudentAssessmentTask"
            },
            "description": "<p>Record of a student's attempt at a particular assessment task.</p>"
          }
        }
      },
      "patchStudentAssessmentTaskResult": {
        "title": "StudentAssessmentTaskResult",
        "description": "<p>Records the result achieved by a single student at a particular assessment task.</p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentAssessmentTaskResultRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentAssessmentTaskResultLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "AssessmentTask": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "StudentAssessmentTask": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "AssessmentType": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentType"
          },
          "AssessmentMethodology": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentMethodology"
          },
          "OrganisationInvolvedList": {
            "description": "A list of the providers involved and their role, e.g. assessing provider, assessment provider, assessment location provider, registering provider.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "OrganisationInvolved": {
                "type": "array",
                "items": {
                  "description": "The provider and Location with the assessment task and the role they play, e.g. assessing provider, assessment location provider, assessment provider, registering provider.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/MoEOrgId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object. (optional and read-only)"
                    },
                    "LocationNum": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "description": "Number identifying the individual location within the set of locations used by the Provider."
                    },
                    "OrganisationRole": {
                      "$ref": "#/components/schemas/NZCodeSetsAssessmentProviderRole"
                    }
                  }
                }
              }
            }
          },
          "StaffInvolvedList": {
            "description": "A list of the staff involved and their role in relation to the assessment task, e.g. the moderator, the marker.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "StaffInvolved": {
                "type": "array",
                "items": {
                  "description": "The staff member involved with the assessment task and their role, e.g. created the assessment task, moderator, marker.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "LocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object."
                    },
                    "StaffRole": {
                      "$ref": "#/components/schemas/NZCodeSetsAssessmentStaffRole"
                    }
                  }
                }
              }
            }
          },
          "ProviderCourse": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "LearningStandardList": {
            "description": "A list of references to the LearningStandards the assessment task result is related to.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "LearningStandardRefId": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LocalId"
                }
              }
            }
          },
          "SubjectAreaList": {
            "description": "A list of the subject areas that the assessment pertains to.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSubjectArea"
                }
              },
              "NCEASubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsNCEASubjectArea"
                }
              }
            }
          },
          "AssessedAtYearLevel": {
            "type": "integer",
            "description": "Year Level of the Assessment Task the student is being assessed against. May only contain the values 1 through to 13 inclusive.",
            "minimum": 1,
            "maximum": 13
          },
          "Curriculum": {
            "$ref": "#/components/schemas/NZCodeSetsCurriculum"
          },
          "AssessmentToolUsed": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentTool"
          },
          "AssessmentToolTest": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentToolTest"
          },
          "Timeframe": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentTimeframe"
          },
          "AssessmentAttempt": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "description": "The attempt number the student is making to pass this assessment, e.g. is it their first, second attempt."
          },
          "EvaluationType": {
            "$ref": "#/components/schemas/NZCodeSetsAssessmentEvaluationType"
          },
          "StandardType": {
            "$ref": "#/components/schemas/NZCodeSetsLearningStandardType"
          },
          "DateMarked": {
            "type": "string",
            "format": "date-time",
            "description": "Date the assessment task was marked."
          },
          "DateTimeAssessed": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the student was assessed against the assessment task."
          },
          "DateStudentNotified": {
            "type": "string",
            "format": "date-time",
            "description": "The date the student was notified of their final mark for the assessment task."
          },
          "Published": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "PublishedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the assessment task result was first published in a report."
          },
          "Iteration": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "description": "The iteration of this result for the assessment, e.g. some tasks require multiple assessments before being achieved."
          },
          "CreditsAchieved": {
            "type": "number",
            "description": "The number of credits the student achieved."
          },
          "ResultScoreList": {
            "description": "A list of the assessment result scores that the student received for this assessment task.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ResultScore": {
                "type": "array",
                "items": {
                  "description": "An individual result score for the assessment task.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ScoreType": {
                      "$ref": "#/components/schemas/NZCodeSetsScoreType"
                    },
                    "Competency": {
                      "type": "string",
                      "description": "String describing a particular competency that is being reported in the assessment."
                    },
                    "ScoreMetric": {
                      "$ref": "#/components/schemas/NZCodeSetsScoreMetric"
                    },
                    "ScoreValue": {
                      "type": "string",
                      "description": "The score the student received for assessment task against that metric. If the result score is for an NZQA or International Baccalaureate then the ScoreResultCode using the enumeration NZCodeSetsAssessmentResultType must be used instead."
                    },
                    "ScoreMax": {
                      "type": "number",
                      "description": "The maximum value possible for the score."
                    },
                    "ItemNumber": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "description": "The Item within an NZQA Assessment Task that the score is for. When a marker marks an external assessment (a paper for a standard in an examination, for example) they provide a score of 0-8 for each item (question) in the paper. Typically a paper will have 3 items for a total score of 24. However there can be more items than this. The individual item scores, and the total are then sent back to NZQA’s eQA system from the marking application."
                    }
                  }
                }
              }
            }
          },
          "Weight": {
            "type": "number",
            "description": "Weight placed upon this result"
          },
          "EffortComment": {
            "type": "string",
            "description": "Free text comment about the effort the student made for the assessment."
          },
          "OtherComment": {
            "type": "string",
            "description": "Free text comments providing additional information for the students assessment result."
          },
          "DocumentList": {
            "description": "List which describes the meta-data for, and the Location of any associated documents.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Document": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchStudentAssessmentTaskResults": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentAssessmentTaskResult"
        ],
        "title": "StudentAssessmentTaskResults",
        "description": "Wrapper around an array of StudentAssessmentTaskResults",
        "properties": {
          "StudentAssessmentTaskResult": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchStudentAssessmentTaskResult"
            },
            "description": "<p>Records the result achieved by a single student at a particular assessment task.</p>"
          }
        }
      },
      "patchStudentAttainment": {
        "title": "StudentAttainment",
        "description": "<p>Records a student gaining an Attainment e.g. NCEA Qualification, Learning Standard etc.</p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentAttainmentRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentAttainmentLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "GrantingOrganisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "Attainment": {
            "$ref": "#/components/schemas/NamedObjectReference"
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "AuthorisingStaffMember": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "DateAttained": {
            "type": "string",
            "format": "date-time",
            "description": "The date the student achieved the attainment."
          },
          "YearAttained": {
            "type": "integer",
            "minimum": 1,
            "maximum": 9999,
            "description": "The year the student achieved the attainment."
          },
          "JustificationList": {
            "description": "A list of references identifying the assessment task results that justify the student achieving this attainment.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Justification": {
                "type": "array",
                "items": {
                  "description": "Details of an assessment task result or other student attainment that justifies the student achieving this attainment.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "LocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object."
                    },
                    "ObjectType": {
                      "$ref": "#/components/schemas/NZCodeSetsReferrableDataObjects"
                    },
                    "AssessmentType": {
                      "$ref": "#/components/schemas/NZCodeSetsAssessmentType"
                    },
                    "Result": {
                      "type": "string",
                      "description": "The final result of the assessment task that justifies the attainment."
                    },
                    "Date": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date the justifying assessment task was achieved."
                    },
                    "CreditValue": {
                      "type": "number",
                      "description": "The number of credits the justifying assessment task contributes towards this attainment."
                    }
                  }
                }
              }
            }
          },
          "SubjectAreaList": {
            "description": "Code denoting the Learning or Subject Area the assessment task is for.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSubjectArea"
                }
              },
              "NCEASubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsNCEASubjectArea"
                }
              }
            }
          },
          "EndorsementLevel": {
            "$ref": "#/components/schemas/NZCodeSetsNCEAEndorsementLevel"
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchStudentAttainments": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentAttainment"
        ],
        "title": "StudentAttainments",
        "description": "Wrapper around an array of StudentAttainments",
        "properties": {
          "StudentAttainment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchStudentAttainment"
            },
            "description": "<p>Records a student gaining an Attainment e.g. NCEA Qualification, Learning Standard etc.</p>"
          }
        }
      },
      "patchStudentAttendanceTimeList": {
        "title": "StudentAttendanceTimeList",
        "description": "<p>This object provides more detail about the attendance spans for a single student during the day: it provides more detailed information than the single TimeIn and TimeOut elements in StudentDailyAttendance.</p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "AttendanceTimeList": {
            "description": "Breakdown of times that the student was recorded as being present or absent from school or class.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AttendanceTime": {
                "type": "array",
                "items": {
                  "description": "Time span that the student entered or returned to school",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "AttendanceTimeRefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "AttendanceTimeLocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "TeachingGroup": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "AttendanceType": {
                      "$ref": "#/components/schemas/NZCodeSetsAttendanceType"
                    },
                    "AttendanceCodeGroup": {
                      "$ref": "#/components/schemas/NZCodeSetsAttendanceCodeGroup"
                    },
                    "Code": {
                      "$ref": "#/components/schemas/NZCodeSetsAttendanceCode"
                    },
                    "AttendanceDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date the attendance is being record for."
                    },
                    "SchedulePeriod": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "StartTime": {
                      "type": "string",
                      "format": "time",
                      "description": "The Start Time of the students attendance for the provided Attendance Date. Mandatory for attendance records with a type of 'Ad Hoc'."
                    },
                    "EndTime": {
                      "type": "string",
                      "format": "time",
                      "description": "The End Time of the students attendance for the provided Attendance Date. Mandatory for attendance records with a type of 'Ad Hoc'."
                    },
                    "SubmissionDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date the students attendance for this date and time/period was submitted."
                    },
                    "Note": {
                      "type": "string",
                      "description": "Free text note about the students attendance for the provided date and time/period."
                    },
                    "RecordAudit": {
                      "$ref": "#/components/schemas/RecordAudit",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patchStudentAttendanceTimeLists": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentAttendanceTimeList"
        ],
        "title": "StudentAttendanceTimeLists",
        "description": "Wrapper around an array of StudentAttendanceTimeLists",
        "properties": {
          "StudentAttendanceTimeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchStudentAttendanceTimeList"
            },
            "description": "<p>This object provides more detail about the attendance spans for a single student during the day: it provides more detailed information than the single TimeIn and TimeOut elements in StudentDailyAttendance.</p>"
          }
        }
      },
      "patchStudentContactPersonal": {
        "title": "StudentContactPersonal",
        "description": "Information about a Student's whānau member.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentContactPersonalRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentContactPersonalLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "PersonInfo": {
            "description": "Personal Information collected about the StudentContact, when that contact is a member of the Student's whānau.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Name": {
                "description": "A name used by the person",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Title": {
                    "type": "string",
                    "description": "A title or prefix associated with the name."
                  },
                  "FamilyName": {
                    "type": "string",
                    "description": "Also known as Last Name, although some cultures may not present a family name as the last name."
                  },
                  "GivenName": {
                    "type": "string",
                    "description": "Also known as First Name, although some cultures may not present this name as the first element in a name. May contain a composite of all given names."
                  },
                  "MiddleName": {
                    "type": "string",
                    "description": "Where more than one Given Name, these may be combined in one composite field or else populated in several elements."
                  },
                  "SecondMiddleName": {
                    "type": "string",
                    "description": "Middle names can be sent altogether in one element or if the source system has more than one middle name field, they can be spread across two elements. SecondMiddleName will either contain no values, or it will hold the person's second and subsequent middle names while MiddleName will hold the person's first middle name."
                  },
                  "FamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredFamilyName": {
                    "type": "string",
                    "description": "A preferred version of the Family Name. Note:A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "PreferredFamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredGivenName": {
                    "type": "string",
                    "description": "A preferred version of the Given Name. Note: A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "Suffix": {
                    "type": "string",
                    "description": "Textual suffix like PHD, JP, BSc."
                  },
                  "FullName": {
                    "type": "string",
                    "description": "A combination of all name elements as one composite text element"
                  },
                  "Type": {
                    "$ref": "#/components/schemas/NZCodeSetsNameUsageType"
                  },
                  "IsVerified": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  }
                }
              },
              "Address": {
                "description": "The person's address(es) - one or more addresses.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Physical": {
                    "description": "The person or organisation's physical address",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Type": {
                        "$ref": "#/components/schemas/NZCodeSetsAddressType"
                      },
                      "Line1": {
                        "type": "string",
                        "description": "Address line 1."
                      },
                      "Line2": {
                        "type": "string",
                        "description": "Address line 2."
                      },
                      "Line3": {
                        "type": "string",
                        "description": "Address line 3."
                      },
                      "Line4": {
                        "type": "string",
                        "description": "Address line 4."
                      },
                      "Suburb": {
                        "type": "string",
                        "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                      },
                      "City": {
                        "type": "string",
                        "description": "The city part of the address."
                      },
                      "StateProvince": {
                        "type": "string",
                        "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                      },
                      "Country": {
                        "type": "string",
                        "description": "The country code."
                      },
                      "PostalCode": {
                        "type": "string",
                        "description": "The ZIP/postal code."
                      },
                      "GridLocation": {
                        "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "Latitude": {
                            "type": "number",
                            "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                            "minimum": -90,
                            "maximum": 90
                          },
                          "Longitude": {
                            "type": "number",
                            "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                            "minimum": -180,
                            "maximum": 180
                          }
                        }
                      },
                      "StatisticalAreaList": {
                        "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "StatisticalArea": {
                            "type": "array",
                            "items": {
                              "description": "A particular statistical area defined by Statistics New Zealand.",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "SpatialUnitType": {
                                  "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                },
                                "Code": {
                                  "type": "string",
                                  "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Postal": {
                    "description": "The person or organisation's postal address",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Type": {
                        "$ref": "#/components/schemas/NZCodeSetsAddressType"
                      },
                      "Line1": {
                        "type": "string",
                        "description": "Address line 1."
                      },
                      "Line2": {
                        "type": "string",
                        "description": "Address line 2."
                      },
                      "Line3": {
                        "type": "string",
                        "description": "Address line 3."
                      },
                      "Line4": {
                        "type": "string",
                        "description": "Address line 4."
                      },
                      "Suburb": {
                        "type": "string",
                        "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                      },
                      "City": {
                        "type": "string",
                        "description": "The city part of the address."
                      },
                      "StateProvince": {
                        "type": "string",
                        "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                      },
                      "Country": {
                        "type": "string",
                        "description": "The country code."
                      },
                      "PostalCode": {
                        "type": "string",
                        "description": "The ZIP/postal code."
                      },
                      "GridLocation": {
                        "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "Latitude": {
                            "type": "number",
                            "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                            "minimum": -90,
                            "maximum": 90
                          },
                          "Longitude": {
                            "type": "number",
                            "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                            "minimum": -180,
                            "maximum": 180
                          }
                        }
                      },
                      "StatisticalAreaList": {
                        "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "StatisticalArea": {
                            "type": "array",
                            "items": {
                              "description": "A particular statistical area defined by Statistics New Zealand.",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "SpatialUnitType": {
                                  "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                },
                                "Code": {
                                  "type": "string",
                                  "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Email": {
                "description": "The person's e-mail address(es) - one or more emails.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Personal": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  },
                  "Work": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  }
                }
              },
              "Phone": {
                "description": "The person's phone number(s) - one or more phone numbers.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Home": {
                    "description": "A person's home number.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "Number": {
                        "type": "string",
                        "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                      },
                      "Extension": {
                        "type": "string",
                        "description": "Phone number extension."
                      }
                    }
                  },
                  "Work": {
                    "description": "A person's work number.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "Number": {
                        "type": "string",
                        "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                      },
                      "Extension": {
                        "type": "string",
                        "description": "Phone number extension."
                      }
                    }
                  },
                  "Mobile": {
                    "description": "A person's mobile number.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "Number": {
                        "type": "string",
                        "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                      },
                      "Extension": {
                        "type": "string",
                        "description": "Phone number extension."
                      }
                    }
                  }
                }
              },
              "PersonPhoto": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "MedicalNeedList": {
                "description": "A list of a persons known medical needs.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "MedicalNeed": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ObjectReference"
                    }
                  }
                }
              }
            }
          },
          "HealthcareServiceInfo": {
            "description": "Information about the StudentContact, when that contact is a healthcare service. Details about the actual healthcare pratitioner are kept in the PersonInfo fields.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "OrganisationName": {
                "type": "string",
                "description": "The name of the healthcare service, eg: 'Martinborough Health Centre'"
              },
              "OrganisationPhoneNum": {
                "type": "string",
                "description": "The name phone number of the healthcare service"
              },
              "Notes": {
                "type": "string",
                "description": "Who at the healthservice is the Student's regular e.g. 'Dr Phillips'"
              },
              "Type": {
                "$ref": "#/components/schemas/NZCodeSetsHealthcareServiceType"
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchStudentContactPersonals": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentContactPersonal"
        ],
        "title": "StudentContactPersonals",
        "description": "Wrapper around an array of StudentContactPersonals",
        "properties": {
          "StudentContactPersonal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchStudentContactPersonal"
            },
            "description": "Information about a Student's whānau member."
          }
        }
      },
      "patchStudentContactRelationship": {
        "title": "StudentContactRelationship",
        "description": "<p>A relationship between a person who is part of a Student's whānau and that Student. Relationship properties include the relationship type and roles played by the student contact in respect of the student.</p> <p>Individual details about the student and student contact are provided in other data objects - StudentPersonal and StudentContactPersonal respectively.</p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentContactRelationshipRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentContactRelationshipLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsStudentContactRelationshipStatus",
            "readOnly": true
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the relationship between the student and contact was recorded."
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the relationship between the student and contact was removed."
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "StudentContact": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "Relationship": {
            "description": "Defines the relationship of the contact to the student.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Code": {
                "$ref": "#/components/schemas/NZCodeSetsRelationshipToStudent"
              },
              "OtherTypeDescription": {
                "type": "string",
                "description": "A free text description of relationship type, where Relationship To Student Type is set to ‘Other’, eg ‘Au-pair’, ‘Neighbour’"
              }
            }
          },
          "LanguageUsed": {
            "$ref": "#/components/schemas/NZCodeSetsLanguage"
          },
          "HouseholdList": {
            "description": "A list of one or more household identifiers indicating the households associated with this relationship.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "HouseholdId": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LocalId"
                }
              }
            }
          },
          "ContactFlags": {
            "description": "Contains characteristics of the contact person's role with the Student. At least one of the flags must be populated with a 'Yes' value.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ParentLegalGuardian": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "LivesWith": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "AccessToRecords": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "ReceivesAssessmentReport": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "EmergencyContact": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "CivilEmergencyContact": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "CivilDefenceEmergencyContact": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "DisciplinaryContact": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "AttendanceContact": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "PrimaryCareProvider": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "FeesBilling": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "FeesAccess": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "FamilyMail": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "CourtOrder": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              },
              "HealthContact": {
                "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
              }
            }
          },
          "ContactSequence": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295,
            "description": "Number indicating the order in which the student contact should be contacted."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchStudentContactRelationships": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentContactRelationship"
        ],
        "title": "StudentContactRelationships",
        "description": "Wrapper around an array of StudentContactRelationships",
        "properties": {
          "StudentContactRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchStudentContactRelationship"
            },
            "description": "<p>A relationship between a person who is part of a Student's whānau and that Student. Relationship properties include the relationship type and roles played by the student contact in respect of the student.</p> <p>Individual details about the student and student contact are provided in other data objects - StudentPersonal and StudentContactPersonal respectively.</p>"
          }
        }
      },
      "patchStudentLearningSupport": {
        "title": "StudentLearningSupport",
        "description": "<p>Provides information about a student's learning support.</p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentLearningSupportRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentLearningSupportLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "LearnerStatus": {
            "$ref": "#/components/schemas/NZCodeSetsLearningSupportLearnerStatus"
          },
          "LearnerArchivedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the learner's learning support status was changed from Active to Archived."
          },
          "StudentConsentList": {
            "description": "A list of the consents the student has provided / not provided in regards to learning support, e.g. Cluster Sharing COnsent, Recieve Service Consent.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "StudentConsent": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "DyslexiaScreeningTool": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "OtherScreening": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "OtherScreeningDetail": {
            "type": "string",
            "description": "Free text describing any other type of screening the student has undergone. Mandatory if 'OtherScreening' = 'Y'."
          },
          "AdolescentHealthScreening": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "NonAttendance": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "NewToNewZealand": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "NumberOfSchoolChanges": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "B4SchoolCheck": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "OtherFamilyContext": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "OtherFamilyContextDetail": {
            "type": "string",
            "description": "Additional free text detail about any family context that pertains to the student and their needs. Mandatory if OtherStudentContext = 'Y'."
          },
          "StudentVoiceList": {
            "description": "A list of the student's or their whānau's voice about their learning support in regards to the student 's interests, goals, and voice (comments, opinions).",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "StudentVoice": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "SupportNeedList": {
            "description": "A list of learning support needs that have been identified for the student.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SupportNeed": {
                "type": "array",
                "items": {
                  "description": "A learning support need that has been identified for the student.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "Need": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "ResponseList": {
                      "description": "A list of responses made about a learning support need.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Response": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ObjectReference"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "LearnerInterests": {
            "type": "string",
            "description": "Free text that describes the interests a learner has that pertains to this wellbeing Characteristic."
          },
          "LearnerWhanauGoal": {
            "type": "string",
            "description": "Free text describing any goals the student wants to achieve, or any goals their whānau want them to achieve that pertain to this wellbeing characteristic."
          },
          "LearnerWhanauVoice": {
            "type": "string",
            "description": "Free text capturing the learners and/or their whānaus opinions and point of view in regards to this wellbeing characteristic."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchStudentLearningSupports": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentLearningSupport"
        ],
        "title": "StudentLearningSupports",
        "description": "Wrapper around an array of StudentLearningSupports",
        "properties": {
          "StudentLearningSupport": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchStudentLearningSupport"
            },
            "description": "<p>Provides information about a student's learning support.</p>"
          }
        }
      },
      "patchStudentLearningSupportResponse": {
        "title": "StudentLearningSupportResponse",
        "description": "<p>Provides information about a response provided for a students learning support need.</p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentLearningSupportResponseRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentLearningSupportResponseLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "LearningSupportNeed": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "ResponseType": {
            "$ref": "#/components/schemas/NZCodeSetsLearningSupportResponseType"
          },
          "ResponseDetail": {
            "$ref": "#/components/schemas/NZCodeSetsLearningSupportResponseDetail"
          },
          "ReviewDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the response is due to be reviewed."
          },
          "ResponseGoals": {
            "type": "string",
            "description": "The goals of the response in relation to the student's learning support need."
          },
          "ResponseNote": {
            "type": "string",
            "description": "Free text notes about the response."
          },
          "NoteList": {
            "description": "A list of notes that have been written about the learning support response.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Note": {
                "type": "array",
                "items": {
                  "description": "A free text note about the associated subject matter.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "Note": {
                      "type": "string",
                      "description": "Free text note."
                    },
                    "CreatedDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the note was created."
                    },
                    "LastUpdatedDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the note was last updated."
                    },
                    "CreatedBy": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "LastUpdatedBy": {
                      "$ref": "#/components/schemas/ObjectReference"
                    }
                  }
                }
              }
            }
          },
          "ResponseDesc": {
            "type": "string",
            "description": "Free text description about the response type and detail. Mandatory when a response detail of 'Other' is selected."
          },
          "TierOfResponse": {
            "$ref": "#/components/schemas/NZCodeSetsLearningSupportResponseTier"
          },
          "ExternalResponse": {
            "description": "Additional information for an external response.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Provider": {
                "$ref": "#/components/schemas/NZCodeSetsLearningSupportExternalProvider"
              },
              "ProviderDetail": {
                "type": "string",
                "description": "Additional information about a provider."
              },
              "Status": {
                "$ref": "#/components/schemas/NZCodeSetsLearningSupportExtResponseStatus"
              },
              "MOESpecialistService": {
                "$ref": "#/components/schemas/NZCodeSetsMoESpecialistService"
              },
              "FundedBy": {
                "$ref": "#/components/schemas/NZCodeSetsLearningSupportExternalFunder"
              },
              "FundedByDetail": {
                "type": "string",
                "description": "Additional detail about a funder."
              },
              "RequestMadeDate": {
                "type": "string",
                "format": "date-time",
                "description": "The date the request about funding was made."
              },
              "FundingStatus": {
                "$ref": "#/components/schemas/NZCodeSetsLearningSupportFundingStatus"
              },
              "FundingDeclinedReason": {
                "type": "string",
                "description": "The reason funding was declined."
              }
            }
          },
          "InternalResponse": {
            "description": "Additional information for an internal response.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ProvidedBy": {
                "$ref": "#/components/schemas/NZCodeSetsLearningSupportInternalProvider"
              },
              "ProvidedByName": {
                "type": "string",
                "description": "The name of the person providing the response. Mandatory to be provided when the ProvidedBy = 'Teacher'."
              },
              "Status": {
                "$ref": "#/components/schemas/NZCodeSetsLearningSupportIntResponseStatus"
              },
              "FundedBy": {
                "$ref": "#/components/schemas/NZCodeSetsLearningSupportInternalFunder"
              }
            }
          },
          "ReviewList": {
            "description": "A list of the reviews made about the response.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Review": {
                "type": "array",
                "items": {
                  "description": "A review of a support need response.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "Reviewer": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "ReviewDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date of the review."
                    },
                    "ReviewComments": {
                      "type": "string",
                      "description": "Free text comment about the review."
                    },
                    "NextReviewDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date of the next review."
                    },
                    "AttachmentList": {
                      "description": "A list of attachments related to a learning support need response review.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Document": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ObjectReference"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "AttachmentList": {
            "description": "A list of attachments associated to the learning support need response.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Document": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "CompletionDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the response was completed."
          },
          "Outcome": {
            "$ref": "#/components/schemas/NZCodeSetsLearningSupportResponseOutcome"
          },
          "OutcomeComment": {
            "type": "string",
            "description": "Free text comment about the outcome of the response made for the students learning support need."
          },
          "ClosureStatus": {
            "$ref": "#/components/schemas/NZCodeSetsLearningSupportResponseClosureStatus"
          },
          "ClosureStatusDetail": {
            "type": "string",
            "description": "Additional detail about the responses closure status."
          },
          "CompletionNote": {
            "type": "string",
            "description": "Free text notes about the completion of the response to the students learning support need."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchStudentLearningSupportResponses": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentLearningSupportResponse"
        ],
        "title": "StudentLearningSupportResponses",
        "description": "Wrapper around an array of StudentLearningSupportResponses",
        "properties": {
          "StudentLearningSupportResponse": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchStudentLearningSupportResponse"
            },
            "description": "<p>Provides information about a response provided for a students learning support need.</p>"
          }
        }
      },
      "patchStudentPersonal": {
        "title": "StudentPersonal",
        "description": "Contains all the personal information related to the student.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentPersonalRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentPersonalLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "NationalStudentNumber": {
            "description": "The unique identifier allocated to every student in New Zealand, also known as the NSN.",
            "type": "string",
            "pattern": "^[0-9]{1,10}$"
          },
          "NZQAStudentId": {
            "type": "string",
            "description": "NZQA's unique identifier for a student who has been registered for assessments to be conducted against the NZQA framework to achieve unit/achievement standards and national qualifications."
          },
          "FirstNZSchoolingDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date a student first ever started schooling in New Zealand. This field is used to establish most students’ Funding Year Level."
          },
          "EarlyChildhoodEducation": {
            "description": "The type of early childhood education the student received before enrolling in their first school.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Type": {
                "$ref": "#/components/schemas/NZCodeSetsEarlyChildhoodEducationType"
              },
              "HoursAttended": {
                "type": "integer",
                "minimum": -2147483648,
                "maximum": 2147483647,
                "description": "The total number of hours of early childhood education attended, prior to enrolling in their first school."
              }
            }
          },
          "PersonInfo": {
            "description": "Personal Information",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Name": {
                "description": "A name used by the person",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Title": {
                    "type": "string",
                    "description": "A title or prefix associated with the name."
                  },
                  "FamilyName": {
                    "type": "string",
                    "description": "Also known as Last Name, although some cultures may not present a family name as the last name."
                  },
                  "GivenName": {
                    "type": "string",
                    "description": "Also known as First Name, although some cultures may not present this name as the first element in a name. May contain a composite of all given names."
                  },
                  "MiddleName": {
                    "type": "string",
                    "description": "Where more than one Given Name, these may be combined in one composite field or else populated in several elements."
                  },
                  "SecondMiddleName": {
                    "type": "string",
                    "description": "Middle names can be sent altogether in one element or if the source system has more than one middle name field, they can be spread across two elements. SecondMiddleName will either contain no values, or it will hold the person's second and subsequent middle names while MiddleName will hold the person's first middle name."
                  },
                  "FamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredFamilyName": {
                    "type": "string",
                    "description": "A preferred version of the Family Name. Note:A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "PreferredFamilyNameFirst": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  },
                  "PreferredGivenName": {
                    "type": "string",
                    "description": "A preferred version of the Given Name. Note: A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                  },
                  "Suffix": {
                    "type": "string",
                    "description": "Textual suffix like PHD, JP, BSc."
                  },
                  "FullName": {
                    "type": "string",
                    "description": "A combination of all name elements as one composite text element"
                  },
                  "Type": {
                    "$ref": "#/components/schemas/NZCodeSetsNameUsageType"
                  },
                  "IsVerified": {
                    "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                  }
                }
              },
              "OtherNameList": {
                "description": "Previous, alternate or other names or aliases associated with the person.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Name": {
                    "type": "array",
                    "items": {
                      "description": "Extension of BaseNameType including name verification data",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Title": {
                          "type": "string",
                          "description": "A title or prefix associated with the name."
                        },
                        "FamilyName": {
                          "type": "string",
                          "description": "Also known as Last Name, although some cultures may not present a family name as the last name."
                        },
                        "GivenName": {
                          "type": "string",
                          "description": "Also known as First Name, although some cultures may not present this name as the first element in a name. May contain a composite of all given names."
                        },
                        "MiddleName": {
                          "type": "string",
                          "description": "Where more than one Given Name, these may be combined in one composite field or else populated in several elements."
                        },
                        "SecondMiddleName": {
                          "type": "string",
                          "description": "Middle names can be sent altogether in one element or if the source system has more than one middle name field, they can be spread across two elements. SecondMiddleName will either contain no values, or it will hold the person's second and subsequent middle names while MiddleName will hold the person's first middle name."
                        },
                        "FamilyNameFirst": {
                          "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                        },
                        "PreferredFamilyName": {
                          "type": "string",
                          "description": "A preferred version of the Family Name. Note:A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                        },
                        "PreferredFamilyNameFirst": {
                          "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                        },
                        "PreferredGivenName": {
                          "type": "string",
                          "description": "A preferred version of the Given Name. Note: A name cannot have both a Preferred Family and Preferred Given Name within the same Name structure – only one of these fields should be populated. If a person does have both a Preferred Family and Preferred Given Name then this must be populated as a separate Name of type ‘Preferred’."
                        },
                        "Suffix": {
                          "type": "string",
                          "description": "Textual suffix like PHD, JP, BSc."
                        },
                        "FullName": {
                          "type": "string",
                          "description": "A combination of all name elements as one composite text element"
                        },
                        "Type": {
                          "$ref": "#/components/schemas/NZCodeSetsNameUsageType"
                        },
                        "IsVerified": {
                          "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                        },
                        "Verification": {
                          "description": "The verification event that verified the person's name.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "Source": {
                              "$ref": "#/components/schemas/NZCodeSetsVerificationSource"
                            },
                            "DocumentSerialNumber": {
                              "type": "string",
                              "description": "The serial number on the document that was used to verify the name or birthdate."
                            },
                            "DocumentExpiryDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The expiry date on the document that was used to verify the name or birthdate."
                            },
                            "IsConfirmed": {
                              "type": "boolean",
                              "description": "If true then verification has been confirmed by MoE."
                            },
                            "Timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date & time that the VerificationEvent took place."
                            },
                            "Provider": {
                              "$ref": "#/components/schemas/ObjectReference"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Demographics": {
                "description": "Details of the person’s demographic properties",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "BirthDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The person's date of birth."
                  },
                  "Gender": {
                    "$ref": "#/components/schemas/NZCodeSetsGender"
                  },
                  "LanguageList": {
                    "description": "List of languages an individual uses to communicate.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Language": {
                        "type": "array",
                        "items": {
                          "description": "A language that an individual uses to communicate.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "Code": {
                              "$ref": "#/components/schemas/NZCodeSetsLanguage"
                            },
                            "Usage": {
                              "$ref": "#/components/schemas/NZCodeSetsLanguageUsage"
                            },
                            "Dialect": {
                              "type": "string",
                              "description": "Specific dialect of a person's language."
                            },
                            "ProficiencyList": {
                              "description": "A list of the person's proficiency in the language in regards to speaking, reading and writing.",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "Proficiency": {
                                  "type": "array",
                                  "items": {
                                    "description": "The person's proficiency in the language in regards to speaking, reading and writing.",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "Level": {
                                        "$ref": "#/components/schemas/NZCodeSetsLanguageProficiencyLevel"
                                      },
                                      "Type": {
                                        "$ref": "#/components/schemas/NZCodeSetsLanguageProficiencyType"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "EthnicityList": {
                    "description": "One or more ethnic groups with which the person identifies.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Ethnicity": {
                        "type": "array",
                        "items": {
                          "description": "An ethnic group with which the person identifies, and if there is more than one, their order of preference.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": -2147483648,
                              "maximum": 2147483647,
                              "description": "The order of preference for the person's ethnicity."
                            },
                            "Code": {
                              "$ref": "#/components/schemas/NZCodeSetsEthnicity"
                            }
                          }
                        }
                      }
                    }
                  },
                  "IwiAffiliationList": {
                    "description": "A list of one or more iwi with which the person has an affiliation.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Iwi": {
                        "type": "array",
                        "items": {
                          "description": "An iwi the person is affiliated to.",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "Code": {
                              "$ref": "#/components/schemas/NZCodeSetsIwi"
                            },
                            "PreferenceOrderNumber": {
                              "type": "integer",
                              "minimum": -2147483648,
                              "maximum": 2147483647,
                              "description": "Indicates the persons preferred Iwi. The order of preference for the person's Iwi. '1' is their first preference. If left NULL means no preference is set and defers to any Iwi with a preference of '1'."
                            },
                            "HapuAffiliationList": {
                              "description": "A list of one or more affiliations of a person with a Hapū within an Iwi.",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "Hapu": {
                                  "type": "array",
                                  "items": {
                                    "description": "An hapu the person is affiliated to.",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "HapuName": {
                                        "type": "string",
                                        "description": "The name of a Hapū that the person is affiliated with."
                                      },
                                      "PreferenceOrderNumber": {
                                        "type": "integer",
                                        "minimum": -2147483648,
                                        "maximum": 2147483647,
                                        "description": "Indicates the persons preferred Hapu. The order of preference for the person's Hapu. '1' is their first preference. If left NULL means no preference is set and defers to any Hapu with a preference of '1'."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Address": {
                "description": "The person's address(es) - one or more addresses.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Physical": {
                    "description": "The person or organisation's physical address",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Type": {
                        "$ref": "#/components/schemas/NZCodeSetsAddressType"
                      },
                      "Line1": {
                        "type": "string",
                        "description": "Address line 1."
                      },
                      "Line2": {
                        "type": "string",
                        "description": "Address line 2."
                      },
                      "Line3": {
                        "type": "string",
                        "description": "Address line 3."
                      },
                      "Line4": {
                        "type": "string",
                        "description": "Address line 4."
                      },
                      "Suburb": {
                        "type": "string",
                        "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                      },
                      "City": {
                        "type": "string",
                        "description": "The city part of the address."
                      },
                      "StateProvince": {
                        "type": "string",
                        "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                      },
                      "Country": {
                        "type": "string",
                        "description": "The country code."
                      },
                      "PostalCode": {
                        "type": "string",
                        "description": "The ZIP/postal code."
                      },
                      "GridLocation": {
                        "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "Latitude": {
                            "type": "number",
                            "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                            "minimum": -90,
                            "maximum": 90
                          },
                          "Longitude": {
                            "type": "number",
                            "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                            "minimum": -180,
                            "maximum": 180
                          }
                        }
                      },
                      "StatisticalAreaList": {
                        "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "StatisticalArea": {
                            "type": "array",
                            "items": {
                              "description": "A particular statistical area defined by Statistics New Zealand.",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "SpatialUnitType": {
                                  "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                },
                                "Code": {
                                  "type": "string",
                                  "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Postal": {
                    "description": "The person or organisation's postal address",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Type": {
                        "$ref": "#/components/schemas/NZCodeSetsAddressType"
                      },
                      "Line1": {
                        "type": "string",
                        "description": "Address line 1."
                      },
                      "Line2": {
                        "type": "string",
                        "description": "Address line 2."
                      },
                      "Line3": {
                        "type": "string",
                        "description": "Address line 3."
                      },
                      "Line4": {
                        "type": "string",
                        "description": "Address line 4."
                      },
                      "Suburb": {
                        "type": "string",
                        "description": "The suburb part of urban addresses, or the 'RD No' part of rural addresses"
                      },
                      "City": {
                        "type": "string",
                        "description": "The city part of the address."
                      },
                      "StateProvince": {
                        "type": "string",
                        "description": "The state or province code. StateTerritory Code only applicable if a non-New Zealand Address."
                      },
                      "Country": {
                        "type": "string",
                        "description": "The country code."
                      },
                      "PostalCode": {
                        "type": "string",
                        "description": "The ZIP/postal code."
                      },
                      "GridLocation": {
                        "description": "The latitude & longitude of the location. Grid location values are derived from New Zealand Map Grid x,y coordinates and converted to Latitude and Longitude values per the World Geodetic System 1984 (G1762)",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "Latitude": {
                            "type": "number",
                            "description": "Latitude in decimal degrees. Latitudes north of the equator are positive, latitudes south of the equator are negative [ISO 6709].",
                            "minimum": -90,
                            "maximum": 90
                          },
                          "Longitude": {
                            "type": "number",
                            "description": "Longitude in decimal degrees. Longitudes east of the Prime Meridian in Greenwich are positive, longitudes west of the Prime Meridian are negative. The 180th meridian is negative. [ISO 6709]",
                            "minimum": -180,
                            "maximum": 180
                          }
                        }
                      },
                      "StatisticalAreaList": {
                        "description": "A list of Statistical Areas containing the location. The list may contain exactly one StatisticalArea element for each of the following spatial unit types: Ward Urban Area Census Area Unit Māori Electorate Mesh Block General Electorate Territorial Authority Local Board (Auckland Only) Regional Council",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "StatisticalArea": {
                            "type": "array",
                            "items": {
                              "description": "A particular statistical area defined by Statistics New Zealand.",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "SpatialUnitType": {
                                  "$ref": "#/components/schemas/NZCodeSetsSpatialUnitType"
                                },
                                "Code": {
                                  "type": "string",
                                  "description": "A valid value defined by the nominated spatial unit type, defined by Statistics New Zealand in one of the following statistical area defintion standards: Area Unit Statistics NZ Classification of Area Unit 2017 v1.0.0 General Electoral District Statistics NZ General Electoral District 2014 v1.0.0 Community Board Statistics NZ Community Board (codes 07601 - 07621) 2018 v1.0.0 Māori Electoral District Statistics NZ Māori Electoral District 2014 v1.0.0 Mesh Block Statistics NZ Statistical Standard for Meshblock 2018 v1.0.0 Regional Council Statistics NZ Regional Council 2018 v1.0.0 Territorial Authority Statistics NZ Territorial Authority 2018 v1.0.0 Urban Area Statistics NZ Urban Area 2018 v1.0.0 Ward Statistics NZ Ward 2018 v1.0.0"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Email": {
                "description": "The person's e-mail address(es) - one or more emails.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Personal": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  },
                  "Work": {
                    "description": "This element represents an e-mail address of one of a number of types and occurs in objects such as StudentPersonal, StaffPersonal, StudentContactPersonal, etc.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "SourceOrganisation": {
                        "$ref": "#/components/schemas/OrganisationObjectReference"
                      },
                      "Address": {
                        "type": "string",
                        "description": "The actual email address."
                      }
                    }
                  }
                }
              },
              "Phone": {
                "description": "The person's phone number(s) - one or more phone numbers.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Home": {
                    "description": "A person's home number.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "Number": {
                        "type": "string",
                        "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                      },
                      "Extension": {
                        "type": "string",
                        "description": "Phone number extension."
                      }
                    }
                  },
                  "Work": {
                    "description": "A person's work number.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "Number": {
                        "type": "string",
                        "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                      },
                      "Extension": {
                        "type": "string",
                        "description": "Phone number extension."
                      }
                    }
                  },
                  "Mobile": {
                    "description": "A person's mobile number.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "Notes": {
                        "type": "string",
                        "description": "Notes on when / how to use the communication channel. eg: Phone after 4pm"
                      },
                      "PreferenceOrderNumber": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "Preference number indicating an order in which communication channels should be used when contacting person or organisation."
                      },
                      "Usage": {
                        "$ref": "#/components/schemas/NZCodeSetsCommunicationUsage"
                      },
                      "Number": {
                        "type": "string",
                        "description": "Phone number. Free-form, but typical New Zealand formats include: (0##) ###-#### ###-#### +##### ### ####"
                      },
                      "Extension": {
                        "type": "string",
                        "description": "Phone number extension."
                      }
                    }
                  }
                }
              },
              "PersonPhoto": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "MedicalNeedList": {
                "description": "A list of a persons known medical needs.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "MedicalNeed": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ObjectReference"
                    }
                  }
                }
              }
            }
          },
          "BiographicChangeReason": {
            "$ref": "#/components/schemas/NZCodeSetsBiographicChangeReason"
          },
          "CustodyNote": {
            "type": "string",
            "description": "Notes about a students care and custody status."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          },
          "CaregiverList": {
            "description": "<p>Student caregiver details de-normalised from StudentContactPersonal for sLSR on non-SMS integrated schools.</p>",
            "type": "object",
            "required": [
              "Caregiver"
            ],
            "additionalProperties": false,
            "properties": {
              "Caregiver": {
                "description": "<p>Individual caregiver details, de-normalised from StudentContactPersonal for sLSR on non-SMS integrated schools.</p>",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "RelationshipToStudentType"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "EmailAddress": {
                      "type": "string",
                      "description": "Caregiver's email address"
                    },
                    "FirstName": {
                      "type": "string",
                      "description": "Caregiver's first name"
                    },
                    "LastName": {
                      "type": "string",
                      "description": "Caregiver's last name"
                    },
                    "PhoneNumber": {
                      "type": "string",
                      "description": "Caregiver's phone number"
                    },
                    "RelationshipToStudentType": {
                      "$ref": "#/components/schemas/NZCodeSetsRelationshipToStudent"
                    }
                  }
                }
              }
            },
            "readOnly": true
          },
          "StudentProviderEnrolment": {
            "type": "object",
            "description": "<p>Partial <a href=\"#tag/StudentProviderEnrolment\">StudentProviderEnrolment</a> object, denoting enrolment info required for the StudentPersonal upon creation</p>",
            "required": [
              "EntryDate",
              "StudentProviderEnrolmentLocalId"
            ],
            "additionalProperties": false,
            "properties": {
              "StudentProviderEnrolmentRefId": {
                "$ref": "#/components/schemas/RefId"
              },
              "StudentProviderEnrolmentLocalId": {
                "$ref": "#/components/schemas/LocalId"
              },
              "EntryDate": {
                "type": "string",
                "format": "date-time",
                "x-displayAs": "date",
                "description": "<p>The date from when this enrolment is ACTIVE. The date of the student’s first attendance at the provider. If future dated, then the intended first attendance date of the enrolment.</p>"
              },
              "ExitDate": {
                "type": "string",
                "format": "date-time",
                "x-displayAs": "date",
                "description": "<p>The date of a student’s last attendance at the provider.</p>"
              },
              "ECEEnrolment": {
                "type": "object",
                "required": [
                  "ECEYearLevel"
                ],
                "additionalProperties": false,
                "properties": {
                  "ECEYearLevel": {
                    "$ref": "#/components/schemas/NZCodeSetsECEYearLevel"
                  }
                }
              },
              "SchoolEnrolment": {
                "type": "object",
                "required": [
                  "YearLevel",
                  "FundingYearLevel"
                ],
                "additionalProperties": false,
                "properties": {
                  "YearLevel": {
                    "type": "integer",
                    "description": "<p>Represents the year level at which the student is considered to be predominantly taught. For example – Year 10, Year 11. Can only contain the values 1 through to 13 inclusive.</p>",
                    "minimum": 1,
                    "maximum": 13
                  },
                  "FundingYearLevel": {
                    "type": "integer",
                    "description": "<p>Indicates the number of years for which funding has been provided by MoE. Must only contain values from 0 through to 15 inclusive.</p>",
                    "minimum": 0,
                    "maximum": 15
                  }
                }
              }
            }
          }
        }
      },
      "patchStudentPersonals": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentPersonal"
        ],
        "title": "StudentPersonals",
        "description": "Wrapper around an array of StudentPersonals",
        "properties": {
          "StudentPersonal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchStudentPersonal"
            },
            "description": "Contains all the personal information related to the student."
          }
        }
      },
      "patchStudentProviderEnrolment": {
        "title": "StudentProviderEnrolment",
        "description": "<p>A student's association with an education provider for the purpose of receiving educational servics.</p> <p>Provider enrolments span multiple years with the ProviderEnrolment containing one or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentProviderEnrolmentRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentProviderEnrolmentLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "Provider": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "StudentId": {
            "type": "string",
            "description": "A unique identifier assigned to a Student for a period of enrolment by a provider."
          },
          "EntryDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date from when this enrolment is ACTIVE. The date of the student’s first attendance at the provider. If future dated, then the intended first attendance date of the enrolment."
          },
          "ExitDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of a student’s last attendance at the provider."
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsProviderEnrolmentStatus",
            "readOnly": true
          },
          "Exit": {
            "description": "Details of the reasons, and interventions leading up to the student's enrolment being terminated.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Reason": {
                "$ref": "#/components/schemas/NZCodeSetsEnrolmentExitType"
              },
              "PostSchoolActivity": {
                "$ref": "#/components/schemas/NZCodeSetsPostSchoolActivity"
              },
              "InterventionList": {
                "description": "A list of references to Wellbeing Event, Response & Appeal data objects, that record the process of terminating a students enrolment.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "Intervention": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ObjectReference"
                    }
                  }
                }
              },
              "PotentialDestinationSchoolList": {
                "description": "List of potential destination schools for the departing student.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "School": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/OrganisationObjectReference"
                    }
                  }
                }
              }
            }
          },
          "ECEEducationHistoryList": {
            "description": "The list of the types of early childhood education the parent told a primary school that the student received and the hours per week and/or day the student attended.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ECEType": {
                "type": "array",
                "items": {
                  "description": "History of a type of early childhood education the student received and the hours per week and/or day the student attended.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "Type": {
                      "$ref": "#/components/schemas/NZCodeSetsEarlyChildhoodEducationType"
                    },
                    "HoursPerDayAttended": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "description": "The number of hours per day the student attended this ECE Type."
                    },
                    "HoursPerWeekAttended": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "description": "The number of hours per week the student attended this ECE Type."
                    }
                  }
                }
              }
            }
          },
          "EarlyChildhoodEnrolment": {
            "description": "Properties of an enrolment in an early childhood service (WiP).",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ECEYearLevel": {
                "$ref": "#/components/schemas/NZCodeSetsECEYearLevel"
              },
              "Curriculum": {
                "$ref": "#/components/schemas/NZCodeSetsCurriculum"
              }
            }
          },
          "SchoolEnrolmentList": {
            "description": "Properties of an enrolment in a school",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SchoolEnrolment": {
                "type": "array",
                "items": {
                  "description": "Defines information related to a student's enrolment at a school education Provider for a particular academic year (or part thereof)",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "SchoolEnrolmentRefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "SchoolEnrolmentLocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "SchoolCalendarYear": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 9999,
                      "description": "School year for which this enrolment is applicable, expressed as the four-digit year in which the school year ends (eg 2018)."
                    },
                    "StartDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date the student started at the school."
                    },
                    "MembershipType": {
                      "$ref": "#/components/schemas/NZCodeSetsSchoolEnrolmentType"
                    },
                    "YearLevel": {
                      "type": "integer",
                      "description": "Represents the year level at which the student is considered to be predominantly taught. For example – Year 10, Year 11. Can only contain the values 1 through to 13 inclusive.",
                      "minimum": 1,
                      "maximum": 13
                    },
                    "FTE": {
                      "type": "number",
                      "description": "Full-time equivalent numeric value of the student's course load during this enrollment, expressed in decimal form, where 1.00 represents a full-time enrolment.",
                      "minimum": 0,
                      "maximum": 1
                    },
                    "FundingType": {
                      "$ref": "#/components/schemas/NZCodeSetsStudentFundingType"
                    },
                    "FundingYearLevel": {
                      "type": "integer",
                      "description": "Indicates the number of years for which funding has been provided by MoE. Must only contain values from 0 through to 15 inclusive.",
                      "minimum": 0,
                      "maximum": 15
                    },
                    "Curriculum": {
                      "$ref": "#/components/schemas/NZCodeSetsCurriculum"
                    },
                    "LanguageOfInstructionList": {
                      "description": "How much instruction has the student received in which languages?",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Language": {
                          "type": "array",
                          "items": {
                            "description": "The number of hours per week the Learner is taught in a specific language during the enrolment.",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "Code": {
                                "$ref": "#/components/schemas/NZCodeSetsLanguage"
                              },
                              "Level": {
                                "$ref": "#/components/schemas/NZCodeSetsLanguageInstructionLevel"
                              }
                            }
                          }
                        }
                      }
                    },
                    "TimeInImmersion": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "description": "The number of years the student has been in Te Reo Māori immersion education."
                    },
                    "Section9Agreement": {
                      "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
                    },
                    "OngoingResourceScheme": {
                      "$ref": "#/components/schemas/NZCodeSetsOngoingResourceScheme"
                    },
                    "CoEnrolment": {
                      "description": "Describes the student's enrolment with their base school in the case where this enrolment is not a base school enrolment.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "OtherProvider": {
                          "$ref": "#/components/schemas/ObjectReference"
                        },
                        "CoEnrolmentType": {
                          "$ref": "#/components/schemas/NZCodeSetsCoEnrolmentType"
                        },
                        "BehaviouralKeyIssuesNote": {
                          "type": "string",
                          "description": "Free text note of key behavioural issues, made by the client school in relation to the student."
                        },
                        "ClientSchoolConfidentialNote": {
                          "type": "string",
                          "description": "Free text confidential note made by the client school in relation to the student."
                        },
                        "GuardianConfidentialNote": {
                          "type": "string",
                          "description": "Free text confidential note made by the parents/caregivers of the student."
                        }
                      }
                    },
                    "StudentConsentList": {
                      "description": "A list of student consent information.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "StudentConsent": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ObjectReference"
                          }
                        }
                      }
                    },
                    "PreEnrolmentCancellation": {
                      "description": "Details of why the school pre-enrolment was cancelled.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "NotifiedDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date the Student was notified of the cancellation of the pre-enrolment."
                        },
                        "CancellationMethod": {
                          "$ref": "#/components/schemas/NZCodeSetsPreEnrolmentExitType"
                        },
                        "CancellationReason": {
                          "$ref": "#/components/schemas/NZCodeSetsPreEnrolmentCancellationReason"
                        },
                        "CancellationReasonOtherDesc": {
                          "type": "string",
                          "description": "Free text reason the pre-enrolment was cancelled if the cancellation reason of other was selected."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          },
          "ClassTeacherList": {
            "description": "<p>Student's class and teacher details, de-normalised from TeachingGroupEnrolment for sLSR on non-SMS integrated schools.</p>",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "ClassTeacher"
            ],
            "properties": {
              "ClassTeacher": {
                "description": "<p>Individual class and teacher details, de-normalised from TeachingGroupEnrolment for sLSR on non-SMS integrated schools.</p>",
                "type": "object",
                "required": [
                  "ClassRoom"
                ],
                "additionalProperties": false,
                "properties": {
                  "ClassRoom": {
                    "type": "string",
                    "description": ""
                  },
                  "TeacherList": {
                    "type": "object",
                    "description": "<p>List of teachers in a single classroom</p>",
                    "required": [
                      "Teacher"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "Teacher": {
                        "description": "<p>Details of a single teacher in the classroom</p>",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "FirstName": {
                              "type": "string",
                              "description": "Teacher's first or given"
                            },
                            "LastName": {
                              "type": "string",
                              "description": "Teacher's last or family name"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "readOnly": true
          }
        }
      },
      "patchStudentProviderEnrolments": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentProviderEnrolment"
        ],
        "title": "StudentProviderEnrolments",
        "description": "Wrapper around an array of StudentProviderEnrolments",
        "properties": {
          "StudentProviderEnrolment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchStudentProviderEnrolment"
            },
            "description": "<p>A student's association with an education provider for the purpose of receiving educational servics.</p> <p>Provider enrolments span multiple years with the ProviderEnrolment containing one or more ECE, School or Tertiary Enrolment sub-objects for each particular year.</p>"
          }
        }
      },
      "patchStudentTeachingGroupEnrolment": {
        "title": "StudentTeachingGroupEnrolment",
        "description": "<p>Records a student's arrival to and departure from a TeachingGroup.</p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "StudentTeachingGroupEnrolmentRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "StudentTeachingGroupEnrolmentLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsStudentTeachingGroupEnrolmentStatus",
            "readOnly": true
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "TeachingGroup": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the Student's enrolment in the teaching group starts."
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of a student’s enrolment in the teaching group ends."
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchStudentTeachingGroupEnrolments": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "StudentTeachingGroupEnrolment"
        ],
        "title": "StudentTeachingGroupEnrolments",
        "description": "Wrapper around an array of StudentTeachingGroupEnrolments",
        "properties": {
          "StudentTeachingGroupEnrolment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchStudentTeachingGroupEnrolment"
            },
            "description": "<p>Records a student's arrival to and departure from a TeachingGroup.</p>"
          }
        }
      },
      "patchTeachingGroup": {
        "title": "TeachingGroup",
        "description": "<p>Identifies a particular class or other group of students. Such groups can have multiple staff assigned in a variety of roles, may be assigned students from multiple year levels and may be taught multiple courses. </p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "TeachingGroupRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "TeachingGroupLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "ShortName": {
            "type": "string",
            "description": "Short free format label that describes the group."
          },
          "LongName": {
            "type": "string",
            "description": "Longer description if required."
          },
          "GroupType": {
            "$ref": "#/components/schemas/NZCodeSetsTeachingGroupType"
          },
          "Organisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "TeachingOrganisation": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "ScheduleTerm": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "StudentList": {
            "description": "List of Students in this Teaching Group",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Student": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StudentObjectReference"
                }
              }
            },
            "readOnly": true
          },
          "TeacherList": {
            "description": "A List of staff associated with the group – may or may not include the teacher timetabled in the schedule.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "StaffMember": {
                "type": "array",
                "items": {
                  "description": "The individual staff member as a member of the StaffList and their role.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "RefId": {
                      "$ref": "#/components/schemas/RefId"
                    },
                    "LocalId": {
                      "$ref": "#/components/schemas/LocalId"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The normal descriptive name of the referenced object."
                    },
                    "Role": {
                      "$ref": "#/components/schemas/NZCodeSetsStaffRole"
                    }
                  }
                }
              }
            },
            "readOnly": true
          },
          "CourseList": {
            "description": "List of generic references denoting the Courses the TeachingGroup is being taught.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Course": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "SubjectAreaList": {
            "description": "List of codes denoting the Learning or Subject Areas of the Course the TeachingGroup is being taught.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSubjectArea"
                }
              },
              "NCEASubjectArea": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsNCEASubjectArea"
                }
              }
            }
          },
          "YearLevelList": {
            "description": "For Subject Class teaching groups: the list of codes denoting the Year Levels of the Course the TeachingGroup is being taught. For Roll Class teaching groups, the Year Levels of the students in the roll class group.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "YearLevel": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          }
        }
      },
      "patchTeachingGroups": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "TeachingGroup"
        ],
        "title": "TeachingGroups",
        "description": "Wrapper around an array of TeachingGroups",
        "properties": {
          "TeachingGroup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchTeachingGroup"
            },
            "description": "<p>Identifies a particular class or other group of students. Such groups can have multiple staff assigned in a variety of roles, may be assigned students from multiple year levels and may be taught multiple courses. </p>"
          }
        }
      },
      "patchWellbeingCharacteristic": {
        "title": "WellbeingCharacteristic",
        "description": "<p>Core Wellbeing Characteristic that is integral to the Student. This may be a Medical condition, special needs or a characteristic such as a known disability or any other characteristic or condition that is student specific and impacts their learning.</p>",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "WellbeingCharacteristicRefId": {
            "$ref": "#/components/schemas/RefId",
            "readOnly": true
          },
          "WellbeingCharacteristicLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "Student": {
            "$ref": "#/components/schemas/StudentObjectReference"
          },
          "RecordingProvider": {
            "$ref": "#/components/schemas/OrganisationObjectReference"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "Starting Date for this Characteristic to be noted."
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "description": "End date for this Characteristic to be noted, if there is one."
          },
          "ReviewDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date at which this information should be reviewed."
          },
          "CharacteristicNotes": {
            "type": "string",
            "description": "Text relating to the particular WellbeingCharacteristic."
          },
          "NoteList": {
            "description": "A list of notes that have been written about the wellbeing characteristic.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Note": {
                "type": "array",
                "items": {
                  "description": "A free text note about the associated subject matter.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "Note": {
                      "type": "string",
                      "description": "Free text note."
                    },
                    "CreatedDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the note was created."
                    },
                    "LastUpdatedDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the note was last updated."
                    },
                    "CreatedBy": {
                      "$ref": "#/components/schemas/ObjectReference"
                    },
                    "LastUpdatedBy": {
                      "$ref": "#/components/schemas/ObjectReference"
                    }
                  }
                }
              }
            }
          },
          "Classification": {
            "$ref": "#/components/schemas/NZCodeSetsWellbeingCharacteristicClass"
          },
          "Category": {
            "$ref": "#/components/schemas/NZCodeSetsWellbeingCharacteristicCategory"
          },
          "SubCategory": {
            "$ref": "#/components/schemas/NZCodeSetsWellbeingCharacteristicSubCategory"
          },
          "SubSubCategory": {
            "$ref": "#/components/schemas/NZCodeSetsWellbeingCharacteristicSubSubCategory"
          },
          "SubCategoryDetail": {
            "type": "string",
            "description": "Additional detail about a sub category."
          },
          "CharacteristicPriority": {
            "$ref": "#/components/schemas/NZCodeSetsWellbeingCharacteristicPriority"
          },
          "CaseLead": {
            "$ref": "#/components/schemas/NZCodeSetsLearningSupportCaseLead"
          },
          "CaseLeadOtherDesc": {
            "type": "string",
            "description": "Free text describing the Case Lead Agency when a Case Lead of 'Other' is selected."
          },
          "CaseLeadContactPerson": {
            "type": "string",
            "description": "The name of the contact person for the Case Lead Agency."
          },
          "DailyManagement": {
            "type": "string"
          },
          "EmergencyManagement": {
            "type": "string"
          },
          "EmergencyResponsePlan": {
            "type": "string"
          },
          "Trigger": {
            "type": "string"
          },
          "ConfidentialFlag": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "Alert": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "MedicationList": {
            "description": "A list of the medications required for this Wellbeing Characteristic.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Medication": {
                "type": "array",
                "items": {
                  "description": "The medication, dosage and frequency, required by the student to manage the Wellbeing Characteristic.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "MedicationName": {
                      "type": "string",
                      "description": "Name of medication required for the student."
                    },
                    "Dosage": {
                      "type": "string",
                      "description": "Dosage and strength of medication required for the student."
                    },
                    "Frequency": {
                      "type": "string",
                      "description": "Frequency of Administration."
                    },
                    "AdministrationInformation": {
                      "type": "string",
                      "description": "Information about how the medication is to be administered."
                    },
                    "Method": {
                      "type": "string",
                      "description": "Method of administration."
                    },
                    "MedicationConsentList": {
                      "description": "A list consents that have been provided for administration of a medicine to a student.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "MedicationConsent": {
                          "type": "array",
                          "items": {
                            "description": "Contains information about when, by whom, and who consent was given to for the administration of a medicine to a student.",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "StartDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date from which the student or student caretaker consented to the medicine being administered to the student by a particular individual."
                              },
                              "EndDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date the consent for administration of the medicine ends or is revoked."
                              },
                              "ConsentedBy": {
                                "$ref": "#/components/schemas/ObjectReference"
                              },
                              "ProviderApplicableTo": {
                                "$ref": "#/components/schemas/ObjectReference"
                              },
                              "AdministeredBy": {
                                "$ref": "#/components/schemas/ObjectReference"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "DocumentList": {
            "description": "Describes the Location of any associated documents kept in relation to this Characteristic.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Document": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "WellbeingEventList": {
            "description": "A list of any Wellbeing Events that have arisen as a result of this Characteristic.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "WellbeingEvent": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "WellbeingAlertList": {
            "description": "A list of any Wellbeing Alerts that have arison as a result of this Chracteristic.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "WellbeingAlert": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "SpecialAssessmentConditionList": {
            "description": "A list of the special assessment conditions that a student is entitled to have when sitting an assessment.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SpecialAssessmentCondition": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NZCodeSetsSpecialAssessmentCondition"
                }
              }
            }
          },
          "Status": {
            "$ref": "#/components/schemas/NZCodeSetsWellbeingCharacteristicStatus"
          },
          "MedicalCharacteristicDesc": {
            "type": "string",
            "description": "Free text providing additional information about a medical need of a student. Especially when a medical need of 'Other' is selected."
          },
          "OfficialDiagnosis": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "OfficialDiagnosisList": {
            "description": "A list of official diagnoses that pertains to this wellbeing characteristic. At least one diagnosis is required if OfficialDiagnosis = 'Y'.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "OfficialDiagnosis": {
                "type": "array",
                "items": {
                  "description": "An official diagnosis that pertains to this Wellbeing Characteristic.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "DiagnosisType": {
                      "$ref": "#/components/schemas/NZCodeSetsOfficialDiagnosisType"
                    },
                    "DiagnosisSubType": {
                      "$ref": "#/components/schemas/NZCodeSetsOfficialDiagnosisSubType"
                    },
                    "OfficialDiagnosisDetail": {
                      "type": "string",
                      "description": "Providers additional free text information about an official diagnosis. Mandatory when the Official Diagnosis Type selected is ‘Physical Impairments’, or ‘Medical Conditions’. Mandatory when the Official Diagnosis Sub-Type selected is ‘Other neurodevelopmental disorders/developmental anomalies’, Other mental health disorders’, or ‘Other sensory impairment’."
                    },
                    "DocumentList": {
                      "description": "A list of documents that conatin information that pertain to this official diagnosis.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "Document": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ObjectReference"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "StudentVoiceList": {
            "description": "A list of the student's or their whānau's voice about their wellbeing characteristic in regards to the student 's interests, goals, and voice (comments, opinions).",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "StudentVoice": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "RecordAudit": {
            "$ref": "#/components/schemas/RecordAudit",
            "readOnly": true
          },
          "LearnerInterests": {
            "type": "string",
            "description": "Free text that describes the interests a learner has that pertains to this wellbeing Characteristic."
          },
          "LearnerWhanauGoal": {
            "type": "string",
            "description": "Free text describing any goals the student wants to achieve, or any goals their whānau want them to achieve that pertain to this wellbeing characteristic."
          },
          "LearnerWhanauVoice": {
            "type": "string",
            "description": "Free text capturing the learners and/or their whānaus opinions and point of view in regards to this wellbeing characteristic."
          }
        }
      },
      "patchWellbeingCharacteristics": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "WellbeingCharacteristic"
        ],
        "title": "WellbeingCharacteristics",
        "description": "Wrapper around an array of WellbeingCharacteristics",
        "properties": {
          "WellbeingCharacteristic": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchWellbeingCharacteristic"
            },
            "description": "<p>Core Wellbeing Characteristic that is integral to the Student. This may be a Medical condition, special needs or a characteristic such as a known disability or any other characteristic or condition that is student specific and impacts their learning.</p>"
          }
        }
      },
      "patchSchoolEnrolment": {
        "title": "SchoolEnrolment",
        "description": "Defines information related to a student's enrolment at a school education Provider for a particular academic year (or part thereof)",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "SchoolEnrolmentRefId": {
            "$ref": "#/components/schemas/RefId"
          },
          "SchoolEnrolmentLocalId": {
            "$ref": "#/components/schemas/LocalId"
          },
          "SchoolCalendarYear": {
            "type": "integer",
            "minimum": 1,
            "maximum": 9999,
            "description": "School year for which this enrolment is applicable, expressed as the four-digit year in which the school year ends (eg 2018)."
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the student started at the school."
          },
          "MembershipType": {
            "$ref": "#/components/schemas/NZCodeSetsSchoolEnrolmentType"
          },
          "YearLevel": {
            "type": "integer",
            "description": "Represents the year level at which the student is considered to be predominantly taught. For example – Year 10, Year 11. Can only contain the values 1 through to 13 inclusive.",
            "minimum": 1,
            "maximum": 13
          },
          "FTE": {
            "type": "number",
            "description": "Full-time equivalent numeric value of the student's course load during this enrollment, expressed in decimal form, where 1.00 represents a full-time enrolment.",
            "minimum": 0,
            "maximum": 1
          },
          "FundingType": {
            "$ref": "#/components/schemas/NZCodeSetsStudentFundingType"
          },
          "FundingYearLevel": {
            "type": "integer",
            "description": "Indicates the number of years for which funding has been provided by MoE. Must only contain values from 0 through to 15 inclusive.",
            "minimum": 0,
            "maximum": 15
          },
          "Curriculum": {
            "$ref": "#/components/schemas/NZCodeSetsCurriculum"
          },
          "LanguageOfInstructionList": {
            "description": "How much instruction has the student received in which languages?",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Language": {
                "type": "array",
                "items": {
                  "description": "The number of hours per week the Learner is taught in a specific language during the enrolment.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "Code": {
                      "$ref": "#/components/schemas/NZCodeSetsLanguage"
                    },
                    "Level": {
                      "$ref": "#/components/schemas/NZCodeSetsLanguageInstructionLevel"
                    }
                  }
                }
              }
            }
          },
          "TimeInImmersion": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295,
            "description": "The number of years the student has been in Te Reo Māori immersion education."
          },
          "Section9Agreement": {
            "$ref": "#/components/schemas/NZCodeSetsYesOrNoCategory"
          },
          "OngoingResourceScheme": {
            "$ref": "#/components/schemas/NZCodeSetsOngoingResourceScheme"
          },
          "CoEnrolment": {
            "description": "Describes the student's enrolment with their base school in the case where this enrolment is not a base school enrolment.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "OtherProvider": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "CoEnrolmentType": {
                "$ref": "#/components/schemas/NZCodeSetsCoEnrolmentType"
              },
              "BehaviouralKeyIssuesNote": {
                "type": "string",
                "description": "Free text note of key behavioural issues, made by the client school in relation to the student."
              },
              "ClientSchoolConfidentialNote": {
                "type": "string",
                "description": "Free text confidential note made by the client school in relation to the student."
              },
              "GuardianConfidentialNote": {
                "type": "string",
                "description": "Free text confidential note made by the parents/caregivers of the student."
              }
            }
          },
          "StudentConsentList": {
            "description": "A list of student consent information.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "StudentConsent": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ObjectReference"
                }
              }
            }
          },
          "PreEnrolmentCancellation": {
            "description": "Details of why the school pre-enrolment was cancelled.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "NotifiedDate": {
                "type": "string",
                "format": "date-time",
                "description": "The date the Student was notified of the cancellation of the pre-enrolment."
              },
              "CancellationMethod": {
                "$ref": "#/components/schemas/NZCodeSetsPreEnrolmentExitType"
              },
              "CancellationReason": {
                "$ref": "#/components/schemas/NZCodeSetsPreEnrolmentCancellationReason"
              },
              "CancellationReasonOtherDesc": {
                "type": "string",
                "description": "Free text reason the pre-enrolment was cancelled if the cancellation reason of other was selected."
              }
            }
          },
          "StudentProviderEnrolment": {
            "$ref": "#/components/schemas/ObjectReference"
          }
        }
      },
      "patchSchoolEnrolments": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "SchoolEnrolment"
        ],
        "title": "SchoolEnrolments",
        "description": "Wrapper around an array of SchoolEnrolments",
        "properties": {
          "SchoolEnrolment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/patchSchoolEnrolment"
            },
            "description": "Defines information related to a student's enrolment at a school education Provider for a particular academic year (or part thereof)"
          }
        }
      }
    }
  }
}]]></con:content>
      <con:type>https://swagger.io/openapiv3/specification</con:type>
    </con:part>
  </con:definitionCache>
  <con:endpoints>
    <con:endpoint>https://northern.edsby.co.nz/sif</con:endpoint>
    <con:endpoint>https://nzqa.edsby.co.nz/sif</con:endpoint>
    <con:endpoint>https://southern.edsby.co.nz/sif</con:endpoint>
  </con:endpoints>
  <con:environmentSpec>
    <con:entry environmentId="02e1b66e-5963-4de7-b043-dcb6acc71d67">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
  </con:environmentSpec>
</con:interface>
